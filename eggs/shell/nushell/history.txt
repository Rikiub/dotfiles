helix --health
clear
ls
clear
exit
nu
exit
clear
helix --health
helix --health | table
helix --health | columns
helix --health | detect columns
z media
git log
git log --pretty
git log --pretty="%h|%s|%aN|%aE|%aD" -n 25
git log --pretty="%h|%s|%aD" -n 25
git log --pretty="%h | %s |%aD" -n 25
git log --pretty="%h | %s |%a" -n 25
git log --pretty="%h | %s |%aD" -n 25
git log --pretty="%h | %s" -n 25
git log --pretty="%h | %s" -n 25 | lines
git log --pretty="%h | %s" -n 25 | lines | split columns
git log --pretty="%h | %s" -n 25 | lines | split column
git log --pretty="%h | %s" -n 25 | lines | split column "|"
git log --pretty="%h | %s" -n 25 | lines
git log --pretty="%h | %s" -n 25 | lines | split column "|"
git log --pretty=%h»¦«%s»¦«%aN»¦«%aE»¦«%aD -n 5 | lines | split column "»¦«" commit subject name email date
cat
z ignis
zoxide ignis
zoxide
zoxide init 
zoxide init nu
zoxide init nushell
zoxide init nushell | source
cd ..
cd ~
ls
exa
eza
ls
clear
cd .config/
cd ..
cd .config/ignis
ls
bat
cat options.json
from
cat options.json | from json
open options.json
clear
open options.json
help ls
help open
help commands
help commands | explore
open options.json | explore
open options.json
lutgen
lutgen palette
lutgen palette all
lutgen palette names
lutgen palette names | lines
grid
lutgen palette names | grid
lutgen palette names | lines
lutgen palette names | lines | grid
less
help grid
lutgen palette names | lines | grid --icons --color 
lutgen palette names | lines | grid --width 2
lutgen palette names | lines | grid --width 5
lutgen palette names | lines | grid --width 4
systemd status bluetooth
systemdctl status bluetooth
systemctl status bluetooth
systemctl status bluetooth | lines
systemctl status bluetooth | lines | column
systemctl status bluetooth | lines
systemctl status bluetooth | lines | column ":"
help column
help split
systemctl status bluetooth | lines | split column ":"
systemctl status bluetooth | lines | split column "sus"
systemctl status bluetooth | split column "sus"
systemctl status bluetooth | lines | split column "sus"
systemctl status bluetooth | lines | split column "bluetooth"
systemctl status bluetooth | lines | split column "bluetoothd"
systemctl status bluetooth | lines | split column "bluetoothd[504]:"
lutgen palette names | lines | grid --width 4
lutgen palette names | lines
lutgen palette names | grid
lutgen palette names | lines | split cell-path 
lutgen palette names | list
lutgen palette names | lines | split row 
lutgen palette names | lines | split row ""
lutgen palette names | lines | split row " "
lutgen palette names | lines | grid
lutgen palette names | lines | xd
lutgen palette names | lines | find dark
lutgen palette names | lines | find toky
lutgen palette names | lines | find catppuccin
lutgen palette names | find catppuccin
lutgen palette names | find catppucci
lutgen palette names | find catppuccin
lutgen palette names | rg catppuccin
lutgen palette names | find catppuccin
help ifnd
help find
du
du --help
ls
ls --help
ls --du
help save
help start
ls
ls | from json
ls | from yaml
ls | from toml
ls | lines | from toml
ls | list | from toml
ls | grid | from toml
ls | from text
ls | to json
ls | to toml
ls | to yaml
ls | to toml
ls | to csv
ls | to tsv
ls | to plist
ls | to html
ls | to md
ls | to 
ls | to msgpack 
ls | to nuon
ls | to xml
tutor
tutor begin
ls | select name
tutor tables
ls | select 2
ls | select name
ls | get name
tutor cells
ls | select 4 | get name
ls.4.name
(ls).4.name
tutor expressions
tutor echo
help tuto
help tutor
tutor where
tutor list
tutor block
tutor echo
help url
clear
touch foo
touch bar
ls
ls | rm
rm
help rm
ls | each { rm $in.name }
ls
touch foo
touch bar
ls
ls | each { rm $in.name }
ls
help mv
ls
touch foo
mv foo foo.txt
touch bar.txt
ls
help mkdir
man
clear
ls
mkdir foo/bar
y
yazi
ls
y
yazi
ls
help sort
help sort-by
ls
ls | sort-by $in.name
ls | sort-by type
ls --help
ls *.txt
ls *.txt | each { mv $in foo/bar}
ls *.txt | each { mv $in foo/bar }
ls *.txt | each { mv $in.name foo/bar }
y
yazi
help each
ls
cd ..
ls
rm nu
help rm
rm -r nu/
ls -a
ls
ls --help
ls -l
cd ..
cd config
cd .config
cd ~
cd .config
ls -l
cd .config
ls -l
help ls
ls -d
ls -d -t
ls -d
ls -d -t
ls -d
cd BraveSoftware/
ls -d -t
cd Brave-Browser/
ls -d -t
ls
ls -d
ls | sort-by type
z ignis
clear
exit
clear
ls -a
clear
z 
clear
chsh
clear
cd .config/
ls
cd nu
cd nushell/
ls
yazi
rg history.txt ignis
tldr ignis
tldr ags
tldr nu
tldr rg
rg -f
rg -f history
yazi
bat history.txt
open history.txt
open history.txt | lines
open history.txt | lines | where igni
help where
open history.txt | lines
open history.txt | lines | table
open history.txt | lines | rg 
open history.txt | lines | rg x
open history.txt | rg xd
open history.txt | lines | rg ignis
cd .config/BraveSoftware/
cd ..
clear
clear
ls -a
clear
kill starship
pip
pd
pid
pwd
clear
pid
pi
pd
clear
ls
pd
ls
clear
ls
cler
clear
source starship
clear
## ~/.config/nushell/env.nu<\n>$env.CARAPACE_BRIDGES = 'zsh,fish,bash,inshellisense' # optional<\n>mkdir ~/.cache/carapace<\n>carapace _carapace nushell | save --force ~/.cache/carapace/init.nu<\n><\n>#~/.config/nushell/config.nu<\n>source ~/.cache/carapace/init.nu<\n>
mkdir ~/.cache/carapace
carapace _carapace nushell | save --force ~/.cache/carapace/init.nu
source ~/.cache/carapace/init.nu
clear
z media
source zoxide init
zoxide init nushell | source
source zoxide init nushell
source (zoxide init nushell)
clear
media-dl
clear
ls
cler
clear
ls
clear
ls
cd .config/nushell/
ls
open env.nu
open config.nu
ls
clear
carapace
carapace git 
carapace git nushell
carapace nushell
carapace nushell git
carapace git nushell
carapace git fish
carapace git nushell
carapace git nushell --co
carapace git nushell --commit
carapace git --commit nushell
carapace git nushell
tldr carapace
carapace
echo xd
[1, 2, 3] | echo
[1, 2, 3] | lines
[1 2 3] | lines
[1 2 3] | echo
[1 2 3] | table
[1, 2, 3] | table
[1 2 3] | table
clear
ls
ls --help
ls -a
cler
clear
ls -a
eza
eza --icons
clear
ls
clea
ls
clear
ls
rm --help 
config
config flatten
ls
trash
ls
clear
l
clear
ls
ls | where type == dir
print xd
help print
cd .config/nu
cd .config/nushell/
ls
echo $env
$env | echo
$env | explore
explore $env
help explore
$env | explore
print $env
echo $env
set
$env.XDG_CACHE_HOME = xd
$env.XDG_CACHE_HOME = "xd"
echo $env.XDG_CACHE_HOME
?
help ?
clear
git switch api-separate-progress 
git pull
clear
git pull
git switch api_changes 
git switch cache 
git switch api_changes 
git switch main
git diff main api_changes 
git diff api_changes main 
git switch cache 
git switch main
git diff cache main
ls
clear
ls
git branch --delete api_changes cache 
ls
clear
git branch --remotes 
git branch --delete --remotes origin/cache origin/api_changes 
git branch --delete templates  
git branch
git branch --remotes
clear
git switch api-separate-progress 
clear
git switch main
code .
clear
code .
clear
ls
clear
ls
clear
ls
echo $env
echo $env.BROWSER
clear
code .
clear
git add .
git commit -m "Refact"
clear
git push
clear
git switch api-separate-progress 
ls
clear
git pull
git branch --set-upstream-to=origin/main api-separate-progress
git pull
git switch main
git diff main origin/main 
clear
git log
cd ..
cd media-dl/
ls
clear
ls
git stauts
git status 
git diff main origin/main 
git diff origin/main main
git checkout origin/main 
git log
git revert 13112bfca4757f2b860aaf2e935d7eca94a94b1e
git revert 13112bfca4757f2b860aaf2e935d7eca94a94b1e -m
tldr git revert
git log
tldr git revert
git log
git revert 13112bfca4757f2b860aaf2e935d7eca94a94b1e
git log
git revert d4f714be15572b105dd0ffcc46fd972002be3cbf
git log
git revert 13112bfca4757f2b860aaf2e935d7eca94a94b1e
git revert 13112bfca4757f2b860aaf2e935d7eca94a94b1e -m 
git revert -m 13112bfca4757f2b860aaf2e935d7eca94a94b1e
git revert 13112bfca4757f2b860aaf2e935d7eca94a94b1e -m 1
git log
clear
git restore .
git log
git switch main
git log
git diff origin/main main
git diff main origin/main
git diff origin/main main
clear
pytest
source .venv/bin/activate.nu
.venv/bin/activate.nu
uv venv
rm -r venv
rm -r .venv
uv venv
help overlay
overlay list
overlay use
overlay use .venv/bin/activate.nu
clear
ls
clear
ls
clear
ls
clear
ls
clear
pytest
media-dl
clear
uv sync
media-dl
clear
pytet
pytest
clear
git log
clear
pytest
clea
clear
git add .
git commit -m "Revert merge"
ls
git log
git commit -m "Revert merge"
git ppush
git push
git pull --force
git push
git push --force
git log
clear
deno run 
deno run dev
deno --help
deno install --help
tldr deno 
tldr install
clear
echo $env.
echo $env.XDG_CACHE_HOME
clear
btop
query
clear
query
help query
format
paru -Ss nushell
plugin
plugin add 
inc
plugin use inc
plugin
plugin list
btop
fastfetch 
fastboot 
help fastboot
tldr fastboot
nu-highlight 
help nu-highlight 
z media
ls
z media
clear
ls
cd Documentos
cd ..
cd Documentos/
cd Dev/+Lang/python/media-dl/
clear
open pyproject.toml
open pyproject.toml --raw
open pyproject.toml --raw | nu-highlight 
open media_dl/_ydl.py
open media_dl/_ydl.py | nu-highlight 
clear
btop
fastfetch 
clear
cd ..
cd .config/nushell/
ls
zoxide init nushell
zoxide init nushell 
ls
ls -a
echo $nu.env-path
ls
zoxide init nushell | save ~/xd.nu
ls
bat xd.nu
rm xd.nu
clear
echo $nu.env-path
helix env.nu
helix config.nu
clear
z m
clear
$nu.vendor-autoload-dirs
helix config.nu 
help touch
greet
get
help get
yazi
z
cd .config/nushell/
help path
path
$env.config
$env.config | explore
$env.config
config
config env
config  nu
echo $env.EDITOR
clear
ls
clear
clera
clear
$nu.cache-dir
$nu.is-interactive
$nu.startup-time
clear
safsfas
ls
clear
ls
eza
clear
ls
cd .config
ls
paru -Rns starship
ls
cd .local
cd share/nu
cd share
cd nushell/
ls
clear
ls
clear
ls
clear
ls
git
git log
z media
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
l
clear
ls
clear
ls
clear
ls
l
z nu
ls
helix config.nu 
clear
ls
clear
ls
clear
media-ctl 
cd .local/bin
ls
accent-color-change 
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
cd .config
ls
ls xd
ls *xd
ls .toml
ls *.toml
eza xd
eza *toml
clear
ls
ls | grid
ls
clear
ls
z media
ls
clear
z ifhs
z fish
ls
cler
clear
ls
clear
ls
yazi
yolk sync
config
$env.UV_CACHE_DIR
echo "$env"
echo $env.XDG_CACHE_HOME
$env.XDG_CACHE_HOME
echo $env.XDG_CACHE_HOME
z nush
yazi
echo $HOME
$env.HOME
$env.HOME + "xd"
$env.HOME + "(xd"
$env.HOME + "/xd"
format
help format
tldr nu ls
help format
parse
help parse
help merge
$env
$env.config
config nu
config env
z nu
ls
$env.HISTFILE
$env.XDG_CACHE_HOME
helix env.nu 
$env.CARGO_HOME
lear
cler
clear
ls
yazi
clear
ls
echo $nu.env-path
echo $nu.home-path
echo $env.HOME
echo $carapace_complete
echo $in
config nu
echo $in
echo $nu.data-dir
echo $nu.user-autoload-dirs
echo $nu.vendor-autoload-dirs
z nu
$nu.user-autoload-dirs
z auto
z share
z nu
clear
starship
starship init nushell
starship init nu
$nu.config-path
$nu.env-path
$nu.home-path
$nu.user-autoload-dirs
$nu.user-autoload-dirs.0
starship init nu
starship init nu | save $nu.user-autoload-dirs.0/starship.nu
starship init nu | save $"($nu.user-autoload-dirs.0)/starship.nu"
clear
z nu
clear
echo $env.CAR
$env.CARGO_HOME
echo $env.CAR
echo $env.CARGO_HOME
ls
echo $env.CARGO_HOME
echo $env.HOME
echo $env
echo $env | bat
echo $env | bat -p
$env | explore
exit
z nu
source starship.nu
z nu
overlay use starship.nu 
overlay list
overlay
overlay hide starship.nu
overlay list
z nu
clear
l
clear
ls
paru -Rns zoxide
z nu
paru -S zoxide
caparace
carapace _carapace
carapace _carapace nushell
carapace _carapace nushell | nu-highlight 
carapace _carapace nushell | save $nu.user-autoload-dirs-0 + "/"
carapace _carapace nushell | save $"($nu.user-autoload-dirs.0)/carapace.nu"
which
help path
$env.HOME | path
$env.HOME | path basename
$env.HOME | path dirname 
$env.HOME
"xd" | path dirnmae
"xd" | path dirname 
"xd" | path basename 
"xd" | path 
pñath
$env.HOME | path dirname 
$env.HOME | path
$env.HOME | path exists
$env.HOME | path join "xd"
$env.XDG_CONFIG_HOME
path
$env.XDG_CONFIG_HOME | path
$env.XDG_CONFIG_HOME | path parse
path
path add
help path add
ls
cler
clear
ls
clear
cd .config
ls
gio trash --empty
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ps
clear
ps
ps | explore
ps | where memory
ps | where mem
ps | where mem > 5
ps | where mem > 5mb
ps | where mem > 5gb
ps | where mem > 5mb
ps | where mem > 100mb
ps | where mem > 50mb
ps | where mem > 100mb
btop
ps | where mem > 100mb
clear
ps | where mem > 100mb
z yolk
z fish
cd .config/fish
cd .config
yolk sync
rm ~/.config/starship.toml 
rm -r ~/.local/share/zoxide
yolk sync
cd .config
cd yolk
yolk sync
z yolk
ls
clear
ls
clear
ls
clear
ps
bash
ls -a
ls
clear
bash
clear
ps
ps | where mem > 100mb
ps
ps | where status
ps | where status == ""
ps | where status == "Pending"
ps | where status == "Running"
ps
ps | where status == "Sleeping"
ps
ps | sort
ps | sort-by mem
clear
ps | sort-by mem
ps | sort-by mem and
ps | sort-by mem &&
help sort-by
ps | sort-by mem and sort
ps | sort-by mem | sort-by mem
ps | sort-by mem | where mem > 100mb
clear
ls
clea
clear
ls
clear
ps
ps | where # == 1
ps | where pid 1
ps | where pid == 1
ps | $in.1
ps | $pid.1
ps | $in.pid.1
ps | $in.pid
ps | $current
ps | $it
ps | $in
ps | $in.pid
ps | $in.pid.0
ps | $in.pid.2
ps | $in.pid.3
ps | $in.mem.5
ps | $in.mem.2
ps | sort | $in.mem.2
ps | sort --reverse  | $in.mem.2
ps | sort --reverse  | $in.mem.5
ps | sort --reverse  | $in.mem.1
ps | sort-by mem | $in.mem.1
ps | sort-by mem -r | $in.mem.1
ps | sort-by mem -r | $in.mem.0
ps | sort-by mem -r | $in.mem.1
ps | sort-by mem -r | $in.mem.0 and $in.pid
ps | sort-by mem -r | $in.mem.0 and $in.pid.0
ps | sort-by mem -r | $in.mem.0 | $in.pid.0
ps | sort-by mem -r | $in.mem.0 | $in.pid
ps | sort-by mem -r | $"($in.pid.0) | ($in.mem.0)"
ps | sort-by mem -r | $"PID: ($in.pid.0) | ($in.mem.0)"
ps | sort-by mem -r | $"PID: ($in.pid.0) | MEM: ($in.mem.0)"
help
sys
sys cpu
sys
sys disks
sys
help
sys
sys users
sys users | get sus
help sys users
sys users | get sus
sys users
sys users | $in.sus
sys users | $in.name.sus
sys users | where $in.name == "sus"
sys users | where $name == "sus"
sys users | where name == "sus"
sys users | get name
sys users | get sus
sys users | get name
help
help --find
help
clea
rls
clera
clear
ls
cd Documentos/
paru -Sy nushell
random
random binary
random bool
random
random binary 1
random chars
random uuid
random int
clear
l
ls
clear
ls
ls | where modified > 3
ls | where modified > "a year"
ls | where modified > "year"
ls | where modified > 
date
help date
date now
date humanize
date
clear
date now 
ls
ls | filter
filter
ls | sort
ls | sort-by modified
ls
cd .config/
ls
ls | sort
ls | sort -r
ls | sort-by type
ls | where type == "symlink"
z yolk
ls
clear
ls
starship
starship preset
starship preset "pure-config"
starship preset pure-config
starship preset pure-preset
z .confi
starship preset pure-preset | save starship.toml
starship preset pure-preset | save starship.toml -f
ls
starship preset pure-preset | save -f ~/.config/starship.toml
cd .config/
ls
rg start
fd star
fd starship
ls
starship preset pure-prese | save -f ~/.config/starship.toml
starship preset tokyo-night | save -f ~/.config/starship.toml
ls
clear
ls
clear
ls
starship preset pure-preset | save -f ~/.config/starship.toml
clear
ls
cd .config
cd fish
ls
cd ..
rm -r fish
clear
ls
sortman
sortman --help
help sortman
tldr sortman
ls | sort-by type
ls --help
help ls
ls -D
ls
ls --help
ls -d
cd carapace/
ls
yazi
z media
ls
z nu
yolk edit shell-nu
yolk edit nu
z eggs
ls
cd ..
bat yolk.rhai 
yolk edit shell_nu
config nu
clear
z niri
helix config.kdl 
clear
ls
z top
clear
ls
cd .config
ls
paru
z yolk
ls
yolk sync
cd .config/fish
ls
z share
ls
cd fish/
ls
cd ..
yolk sync
z .config/
ls
mv topgrade.toml yolk/eggs/apps/
yolk sync
yazi
mv git/ yolk/eggs/apps/
yazi
dust BraveSoftware/
clear
yolk sync
clear
yazi
yolk git
yolk git add .
git commit -m "Update"
yolk git commit -m "Update"
yolk git push
clear
z yolk
cd fish
cd eggs/shell_fish/
ls
clear
ave
yolk git add .
yolk git commit -m "Update"
yolk git push
yolk git status
yolk git add .
yolk git commit -m "Update"
yolk git push
clear
ls
clear
yolk git status
helix fish_history 
ls
yolk git add .
git commit -m "Update"
yolk git commit -m "Update"
yolk git push
yolk git status
yolk git add . ; yolk git commit -m "Update" ; yolk git push
helix fish_history 
git log
yolk git log
git diff main 5ee4bdcd5cfcea10bab81fb75115d75bdc6bf38d
yolk git log
l
ls
mv .yolk_git/ .git
git status
clear
git lo
git log
git diff main 5ee4bdcd5cfcea10bab81fb75115d75bdc6bf38d
git log
git diff main 5ee4bdcd5cfcea10bab81fb75115d75bdc6bf38d
git log
git diff main 0aeaeff1187ac5d43ac2d5db171a8bb904a59376
git diff main 5ee4bdcd5cfcea10bab81fb75115d75bdc6bf38d
clear
ls
git lo
git log
git commit --amend --all
git push
git log
git diff main origin/main 
git log
clear
ls
yazi
z yolk
yolk safeguard
ls
ls -a
clear
ls -a
helix yolk.rhai 
clear
paru -Ss gimp
paru -S gimp
clear
btop
cd Público
ls
ps
ps | sort-by mem -r | $"PID: ($in.pid.0) | MEM: ($in.mem.0)"
ps | sort-by mem -r | $"PID: ($in.name.0) | MEM: ($in.mem.0)"
ps | sort-by mem -r | where name == "ignis" | $"PID: ($in.name.0) | MEM: ($in.mem.0)"
ps | sort-by mem -r | where name == "ignis" | $"NAME: ($in.name.0) | MEM: ($in.mem.0)"
ps | where name == "ignis" | $"NAME: ($in.name.0) | MEM: ($in.mem.0)"
btop
clear
fastfetch 
echo $env.EDITOR
btop
ls
paru -Sy nushell
clear
ls
clear
ls
clear
cargo-bloat
config nu
ls
cargo clippy
ls
ls -a
cargo-miri 
cargo 
cargo-bloat 
clear
help export-env
help load-env
{XDG_CACHE_HOME: ""} | load-env
$env.XDG_CACHE_HOME
{XDG_CACHE_HOME: "XD"} | load-env
$env.XDG_CACHE_HOME
export-env
help export-env
help load-env
echo $env.XDG_CONFIG_HOME
ls
echo $env.XDG_CONFIG_HOME
echo $env.CARGO_HOME
echo $env.UV_CACHE_DIR
config env
clear
ls
yazi
clear
ls
clear
yazi
clear
http get https://api.dictionaryapi.dev/api/v2/entries/en
http get https://api.dictionaryapi.dev/api/v2/entries/en/hello
let word = "xd" | http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
const word = "xd" | http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
let word = "hola" | http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
help generate
let word = "hola" |<\n>http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
let word = "hola"<\n>| http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
lsafas
let word = "hellp"<\n>| http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
let word = "hello"<\n>| http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($word)"
$env.word = "hello"<\n>| http get $"https://api.dictionaryapi.dev/api/v2/entries/en/($env.word)"
http get
help http get
help download
help --find download
url
$env.word = "hello"<\n>| http get https://api.dictionaryapi.dev/api/v2/entries/en | url join $env.word
url build-query
url build-query --help
url build-query -h
url
url join -h
url
url split-query -h
url
url parse -h
url
$env.word = "hello"<\n>| http get https://api.dictionaryapi.dev/api/v2/entries/en | path join $env.word
rename
help rename
let word = "hello"<\n>| http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)
let word = "hello"<\n>| http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $in.word)
let word = "hello" | $in.word
let word = "hello" | echo $in.word
let word = "hello"
let word = "hello"; http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $in.word)
let word = "hello"; http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)
let word = "hello";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)
clear
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meaning<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meaning<\n>| explores
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings<\n>| first | <\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings<\n>| first
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | first | get definiton
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | first | get definition
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | first | get definitions
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | first
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | first | get definitions
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }<\n>| table
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }<\n>| table -e
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }<\n>| $in.xd
filter
help filter
help --find find
du
help du
du .cache
du .confi
du .config
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }<\n>| $in.definition
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions }
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in | get definitions | get definition }
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| get meanings | each { $in.definitions }
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }
help get
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| compact | explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| compact
compact
compact --help
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| compact --empty
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| compact
type
describe
describe -h
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| describe
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten |explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten
flatten -h
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten -a
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten definition
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten definition --all
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | select definition
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | select definition example
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten<\n>| select definition<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten<\n>| explore
help select
help reject
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| select definition
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| select definition
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | select definition example
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | select definition
btop
ps | where name == "ignis" | $"NAME: ($in.name.0) | MEM: ($in.mem.0)"
help first
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| flatten | flatten | select definition | first 5
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings | each { $in.definitions }<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0 | each { $in.definitions }<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0 | each { $in.definitions.0 }<\n>| explore
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0.definitions.0
let word = "cat";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0.definitions.0 | select definition
let word = "dog";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0.definitions.0 | select definition
let word = "dog";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0.definitions.0 | select definition<\n>| grid
let word = "dog";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/es/' + $word)<\n>| $in.meanings.0.definitions.0 | select definition<\n>| grid
let word = "perro";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/es/' + $word)<\n>| $in.meanings.0.definitions.0 | select definition<\n>| grid
let word = "dog";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word)<\n>| $in.meanings.0.definitions.0 | select definition
http -h
help -f
help -f network
sys net
sys
sys temp
sys
sys host
sys mem
let word = "dog";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word | str replace ' ' '%20')<\n>| $in.meanings.0.definitions.0 | select definition
let word = "dog mascot";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word | str replace ' ' '%20')<\n>| $in.meanings.0.definitions.0 | select definition
let word = "person";<\n>http get ('https://api.dictionaryapi.dev/api/v2/entries/en/' + $word | str replace ' ' '%20')<\n>| $in.meanings.0.definitions.0 | select definition
clea
celar
clear
ls
clear
ls
cd .config/
ls
clear
ls
fd
clear
ls
find
help find
ls | find top
ls | find fish
ls | find xd
help find
help find | bat -p
help find | less
help find | man
help find | explore
help find | bat 
more
help find | bat -p
help find | more
explore -h
cd .config
ls | find top
help find | more
man more
less
help find | explore --peek
help find | explore
paru -Syu
topgrade --yes --cleanup
z nu
ls
helix env.nu 
z ignis
ls
ls | grid
paru -Ss inter
paru -Ss inter font
paru -S inter-font
ps | where name == "ignis" | $"NAME: ($in.name.0) | MEM: ($in.mem.0)"
kill ignis
kill
kill --help
pkill
kill
help -f close
ps
ps | where name == "ignis"
ps | where name == "ignis" | kill $in.pid
ps | where name == "ignis"
ps | where name == "ignis" | $in
ps | where name == "ignis" | $in.pid
ps | where name == "ignis" | $in.pid.0
ps | where name == "ignis" | get $in.pid
ps | where name == "ignis" | $in.pid.0
ps | where name == "ignis" | $in.pid.0 | kill
ps | where name == "ignis" | kill $in.pid.0
ps | find name | kill $in.pid.0
ps | find niri | kill $in.pid.0
ps | find niri
ps | find niri --help
ps | where name == "ignis" | get pid.0 | kill
kill (ps | where name == "ignis" | get pid.0)
z ignis
s
ls
ignis init &
nu --version
job
start ignis
start
start --help
z ignis
helix styles/theme.scss 
yaiz
z ignis
matugen --help
matugen --help | lines
help lines
matugen --help | get 8
matugen --help | select 8
matugen --help
matugen --help | get 8
matugen --help | lines
matugen --help | lines | get 8
matugen --help | lines | get 8 | str
matugen --help | lines | get 8 | find possible-values
matugen --help | lines | get 8 | find pos
matugen --help | lines | get 8 | find possible
matugen --help | lines | get 8 | find possible values
matugen --help | lines | get 8 | find possible
help find
matugen --help | lines | get 8
matugen --help | lines | find scheme
matugen --help | lines
matugen --help | lines | get 8 | find scheme
matugen --help | lines | get 8 | find scheme-
matugen --help | lines | get 8 | find scheme- | each { $in | str }
matugen --help | lines | get 8 | find scheme- | each { $in | str trim "scheme-" }
matugen --help | lines | get 8 | find scheme- | each { $in }
help filte
help filter
matugen --help | lines | get 8 | find scheme- | each { $in | str list "scheme-" }
matugen --help | lines | get 8 | split
matugen --help | lines | get 8 | split list scheme-
matugen --help | lines | get 8
paru -Ss lapce
paru -S lapce
z media
lapce .
cler
clear
z media
lapce --help
cd ..
lapce media-dl/
z media
ls
clear
ls
clear
l
s
pgrep
pgrep lapce
clear
ls
lapce .
z web
ls
cd zoom-web/
ls
clear
lapce .
svelteserver 
svelteserver  --help
paru -Ss svelte
ps | where name == "lapce"
paru -Ss vscode-lang
ps | where name == "lapce"
z zoom
lapce .
ps | where name == "lapce"
z niri
ls
kill (ps | where name == "lapce" | get pid.0)
clear
z media
z 
z
z zoo
clear
lapce .
ps | where name == "lapce"
ps
ps -h
ps -h | bat -p
help -f tasks
help -f ops
help -f operations
help -f procedures
ps -h | bat -p
ps | where name == "lapce"
paru -Rns lapce
ls
config nu
config env
ls
$nu.user-autoload-dirs
$nu.user-autoload-dirs.0
$nu.user-autoload-dirs.0 | ls
ls -h
ls $nu.user-autoload-dirs.0
ls $nu.user-autoload-dirs.0 
cd -h
cd ~
z media
cd ...
cd ..
cd ....
z media
cd ....
cd .
cd ..
clear
ls
ps
ps | bat -p
ps | where name == "electron"
killall  -
killall  -h
clear
ps | where name == "electron" | each {<\n>kill $in.pid<\n>}
ps
ps | where name == "electron" | each {<\n>kill $in.pid<\n>}ç
ps | where name == "electron" | each {<\n>kill $in.pid<\n>}
clear
ls
clear
matugen --help | split words
split
matugen --help | lines | get 8 | split words
split
help split cell-path
split
matugen --help | lines | get 8 | split words
matugen --help | lines | get 8 | split words | each {<\n>str starts-with "scheme-"<\n>}
matugen --help | lines | get 8 | split words | where {<\n>str starts-with "scheme-"<\n>}
matugen --help | lines | get 8 | split words | where { str starts-with "scheme-" }
matugen --help | lines | get 8 | split words | where { $in | str starts-with "scheme-" }
matugen --help | lines | get 8 | split words | where { $in }
"scheme-"
"scheme-tonal-spot" | str starts-with "scheme-"
matugen --help | lines | get 8 | split words | where { $in | str starts-with "scheme-" }
help where
matugen --help | lines | get 8 | split words | where { $it | str starts-with "scheme-" }
matugen --help | lines | get 8 | split words | where { $in | str starts-with "scheme-" }
matugen --help | lines | get 8 | split words | where {|$e| $e | str starts-with "scheme-" }
matugen --help | lines | get 8 | split words | where {<\n>|$e| $e | str starts-with "scheme-" <\n>}
matugen --help | lines | get 8 | split words | where {|$e| $e}
matugen --help | lines | get 8 | split words | each {|$e| $e}
matugen --help | lines | get 8 | split words | where {|$e| $e}
matugen --help | lines | get 8 | split words | where {|$e| true}
matugen --help | lines | get 8 | split words | where {|$e| $e}
matugen --help | lines | get 8 | split words | where {|$e| $e == "scheme"}
matugen --help | lines | get 8 | split words | where {|$e| $e}
matugen --help | lines | get 8 | split words | where {|$e| true}
matugen --help | get 8 | split words | where {|$e| true}
matugen --help | lines | get 8 | split words | where {|$e| true}
matugen --help | lines | get 8 | split words
matugen --help | lines | get 8
matugen --help | lines | get 8 | split words
matugen --help | lines | get 8 | split 
matugen --help | lines | get 8 | split chars
matugen --help | lines | get 8 | split
matugen --help | lines | get 8 | split words -h
matugen --help | lines | get 8 | split 
matugen --help | lines | get 8 | split words
matugen --help | lines | get 8 | split words -h
matugen --help | lines | get 8 | split 
matugen --help | lines | get 8 | split list
matugen --help | lines | get 8 | split chars -h
matugen --help | lines | get 8 | split 
matugen --help | lines | get 8 | split column
matugen --help | lines | get 8 | split row
matugen --help | lines | get 8 | split 
matugen --help | lines | get 8 | split cell-path
matugen --help | lines | get 8 | str
matugen --help | lines | get 8 | split
matugen --help | lines | get 8 | split row
matugen --help | lines | get 8 | split column
matugen --help | lines | get 8 | split column ""
matugen --help | lines | get 8 | split column " "
matugen --help | lines | get 8 | split column ","
matugen --help | lines | get 8
matugen --help | lines | get 8 | split column ", "
matugen --help | lines | get 8
matugen --help | lines | get 8 | split column ", "
matugen --help | lines | get 8 | split 
matugen --help | lines | get 8 | split row ", "
matugen --help | lines | get 8 | split row "scheme-"
matugen --help | lines | get 8 | split row ", "
matugen --help | lines | get 8 | split row ", " | skip 0 1
matugen --help | lines | get 8 | split row ", " | skip 0
matugen --help | lines | get 8 | split row ", " | skip 
matugen --help | lines | get 8 | split row ", " | skip -h
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2
help -f ignore
help -f slice
help drop
help -f slice
help take
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str trim}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str trim "scheme-"}
str trim
str trim -h
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str trim --char "scheme-"}
help str
str replace -h
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" ""}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" ""}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim --char "]"}
str trim
str trim -h
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "[]"}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to json
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to csv
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to yml
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to yaml
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to md 
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to json 
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to ç
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to html
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to nuon 
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to text 
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to yaml 
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to yaml | save xd.md
bat xd.md 
rm xd.md
paru -Ss nu
paru -Sy nushell
job
clear
job
kill ignis
killall ignis
job spawn ignis
job spawn {ignis}
job list
job spawn {ignis init}
job list
htop
btop
job
ps | where name =~ "ignis"
ps | where name =~ "ignis" | first | kill
ps | where name =~ "ignis" | first | kill $in.pid
ls
job spawn {ignis init}
job list
btop
ps | where name =~ "ignis" | first | kill $in.pid
config nu
paru -Sy ignis-git
config env
$current
job spawn {ignis init}
ls
clear
ls
clear
paru
shadow
paru -S fastfetch wget uv swaylock ruff
fastfetch 
clear
fastfetch 
killall
killall -h
pkill -
pkill -h
pgrep -h
man pkil
man pkill
pkill
pkill -h
pkill
pkill ignis
^pkill
clear
job spawn {ignis init}
job list
cd Documentos
cd ..
topgrade --yes --cleanup
lesfun
z zoom
code .
clear
wlsunset
clear
wlsunset
deno run dev
clear
deno run dev
ps
let count = 0;<\n>ps | each {|$i|<\n>$count = count + $i<\n>}
let count = 0;<\n>ps | each {|$i|<\n>let $count = count + $i<\n>}
let count = 0;<\n>ps | each {|$i|<\n>let $count = $count + $i<\n>}
let count = 0;<\n>ps | each {|$i|<\n>let $count = $count + $i.mem<\n>}
let count = 0mb;<\n>ps | each {|$i|<\n>let $count = $count + $i.mem<\n>}
let count = 0mb;<\n>ps | each {|$i|<\n>let $count = $count + $i.mem<\n>}<\n>echo count
let count = 0mb;<\n>ps | each {|$i|<\n>let $count = $count + $i.mem<\n>}<\n>echo $count
mut let count = 0mb;<\n>ps | each {|$i|<\n>$count = $count + $i.mem<\n>}<\n>echo $count
mut count = 0mb;<\n>ps | each {|$i|<\n>$count = $count + $i.mem<\n>}<\n>echo $count
mut count = 0mb;<\n>ps | each {|$i|<\n>$count + $i.mem<\n>}<\n>echo $count
let count = 0mb;<\n>ps | each {|$i|<\n>let $count = $count + $i.mem<\n>}<\n>echo $count
for $it in ps {<\n>}
for $it in ps {<\n>echo $it.mem<\n>}
for $it in ps {<\n>echo $it<\n>}
ps
for $it in ps {<\n>echo $it<\n>}
for $it in ps {<\n>echo ($it | describe)<\n>}
each -h
help each
ps | each {|e| $e }
ps | each {|e| $e.pid }
ps | each {|e| $e.ma,e }
ps | each {|e| $e.name }
ps | select name
ps | each {|e| $e.mem }
let count = 0mb;<\n>ps | each {|e| let count = $count + $e }
let count = 0mb;<\n>ps | each {|e| let count = $count + $e.mem }
mut count = 0mb;<\n>ps | each {|e| $count + $e.mem }
let count = 0mb;<\n>ps | each {|e| $count + $e.mem }
let count = 0mb;<\n>ps | each {|e| $count + $e.mem };<\n>$count
mut count = 0mb;<\n>ps | for $it in ps {$count + $it.mem };<\n>$count
help fo
help for
mut count = 0mb;<\n>for $it in ps {$count + $it.mem };<\n>$count
mut count = 0mb;<\n>for it in ps {$count + $it.mem };<\n>$count
mut count = 0mb;<\n>for $it in ps {$count + $it.mem };<\n>$count
mut count = 0mb;<\n>for $it in ps {$count + $it };<\n>$count
mut count = 0mb;<\n>for $it in ps {echo $it };<\n>$count
let count = 0mb;<\n>ps | each {|e| $count + $e.mem };<\n>$count
ps
help reduce
ps | reduce {|a, b| a + b}
ps | reduce {|a, b| $a + $b}
ps | $in.mem | reduce {|a, b| $a + $b}
clear
ps | $in.mem | reduce {|a, b| $a + $b}
ps | $in.mem
ps | $in.mem | reduce {|a, b| $a + $b}
ps | $in.mem | reduce {|a b| $a + $b}
ps | $in.mem | reduce {|a, b| $a + $b}
ps | $in.mem | reduce {|a b| $a + $b}
help reduce
ps | $in.mem | reduce {|a c| $a + $c}
ps | $in.mem | reduce {|a b| $a + $b}
clear
ps | $in.mem | reduce {|a b| $a + $b}
clear
ps | $in.mem | reduce {|a b| $a + $b}
ps | $in.mem | reduce {|$a $b| $a + $b}
clear
ps | $in.mem | reduce {|$a $b| $a + $b}
ps | get mem | reduce {|$a $b| $a + $b}
clear
fastfetch 
clear
fastfetch 
clear
ps | get mem | reduce {|$a $b| $a + $b}
ps | get mem | reduce {|$a b| $a + $b}
ps | get mem | reduce {|$a $b| $a + $b}
collect 
collect  -h
fastfetch 
ps | get mem | reduce {|$a $b| $a + $b}
btop
clear
fastfetch 
ps | get mem | reduce {|$a $b| $a + $b}
ps
ps | get mem | reduce {|$a $b| $a + $b}
ps | get mem
clear
ps | get mem | reduce {|$a $b| $a + $b}
clear
ps | get mem | reduce {|$a $b| $a + $b}
clear
ps | get mem | reduce {|$a $b| $a + $b}
ps | get mem | reduce {|a b| $a + $b}
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"} | to yaml | save xd.md
ls
rm xd.md
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
clear
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help
skip
help skip
ignore
help ignore
silent
remove
help reduce
help fold
help map
map
fold
help fold
fold -h
tail
slice
slice -h
matugen --help | lines | get 8 | split row ", " | skip 1 | skip 2 | each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " |<\n>skip 1 | skip 2<\n>| each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", "
help -f range
help -f tail
help drop
matugen --help | lines | get 8 | split row ", " |<\n>slice 2..-2<\n>| each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " |<\n>slice 2..-1<\n>| each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " |<\n>slice 2..-1
matugen --help | lines | get 8
matugen --help | lines | get 8 | split row ", " |<\n>slice 2..-1
matugen --help | lines | get 8 | split row ", " |<\n>slice 2..-2<\n>| each {|$i| $i | str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|$i| str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|| str replace "scheme-" "" | str trim -c "]"}
help trim
str
str substring
str substring -h
str contains
str contains -h
str replace -h
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|| str replace "scheme-" "" | str replace -a "[" "]"}
str replace find
str replace find -h
str find
str replace
str replace -h
help str trim
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|| str replace "scheme-" "" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|| str replace "scheme-" "" | str trim -c "[" | str trim -c "]"}
clear
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|| str replace "scheme-" "" | str trim -c "[" | str trim -c "]"}
lutgen palette names | find catppuccin
lutgen palette names
lutgen palette names | find catppuccin
find -h
search
help -f search
lutgen palette names | find -n catppuccin
clear
lutgen palette names | find -n catppuccin
lutgen palette names | find -n catppuccin | grid
lutgen palette names | find -n catppuccin
matugen --help | lines | get 8
matugen --help | lines | get 8 | find -n scheme-
lutgen palette names
matugen --help | lines | get 8 | find -n scheme-
matugen --help | find -n scheme-
matugen --help | lines | find -n scheme-
matugen --help | lines
matugen --help | lines | find -n scheme-
matugen --help | lines | find scheme-
help find
matugen --help | lines | find sets
matugen --help | lines | find Sets
matugen --help | lines
matugen --help | find -n scheme-
matugen --help 
matugen --help | find -n scheme-
lutgen palette names | find -n catppuccin
lutgen palette names
matugen --help | lines | get 8 | split row ", " | slice 2..-1<\n>| each {|| str replace "scheme-" "" | str trim -c "[" | str trim -c "]"}
matugen --help | lines | get 8 | split row ", " | slice 2..-1
matugen --help | lines | get 8 | split row ", "
matugen --help | lines | get 8 | find scheme-
matugen --help | lines | get 8 | find -n scheme-
matugen --help | lines | get 8 | find scheme-
matugen --help | lines | get 8 | find scheme-*
help find
regex
matugen --help | lines | get 8 | find -r scheme-*
matugen --help | lines | get 8 | find -r scheme-
matugen --help | lines | get 8 | find --regex scheme-
matugen --help | lines | get 8 | find --regex "scheme-"
matugen --help | lines | get 8 | find --regex "scheme"
matugen --help | lines | get 8 | find --regex "scheme-"
matugen --help | lines | get 8 | find --regex "scheme-+"
matugen --help | lines | get 8 | find --regex "scheme-"
matugen --help | lines | get 8 | split row ", "
matugen --help | lines | get 8 | split row ", " | slice 2..-1
clear
matugen --help | lines | get 8 | split row ", " | slice 2..-1
clear
matugen --help | lines | get 8 | split row ", " | slice 2..-1
matugen --help | lines | get 8 | split row ", " | slice 2..-1 | each {|| str trim -c ]}
clear
matugen --help | lines | get 8 | split row ", " | slice 2..-1 | each {|| str trim -c ]}
matugen --help | lines | get 8 | split row ", " | slice 2..-1 | each {|| str trim -c "]"}
lutgen palette names
lutgen palette names | find -n catppuccin
lutgen palette names | find -n zen
lutgen palette names | find -n 
lutgen palette names | find -n xd
lutgen palette names | find -n git
lutgen palette names | find -n rose
lutgen palette names | find -n yaru
lutgen palette names | find -n yar
lutgen palette names | find -n ya
lutgen palette names | find -n primar
lutgen palette names | find -n primary
clear
git
man git
man swaylock
man swaylock | bat
man swaylock | bat -p
man swaylock | bat -P
clear
z fish
ls
cd .
cd ..
rm -r fish/
z egg
ls
cd shell_fish/
ls
cd config/
ls
yazi
z nu
ls
echo $env.PATH
$env.PATH
echo $env.PATH
echo $env.PATHc
echo $env.PATH
config env
config
config use-colors 
config flatten
config nu 
clear
topgrade --yes --cleanup
fastfetch 
clear
fastfetch 
btop
kill ignis
clear
ps | where name =~ "ignis" | first | kill $in.pid
fastfetch 
btop
job spawn {ignis init}
fastfetch 
btop
fastfetch 
ps | where name =~ "ignis" | first | kill $in.pid
job spawn {ignis init}
fastfetch 
btop
ls
clear
paru -Sy ig
matugen --help | lines | get 8 | split row ", " | slice 2..-1 | each {|| str trim -c "]"}
paru -Sy ignis-git
ps | where name =~ "ignis" | first | kill $in.pid
job spawn {ignis init}
paru -Sy wlsunset
pgrep wlsunset
wlsunset
wlsunset -h
wlsunset -T
wlsunset -T 9000
wlsunset -T 1000
wlsunset -T 6000
wlsunset -T 9000
wlsunset 
killall wlsunset
wlsunset -h
wlsunset -t 3000
wlsunset -t 4000
wlsunset -t 5000
wlsunset -t 7000
wlsunset -t 6000
wlsunset -h
wlsunset -g 0.5
wlsunset -g 0.8
wlsunset -g 0.9
wlsunset -h
wlsunset -t 6000 -T 9000
wlsunset -t 6000 -T 2000
wlsunset -t 6000 -T 9000
wlsunset -t 6000 -T 4000
wlsunset -t 6000 -T 8000
wlsunset -h
gammastep
paru -S gammastep
gammastep
gammastep -h
gammastep -o 6000
gammastep -o 9000
gammastep -l
gammastep -l list
gammastep -l manual
gammastep -l manual -o 5000
gammastep -h
gammastep -m list
gammastep -O 5000
gammastep -O 7000
gammastep -O 2000
gammastep -O 3000
wlsunset 
wlsunset  -h
wlsunset  -T 3000
wlsunset  - 3000
wlsunset  -t 3000
systemctl status geoclue
systemctl restart geoclue
systemctl status geoclue
wlsunset
wlsunset -g
wlsunset -h
man gammastep
gammastep
z ignis
ls
paru -Rns wlsunset
helix options.json
git status
git diff
clear
ls
git add .
git commit -m ":lipstick: Styles Features"
git push
git pull
clear
ls
cd Descargas
ls
rm "* `🐐 Charlotte Rossberg.pdf`"
rm `🐐 Charlotte Rossberg.pdf`
ls
clear
ls
paru
z deno
clear
ls
z media
ls
z zoom
clear
pgrep code
z zoom
code .
z yournal
zi your
z a
cd ..
cd Documentos/Dev/+Lang/rust/yournal-rs/
ls
clear
yazi
ls
helix Cargo.toml 
cargo build --release
yazi
helix Cargo.toml 
yazi
cargo build --release
yazi
helix Cargo.toml 
yazi
clear
ls
clear
cd des
cd Descargas
ls
git clone https://github.com/linkfrg/ignis
ls
cd ignis
ls
clear
ls
ls | sort-by type
z nu
alias
ls
core-ls 
ls 
ls
_ls 
clear
_ls 
clear
ls
def
help def
ya
ya emit
ya emit -h
ya pack
ls
cd .config
ls
ls | find git
find gir
find git
help find
clear
find -h
ls | find git
ls
ls -
ls -h
cd .confi
cd .config
ls -a
ls | sort-by type
clear
ls | sort-by type
ls | sort-by type -h
help ls
ls -h
glbo
glob
glob -h
glob rust
glob *.conf
ls *.conf
ls
ls -
ls -h
ls -d
ls -d -t
clear
ls -d -t
clear
cd Descargas
ls
cd ignis
kill ignis
killall ignis
clear
ls
uv install -r requirements.txt
uv
clear
uv
uv -h
uv sync -h
uv
uv -h
uv export
ls
ls | sort-by type -h
ls | sort-by type
bat pyproject.toml 
uv sync
ls
ls | sort-by type
clear
ls | sort-by type
overlay use .venv/bin/activate.nu
clear
ls
z ignis
ignis init
gh repo pr
gh repo
gh
gh pr
gh pr checkout 181
gh auth login
clear
ls
job spawn {ignis init}
clear
z niri
helix config.kdl 
z yolk
ctpv
cp -h
paru -Ss basedpyright
paru -S basedpyright
clear
pyright
rm -r /var/cache/pacman/pkg/download-moY4Uf
sudo rm -r /var/cache/pacman/pkg/download-moY4Uf
arch-clean
S
arch-clean
paru -Ss python-mako
paru -Rns python-mako
arch-clean
paru -Rns adobe-source-code-pro-fonts
paru -Rns libngtcp2 python-iniconfig python-pluggy python-pytest simdjson tk
arch-clean
yazi
ls -du
ls -d
clear
yolk git add . ; yolk git commit -m "Update" ; yolk git push
clear
fastfetch 
ps | where name =~ "ignis" | first | kill $in.pid
job spawn {ignis init}
z ignis
ls
zi ignis
clear
killall ignis
ignis init
z ignis
ls
git add .
git status
git commit -m ":bug: Fix empty media players"
git push
paru -Ss ghostty
paru -S ghostty
ghostty 
paru -Rns ghostty
paru -Sy ignis-git
z ignis
ls
code .
clear
killall ignis
z niri
ignis init
git add .
git commit -m ":sparkles: Migrate to new Niri Workspaces and KeyboardLayouts"
git push
clear
ignis init
git add .
git commit -m ":lipstick: Bar adjusts"
git push
topgrade --yes --cleanup
paru -Sy ignis-git
z ignis
clear
.
clear
pgrep ignis
pgrep code
code .
pgrep code
pkill ignis
ignis -h
ignis
ignis inspector
ignis init
z ignis
clear
code 
code .
clear
killall ignis
ignis init
media-dl
z media
ls
clea
uv -h
uv tool install .
ls
media-dl
media-dl 
media-ctl 
media-dl 
clear
media-dl 
clear
media-dl 
z media
z ~~
media-dl
media-dl --show-completion
ignis init
media-dl --show-completion
ignis init
grid -h
grid -i
ls | grid -ic
[[name patch]; [Cargo.toml false] [README.md true] [SECURITY.md false]] | grid --icons --color
paru -Ss wezterm
lsg
ls
lsg
clear
lsg
clear
ls
lsg
paru -S wezterm
ls
lsg
cd .config
lsg
clear
lsg
ls
eza
eza --icons
lsg
ls
lsg
def -h
config nu
lsg
cd .config
lsg
z media
lsg
ls
clear
lsg
grid -h
lsg -h
lsg
clear
ps | where name =~ "wezterm"
pgrep wezterm
killall wezterm
killall wezterm-gui
wezterm-gui 
pgrep wezterm
wezterm
wezterm-gui 
paru -Rns wezterm
clear
z obsi
ls
lsg
clear
lsg
ls
clear
lsg
ls
clear
ls
ls Extras/Adjuntos/
ls Extras/Adjuntos/ | grid -ic
ls Extras/Adjuntos/ | grid 
ls Extras/Adjuntos/
ls Extras/Adjuntos
ls Extras/Adjuntos -h
ls Extras/Adjuntos -s
ls Extras/Adjuntos -s | grid
ls
ls Extras/Adjuntos/*.sidecar.md
ls Extras/Adjuntos/*.sidecar.md | count
ls Extras/Adjuntos/*.sidecar.md | length 
lensfun-add-adapter  -h
ls Extras/Adjuntos/*.sidecar.md | length
lenght -h
length -
length -h
ls Extras/Adjuntos/*.sidecar.md | length
ls Extras/Adjuntos/*.sidecar.md
rm -h
ls Extras/Adjuntos/*.sidecar.md | each {}
ls Extras/Adjuntos/*.sidecar.md
ls Extras/Adjuntos/*.sidecar.md | each {}
ls Extras/Adjuntos/*.sidecar.md | each {rm $in.name}
ls Extras/Adjuntos/*.sidecar.md
ls Extras/Adjuntos/*.sidecar.md | each {rm $in.name}
ls
ls Extras/Adjuntos/*.sidecar.md
ls Extras/Adjuntos/
chafa 
chafa Extras/Adjuntos/taiki, evander, verrine.webp 
chafa "Extras/Adjuntos/taiki, evander, verrine.webp"
clear
ls
yazi
z bat
clear
ps
config nu
uv -h
nu -h
clear
$env.EDITOR
z niri
cliphist 
cliphist list
helix config.kdl 
clear
ls
clear
lsg
cd ~
lsg
clear
lsg
clear
ls
clear
$env.EDITOR
ls
clea
ls
$env.EDITOR
config nu
config env
clear
help each
ls
lsg
z ob
ldh
lsg
lsg Ideas/
lsg -h
ls -h
lsg Documentos
ls -h
lsg -h
lsg Documentos
eza Documentos
lsg -h
z ignis
ls
clear
ls
lsg
clear
ls
lsg
z ignis
lsg
cd ..
lsg
ls
lsg
lsg -h
lsg
lsg -h
lsg
ls
ls -h
lsg
lsg Descargas
ls
lsg
is-empty 
ls
lsg
match
help match
lsg
ls .
ls -s
lsg
cd Documentos
ls
lsg
z ignis
lsg
lssg
ls
^ls 
lsg 
lsg
lsg -h
lsg
lslogins 
lsg 
clear
lsg
clear
z ignis
lsg
lsg styles/
config nu
z niri
helix config.kdl 
clear
ls
cd ..
z yolk
ls
mktemp -h
y
cwd
pwd
open
open -h
z ignis
open schema.json
ls
z nu
open history.txt
open history.txt | get 5
open history.txt | lines | get 5
pwd
pwd -h
cwd
pwd
pwd -h
pwd
$current
cwd
pwd
z nu
open history.txt | first
pwd -h
rm -h
y
ls
y
yazi
y
mktemp -h
ls
y
ls
rm $temp
y
rm `$temp`
clear
ls
mktemp -t xd.XXXXXX
ls
y
ls
open `$temp`
rm `$temp`
ls
yazi
ls
y
yazi
y
ls
y
yazi -h
y -h
ls
nautilus -h
nautilus -q
z yazi
z fish
yazi
zi fish_variables
zi fish
ls
command
which
which -h
which x
which ls
which ez
which eza
which yazi
ls
y
config nu
z nus
cd Descargas
z -
cd Descargas
-
y 
yazi
clear
ls
http get
clear
http get https://graphql.anilist.co
http get https://graphql.anilist.co -h
http post  https://graphql.anilist.co
http post https://graphql.anilist.co
http post -h
http post https://graphql.anilist.co "body"
http post -h
config nu
clear
z obsi
dust 
chafa Extras/Adjuntos/Pasted image 20250328160012.png
chafa "Extras/Adjuntos/Pasted image 20250328160012.png"
dust
chafa "Extras/Adjuntos/47127_edited.webp"
ls
z foot
yolk edit niri
z yolk
yolk edit niri
niri validate
tree -
tree -h
z niri
paru -Ss syncthing
sync 
sync  -h
sync  --help
paru -S syncthingtray
paru - S syncthingtray-qt6
paru -S syncthingtray-qt6
flatpak search synthingtray
flatpak search syncthingtray
flatpak install io.github.martchus.syncthingtray  
io.github.martchus.syncthingtray 
z niri
pgrep syncthing
cd .var
ls
cd app
ls
rm -r io.github.martchus.syncthingtray/
$env._JAVA_AWT_WM_NONREPARENTING
$env.ELM_ENGINE
z yolk
yolk sync
cd Imágenes
pwd
z mnt
ls
cd datos
cd Datos/
ls
cd sus
ls
pwd
pwd Documentos/
pwd -h
ls Compartido/
cd Imágenes/
pwd
syncthing
job list
job 
cd .config
ls
lsg
ls | sort-by type
lsg
ls | sort-by type
lsg
eza
lsg
ls
lsg
helix user-dirs.dirs 
job unfreeze 1
ls
z 
ls
lf
helix user-dirs.dirs 
cd .config
helix user-dirs.dirs 
syncthing
cd ~
ls
yazi
syncthing
sudo flatpak override io.github.martchus.syncthingtray --filesystem 
$env.ELM_ENGINE
pgrep syncthing
pgrep syncthingtray
pgrep syncthing
fastfetch 
btop
sudo flatpak override io.github.martchus.syncthingtray --filesystem host
pgrep syncthing
update-desktop-database 
xdg-user-dirs-update 
xdg-user-dirs-gtk-update 
xdg-user-dir 
xdg-user-dir -h
touch -h
cd .config
ls
cd autostart/
ls
yazi
cp /var/lib/flatpak/exports/share/applications/io.github.martchus.syncthingtray.desktop .
ls
paru -Rns syncthing-gtk
paru -S syncthing
clear
cd .config/autostart/
ls
cd .config/autostart/
ls
io.github.martchus.syncthingtray -h
helix io.github.martchus.syncthingtray.desktop 
clear
paru -Ss system
paru -Ss systemd
paru -Ss systemd-xdg
systemd status xdg-desktop-autostart.target
systemdctl status xdg-desktop-autostart.target
systemctl status xdg-desktop-autostart.target
systemctl status xdg-desktop-autostart
dex -ad
dex -h
dex -ad
dex -ad -h
z niri
helix io.github.martchus.syncthingtray.desktop 
cd .config/autostart/
helix io.github.martchus.syncthingtray.desktop 
z niri
helix io.github.martchus.syncthingtray.desktop 
ls
ls -h
paru -Ss polkit
z niri
paru -Ss polkit
z niri
cliphist list
cliphist list | lines
cliphist list | lines | detect columns 
help detect
detect
columns
columns -h
cliphist list | lines
cliphist list | table
table
table -h
ls | table
table -h
split
split column
split column -h
cliphist list | split column
cliphist list | split column " "
split
split row
split row -h
split
split cell-path -h
cd .config/autostart/
z ignis
ls
lsg
clear
lsg
parallel 
par-each -h
ls
cd Descargas
ls
duns
du -h
du
nautilus -q
xdg-desktop-menu 
xdg-user-dir 
xdg-user-dirs-gtk-update 
xdg-user-dirs-update 
du .config
ls
mkdir Escritorio
mkdir Plantillas
helix .config/user-dirs.dirs 
xdg-user-dirs-update 
paru
nautilus -q
paru -Rns dex
btop
fastfetch 
topgrade --yes --cleanup
yolk edit nomix
^env
env
env -h
paccache-service-manager 
paccache 
paccache -h
cd .confi
cd .config
ls fish
rm -r fish/
ls
clear
ls
paccache -c
paccache -y
paccache -u
paccache 
paccache  -h
tldr paccache
paccache -rk
paccache -d
paccache -rk0
ls
lsg
fastfetch 
nautilus -q
pgrep syncthing
killall firefox
pgrep syncthing
pgrep syncthingtray
pgrep syncthing
pgrep syncthing -h
pgrep syncthing -x
killall firefox
p
pgrep syncthing -x
systemctl status syncthing
which syncthing 
pgrep syncthing -x
bto
fastfetch 
btop
fastfetch 
paru -Rns xdg-desktop-portal-gnome 
paru -Rns xdg-desktop-portal-gnome gnome-session
paru -Rns xdg-desktop-portal-gnome gnome-session gnome-shell
paru -Rns xdg-desktop-portal-gnome gnome-session gnome-shell gnome-control-center gnome-shell-extension-appindicator gnome-shell-extension-nightthemeswitcher
paru -Rs gnome
paru -Rsc gnome
paru -Rns gnome
paru -Rnsc gnome
paru -Rns gnome
paru -Rns gnome gnome-shell-extension-appindicator gnome-shell-extension-nightthemeswitcher
tecla
paru -Runs gnome gnome-shell-extension-appindicator gnome-shell-extension-nightthemeswitcher
btop
z ignis
paru -S nautilus loupe gnome-calculator xdg-user-dirs geoclue
paru -Sy ignis-git
paru -Ss gvfs
pgrep gvfs
pgrep ignis
z state
ls
cd ignis
ls
helix ignis.log 
open ignis.log
paru -S gnome-bluetooth
paru -Ss gnome-bluetooth
paru -S gnome-bluetooth-3.0
open ignis.log
killall ignis
fastfetch 
paru -Ss evolution
fastfetch 
btop
fastfetch 
btop
fastfetch 
paru -Ss gvfs
ls /etc/xdg/autostart/
paru -S gvfs-mtp
nautilus -q
fastfetch 
paru -S gvfs-nfs
nautilus -q
paru -Ss nfs
paru -Ss libnfs
fastfetch 
paru -Ss gnome-disk
fastfetch 
paru -S gnome-disk-utility
fastfetch 
nautilus -q
fastfetch 
paru -Ss nfs
paru -Ss nfs-utils
systemctl status nsf
nfsd
paru -Ss ntfs
paru -Ss fuse
paru -Ss ntfs
paru -Rns ntfs-3
paru -Rns ntfs-3g
journalctl 
paru -Rns ntfs-3g
mount 
dmesg
dmesg -
dmesg -h
tldr mseg
tldr dmseg
dmseg
dmesg
tldr dmesg
sudo dmesg
paru -Rns ntfs-3g
paru -Rns gvfs-nfs
paru -S gvfs-nfs
nautilus -q
paru -Ss ntfs
paru -Ss nfs-
paru -Ss gvfs
paru -Ss gvfs-
fastfetch 
fsck 
fsck  -h
paru -Ss ntfs
paru -Ss ntfsfix
paru -S ntfs-3g
clear
paru -S ntfs-3g
ntfsfix -h
paru -S ntfs-3g
fastfetch 
btop
fastfetch 
paru -S ntfs-3g
paru -Ss ntfs-3g
paru -Ss gvfs-
fastfetch 
btop
fastfetch 
btop
fastfetch 
btop
brightnessctl 
yolk edit nomix
paru -Ss emote
paru -Ss smile
flatpak search smile
flatpak install it.mijorus.smile
flatpak search emoji
it.mijorus.smile 
it.mijorus.smile  -h
it.mijorus.smile
flatpak list
flatpak uninstall smile
flatpak search emoji
paru -Ss flemozi
flatpak install dev.krtirtho.Flemozi 
flatpak install EmojiMart
flatpak list
io.github.vemonet.EmojiMart 
io.github.vemonet.EmojiMart -h
io.github.vemonet.EmojiMart
flatpak list
flatpak uninstall io.github.vemonet.EmojiMart     
flatpak uninstall --unused 
flatpak install smile
it.mijorus.smile 
flatpak run it.mijorus.smile
flatpak run it.mijorus.smile 
flatpak search emoji
io.github.vemonet.EmojiMart
it.mijorus.smile 
cd .config/autostart/
ls
bto
btop
fastfetch 
btop
flatpak uninstall smile
flatpak --comuns=name,size list
flatpak list -h
tldr flatpak list
flatpak listname
flatpak list name
flatpak list
flatpak list -h
flatpak list --columns=name,size
flatpak uninstall --unused 
flatpak install emote
flatpak list
fastfetch 
paru -Ss paket
paru -Ss gnome showtime
paru -S showtime
paru -Rns celluloid showtime
paru -S mpv
arch-clean
paru -Rns tff-roboto
paru -Rns ttf-roboto
arch-clean
clear
fastfetch 
btop
fastfetch 
killall ignis
job spawn {ignis init}
paru -Rns xdg-desktop-portal-gtk
paru -S xdg-desktop-portal-gnome
paru -Rns xdg-desktop-portal-gtk
pgrep xdg-desktop
pgrep xdg-desktop-portal
pgrep xdg-desktop-
pgrep xdg-desktop-gtk
pgrep xdg-desktop-gnome
btop
ps
ps | where name =~ "xdg"
ps | where name =~ "xdg" | get name
ps -h
ps -l | where name =~ "xdg"
ps -l | where name =~ "xdg" | get name
tree -h
clear
ps
ps -l | where name =~ "xdg" | get name
botp
ps
ps -l | where name =~ "xdg" | get name
ps -l | where name =~ "xdg-desktop" | get name
btop
clear
ps -l | where name =~ "xdg-desktop" | get name
yolk edit nomix
$env.GTK_USE_PORTAL = 1; waypaper
$env.GTK_USE_PORTAL
$env.GTK_USE_PORTAL = 1; waypaper
$env.GTK_USE_PORTAL = 1; firefox
$env.GTK_USE_PORTAL = 0; firefox
$env.GTK_USE_PORTAL
firefox
$env.GTK_USE_PORTAL = 1; waypaper
$env.GTK_USE_PORTAL
killall ignis
job spawn {ignis init}
pgrep xdg
pgrep xdg-desktop-gnome
pgrep xdg-desktop-
pgrep xdg-desktop-po
pgrep xdg-desktop-por
pgrep xdg-desktop-port
pgrep xdg-desktop-por
paru -Rns xdg-desktop-portal-gnome
$env.GTK_USE_PORTAL
firefox
$env.GTK_USE_PORTAL
range
1..2
1..5
each 1..5
1..5 | each {echo "xd"}
1..5 | each {|e| echo $e}
paru -S xdg-desktop-portal-gnome
$env.GTK_USE_PORTAL
paru -Ss file-roller
paru -Rns file-roller
paru -S file-roller
$env.GTK_USE_PORTAL = 1; file-roller
paru -Ss nautilus
paru -Ss nautilus-
paru -Ss nautilus archive
paru -S archive-mounter
ls
ls /
$env.GTK_USE_PORTAL = 1; file-roller
clear
paru -Ss waytrogen
paru -S waytrogen
ls
uv
$env.GTK_USE_PORTAL
tree -h
tre
tee
tee -h
complete 
complete  -h
external
fastfetch 
btio
to
btop
pgrep gammastep
cd .config/autostart/
ls
kill
kill -h
kill 38852
pgrep gammastep
z ignis
code .
killall ignis
z ignis
git status
git commit -m ":art: Rename cssclass kb-layout to keyboard-layout"
git status
git push
git log
git log --no-pager
ignis init
git branch popover-tray
git checkout popover-tray 
git status
git add .
git commit -m ":art: Testing"
git switch main 
clear
ignis init
git add .
ignis init
git commit -m ':sparkles: Dynamically show keyboard layout is there is more than one layout'
git push
z ignis
z state
cd ignis
ls
open ignis.log
pgrep ignis
job spawn { ignis init }
python --version
cmake
meson
paru -S ignis-git
killall ignis
z ignis
helix 
helix
code .
ignis init
git add .
z ignis
git add .
git commit -m ":sparkles: Add screen locker button in quick settings"
git push
ignis init
gh auth login
ls
git push
git remote
ssh-add
git push
ignis init
git add .
git commit -m ":art: Dirty hack to fix user_options typing"
git push
clear
ignis init
ruff format
ruff check 
ruff check -I 
ruff check -h
tldr ruff
ruff check --select I
ruff check --select I --fix
git add .
git commit -m ":art: Format with ruff"
git push
clera
clear
ignis init
job spawn { ignis init }
fastfetch 
btop
pgrep gammastep
cd .config
xdg-user-dirs-update 
helix user-dirs.dirs 
nautilus -q
nautilus 
btop
fastfetch 
ps
ps | where name
where -h
sort-by -h
ps | where name =~ xdg
ps | where name =~ ignis
ps | where name =~ ignis | get mem
ps | where name =~ ignis
helix --health
helix --health | detect columns
helix --health
helix --health | str replace "Language servers" "Language_Servers"
helix --health | str replace "Language servers" "Language_Servers" | detect
helix --health | str replace "Language servers" "Language_Servers" | detect -h
helix --health | str replace "Language servers" "Language_Servers" | detect columns
helix --health | str replace "Language servers" "Language_Servers" | detect columns --guess
detect
detect --help
help detect
helix --health | str replace "Language servers" "Language_Servers" | detect columns --guess --skip 7
helix --health | str replace "Language servers" "Language_Servers" | str replace "Debug adapter" "Debug_Adapter" detect columns --guess --skip 7
helix --health | str replace "Language servers" "Language_Servers" | str replace "Debug adapter" "Debug_Adapter" | detect columns --guess --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7
clear
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7<\n>| get Language
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7<\n>| get language
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7<\n>| get Language
where -h
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7<\n>| select 
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7<\n>| select Language Language_Servers
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess <\n>| select Language Language_Servers
helix --health<\n>| str replace "Language servers" "Language_Servers"<\n>| str replace "Debug adapter" "Debug_Adapter"<\n>| detect columns --guess --skip 7<\n>| select Language Language_Servers
helix --health
helix --health -h
helix --h
helix --help
helix --health languages
config nu
helix --health languages
helix --health
helix --health -h
helix --health clipboard
helix --health
helix --health | select language
helix --health | select Language
helix --health | select language
helix --health | select Language
helix --health | where Language = xml
helix --health | where Language == xml
helix --health | where Language == svelte
^helix --health
^helix --health svelte
^helix --health yuck
helix --health yuck
topgrade --yes --cleanup
nmtui
clear
topgrade --yes --cleanup
paru
topgrade --yes --cleanup
sudo pacman -Syu
sudo rm /var/lib/pacman/db.lck 
paru
sudo rm /var/lib/pacman/local/qt6-base-6.9.0-1/ -r
paru
paru -S qt6-base
paru
paru qt6-base
paru -S qt6-base
paru -Sk qt6-base
paru -S qt6-base --overwrite \*
paru
paru -Rns vulkan-intel
paru
pgrep ignis
ignis init
paru -Qk
paru -Qk | rg " 0 missing files"
rg -h
paru -Qk | rg -v " 0 missing files"
paru -Qk
paru -Qk | rg -v " 0 missing files"
paru -Ss nm-
paru -Ss network
localectl 
paru
paru -S meson
paru -S meson --overwrite "*"
paru -Ss libmpv
paru -Sy mpv
paru -Sy mpv --overwrite "*"
paru -Ss gtk4
paru -Sy gtk4
ls
paru -Sy ignis-git
cut
systemctl restart
systemctl
systemctl -h
pgrep ignis
z ignis
zi ignis
ls
fastfetch 
open ~/.local/state/ignis/ignis.log
killall ignis
z ignis
ls
helix schema.json 
open schema.json
open options.json
open --raw options.json
ignis init
paru -Sy ignis-git
lss
ls
rename -h 
mv -h 
mv options.json options.bak.json
ignis init
ls
yazi
ignis init
z ignis
rm -r ignis
ls
rm -r .cache
z ignis
ls
open options.json
open options.json -r
open options.json -r | nu-highlight 
ignis init
job spawn { ignis init }
btop
paru -Sy ignis-git
paru -Ss mpvpaer
paru -Ss mpvpaper
paru -Sy
paru -Ss waytrogen
paru -S waytrogen-bin
paru -Rns waypaper
clang
paru -Rns clang
paru -Ss gc
paru -Ss gcc
paru -Rns gcc
paru -Ss base-devel
paru -Ss windsurf
paru -S windsurf
windsurf 
window 
window -h
windsurf --help
windsurf --ozone-platform-hint=auto
ls -a
pgrep keyring
pgrep gnome-
ps | where name =~ gnome-
paru -Ss gnome-keyring
paru -Ss keyring
paru -S gnome-keyring
ps | where name =~ gnome-
paru -S gnome-keyring
paru -Ss gnome-keyring
paru -Ss libsecret
ls -a
paru -Ss gnupg
paru -Ss opengp
paru -Ss openpgp
paru -Rns windsurf
ls
gio trash --list
ls
clear
ls
ls -a
lsg
clear
config nu
$nu.config-path
cd $nu.config-path
$nu.config-path | path parent
$nu.config-path
$nu.config-path.0
$nu.config-path | path
$nu.config-path | path join
$nu.default-config-dir
cd $nu.default-config-dir
ls
yaziç
yy
paru -Rns fish
paru -Rns fish fisher
paru -Rns gimp
ls
paru
fish
z ignis
code .
killall ignis
paru -Rns python-pydantic
glances
glances -h
paru -Rns python-pydantic glances
topgrade --yes --cleanup
paru -Ss harmonoid
paru -S harmonoid-bin
harmonoid
paru -Rns harmonoid-bin
paru -Ss uv
paru -Ss poetry
paru -Rns python-pip
paru -S linux
paru -S linux linux-headers
paru -Rns python-pip
paru -Rns uv
paru -S python-uv
topgrade --yes --cleanup
job
date
datetime
date
date from-human 
date from-human Saturday
date from-human "Saturday"
date from-human
date from-human -h
"Saturday 5" | date from-human 
"Saturday" | date from-human 
"5 days" | date from-human 
"5" | date from-human 
"5 days" | date from-human 
"5 days" | date from-human -h
"5 days" | date from-human --list
"Now" | date from-human
"Now"<\n>| date from-human
"In 5 days"<\n>| date from-human
"In 2 days"<\n>| date from-human
topgrade --yes --cleanup
ls
eza
clear
ls
clear
z do
ls
clear
ls
clear
z dev
ls
yazi
y
z py
ls
z python
ls
yazi
cd media-dl/
ls
clear
ls
clear
ls
uv sync
uv
ls
cd ..
cd mnt/Datos/
ls
ls -a
pwd
pwd -h
$env.UV_CACHE_DIR = "/mnt/Datos/.uv-cache"
uv
uv -h
uv sync
z nushell
ls
heli
Z PY
z media
ls
uv
$env.UV_CACHE_DIR
z nushell
ls
uv
$env.UV_CACHE_DIR
uv
uv -h
z media
ls
clear
uv sync
cd .cache/uv/
ls
clear
ls
cd .cache/uv/
clear
ls
uv sync -
uv sync -U
open pyproject.toml
open pyproject.toml | select
open pyproject.toml | select dependency-groups
open pyproject.toml | get dependency-groups
open pyproject.toml | get dependency-g
open pyproject.toml | get dependency-groups
bat pyproject.toml 
open pyproject.toml | get dependency-groups
open pyproject.toml | get dependency-groups | dev
open pyproject.toml | get dependency-groups | get dev
open pyproject.toml | get dependency-groups
open pyproject.toml | select dependencies dependency-groups
open pyproject.toml | select dependency-groups
bat pyproject.toml 
overlay use .venv/bin/activate.nu
clear
ls
clear
ls
clear
git status
git add .
git commit -m "Update dependencies"
git push
ls
clear
ls
clear
ls
clear
code .
clear
z web
ls
yazi
ls
ls -a
ls<\n>sort-by type
ls<\n>| sort-by type
ls -a<\n>| sort-by type
cd node_modules/
ls
ls svelte
cd ..
cd mnt/Datos/
ls -a
deno
deno -h
ls
pytest
yazi
ls
du
du -h
ls
du .deno
dust .deno
yazi
cd ..
deno clean
ls -a
deno install
yazi
dust node_modules/
du node_modules/
yazi
ls node_modules/.deno/
ls node_modules/.deno/ -
ls node_modules/.deno/ -h
ls node_modules/.deno/ -d
clear
ls node_modules/.deno/ -d
ls node_modules/.deno/ -d | sort-by size
yazi node_modules/.deno/typescript@5.8.2     
yazi node_modules/.deno/typescript@5.8.2
yazi node_modules/.deno/typescript@5.8.2/node_modules/typescript/
ls node_modules/.deno/typescript@5.8.2/node_modules/typescript/ -d<\n>| sort-by size
ls node_modules/.deno/typescript@5.8.2/node_modules/typescript/lib -d<\n>| sort-by size
clear
ls
clear
yazi
clear
ls
yazi
code .
cñlear
clear
clera
deno -h
deno add -h
deno outdated
deno outdated --update
deno outdated --update --latest
deno outdated -h
deno outdated
clear
deno task dev
code .
pgrep brave
pgrep ignis
job spawn { ignis init }
fsatfetch
fastfetch 
job spawn { ignis init }
z web
ls
code .
deno task dev
deno add lucide-svelte
deno add npm:lucide-svelte
z we
ls
rm vite.config.ts.timestamp-1746132440182-75625b2fcd418.mjs
ls
clear
code .
z media
z web
ls
deno task dev
clear
code .
paru -Rns python-pydantic
paru -Qs python-pydantic
paru -Rns python-pydantic-core
topgrade --yes --cleanup
cd .cache/thumbnails/
ls
cd ..
rm -r .cache
rm -r thumbnails/
z ignis
ls
ode .
decode
decode -h
code .
encoding
encoding -h
encode -h
encode base64
encode base64 "XD"
encode base64 -h
"XD" | encode base64
"XD" | decode
"XD" | decode base64
"XDD" | decode base64
"WEQ=" | decode base64
git add .
git commit -m ":art: (bar): Refactorize"
git push
ruff check --select I --fix
ruff format
git add .
git commit -m ":art: Refactorize styles"
git push
notify-send
notify-send "XD" "LOREM IPSUM"
git add .
git add .
git status
git commit -m ":lipstick: Increase containers height"
git push
clear
notify-send "XD" "LOREM IPSUM"
clear
notify-send "XD" "LOREM IPSUM"
clear
notify-send "XD" "LOREM IPSUM"
paru
git add .
git commit -m ":lipstick: Reduce notification padding"
git push
notify-send "XD" "LOREM IPSUM"
clear
clear
git push
notify-send "XD" "LOREM IPSUM"
paru -Ss trae
topgrade --yes --cleanup
dirs
use std/disr
use std/dirs
disrs
dirs
dirs -h
z nu
ls
dirs
dirs -h
dirs add
g
g 
g -h
shells
shells -h
enter
ls
enter Imagenes
ls
shells
cd p
p
ls
cd Imagenes
ls
p
n
dirs
shells
p
dexi
dexit
ls
shells
uv -h
uv generate-shell-completion
uv generate-shell-completion -h
uv generate-shell-completion nushell
source (uv generate-shell-completion nushell)
uv generate-shell-completion nushell
overlay use (generate-shell-completion nushell)
overlay use -h
generate-shell-completion nushell | overlay use
generate-shell-completion nushell overlay use
generate-shell-completion nushell | overlay use
generate-shell-completion nushell<\n>overlay use
uv generate-shell-completion nushell<\n>overlay use
"uv generate-shell-completion nushell"<\n>overlay use
overlay use -h
overlay -h
overlay use -h
z nushell
ls
cd autoload/
uv generate-shell-completion nushell | save uv.nu
ls
uv -h
z media
uv add
clear
uv add
uv add -h
^uv add -h
uv add -h
rm uv.nu
ls
lsg
clear
cd Descargas
lsg
cd ..
lsg
cd .config
lsg
ls
lsg
clear
lsg
ls
lsg
cd .config/
ls
ls -h
ls -l
ls
lsg
ls
$env.EDITOR
$env.config
ls
z config
z nu
ls
rm
rm -
rm -h
$env.config
$env.EDITOR
clear
z nu
ls
z niri
z obsi
cd .obsidian/snippets/
ls
killall brave
paru -S jj
paru -Ss jj
paru -Ss jujutsu
paru -S jujutsu
jj
z ignis
jj
z des
ls
lf
yazi
jj
jj -h
jj init
jj git
jj git clone https://github.com/Rikiub/nomix-shell
ls
cd nomix-shell/
jj config 
jj config  edit
jj config set --user user.name "Rikiub";<\n>jj config set --user user.email "rikiub.dev@gmail.com"
jj config set --user user.name "Rikiub";
jj describe
ls
jj
clear
jj
clear
jj
yazi
ls
clear
jj
jj st
jj status
jj
j -h
jj -h
jj commit -h
ls
jj commit -h
jj commit 
jj status
jj commit .
cd ..
rm -r nomix-shell/
jj git clone https://github.com/Rikiub/nomix-shell
cd nomix-shell/
jj
jj status
yazi
ls
clear
jj
jj remo
jj -h
man jj
jj -h
jj b
jj b list
cd ..
rm nomix-shell/
rm nomix-shell/ -r
jj git clone https://github.com/Rikiub/media-dl
cd media-dl/
ls
ls -a
clear
ls
jj b lsit
jj b l
jj b list
jj b list --all
jj b list -h
jj b list -t
jj b list --all
jj b
jj log
jj
jj git
tldr jj
tldr --update
tldr jujutsu
tldr jj
jj
jj describe 
jj describe -h
jj
jj -h
jj push
jj -h
jj status
jj -h
jj abandon
jj status
jj abandon
jj -h
jj fix
jj 
jj b
jj new
jj new -h
jj git push -h
jj b
jj b move
jj b move -h
ls
jj
jj -h
jj edit
jj edit -h
jj edit -h @---- 
jj status
jj b
jj set
jj next
jj next -h
jj
jj set
jj edit
jj edit -h
jj edit cache@origin 
jj edit @------------------ 
jj status
jj
jj next 00
jj set
jj new
jj new -h
jj new api_changes@origin 
ls
jj new -hA 
jj new -h
jj new cache@origin 
jj status
cd ..
ls
rm -r media-dl/
jj git clone https://github.com/Rikiub/media-dl
cd media-dl/
jj status
jj new main
jj stats
jj status
ls
clar
clear
jj
jj status
jj diff
jj status
jj commit -m "changes"
jj status
touch xd
jj status
ls
clear
jj
rm xd
jj status
touch hello-bitch.md
jj status
cd Descargas
ls
yazi
gio trash
gio trash --list
gio trash --empty
clear
ls
clear
ls
jj
jj new --help
celar
clear
jj git
jj git clone https://github.com/Rikiub/media-dl
ls
cd media-dl/
ls
ls -a
clear
ls
ls -a
clear
ls
jj st
jj new
jj
clear
jj
clear
jj
jj log -h
jj log .gitignore 
jj log
jj log -hR 
jj log -h
jj log -p
jj log
jj log -h
jj undo
jj
jj undo
jj
jj undo
jjj
jj
jj abandon 
jj
cd ..
rm -r media-dl/
jj git clone https://github.com/Rikiub/media-dl
cd media-dl/
ls
jj
clear
ls
yazi
cd ..
z ~/Descargas
ls
cd ~
ls
cd Descargas
ls
jj git clone https://github.com/Rikiub/media-dl
cd media-dl/
ls
jj
ls -a
clear
ls
jj
jj describe -h
jj describe -m "Update dependencies"
jj log
uv sync
cargo clean
z rust
ls
cd Documentos/Dev/+Lang/rust/yournal-rs
cargo clean -h
cargo clean
cd ..
ls
uv sync -U
ls
clear
ls
clear
ls
clear
jj
jj s
jj st
jj diff
yazi
ls
ls -l
eza -l
chmod -h
chmod --help
jj st
jj diff
jj diff -h
jj diff --git
jj diff -h
jj diff --from @ --to @-- 
cd ..
rm -r media-dl/
jj git clone https://github.com/Rikiub/media-dl
cd media-dl/
ls
jj st
jj diff
jj diff h-
jj diff -h
jj diff -s
jj diff -
jj diff -h
jj diff --stat
jj diff -h
jj st
jj diff
jj diff pyproject.toml 
jj st
jj -h
jj new
jj
jj st
jj fix -h
man jj
man jj fix
clear
ls
jj
jj describe -m "Update dependencies"
uv sync -U
z media
ls
zi media
ls
clear
ls
git status
git pull
ls
jj st
jj git push
jj git remote
jj git remote list
jj git remote add origin git@github.com:Rikiub/media-dl.git
jj git remote rename origin git@github.com:Rikiub/media-dl.git
cd ..
ls
rm -r media-dl/
git clone git@github.com:Rikiub/media-dl.git
cd media-dl/
ls
ls -a
yazi
cd ..
rm -r media-dl/
git clone git@github.com:Rikiub/media-dl.git
ls
ls -a
jj git clone git@github.com:Rikiub/media-dl.git
cd media-dl/
ls -a
jj
jj st
jj describe -m "Update dependencies"
uv sync -U
jj st
jj undo
jj
jj st
cd ..
ls
rm -r media-dl/
jj git clone git@github.com:Rikiub/media-dl.git
cd media-dl/
jj new
jj describe -m "Update dependencies"
uv sync -U
jj st
jj b
jj b list
jj git push
jj b
jj b set -h
jj b set main
jj st
jj log
jj git push -h
jj diff
ls
jj
jj diff
jj log
jj log pyproject.toml 
jj
jj -h
jj
clear
jj
jj new -h
jj st
jj log -h
jj log
man jj log
man jj log -r
jj log -r
man jj log -r
ls
cd ..
ls
rm -r media-dl/
ls
z medi
ls
z des
paru -Ss dioxus
paru -S dioxus-cli
DX
dx
clear
dx
dx init -h
ls
dx init dioxus-test
ls
rm -r dioxus-test/
dx init dioxus-test
ls
cd dioxus-test/
ls
yazi
dx
paru -Ss tailwind
yazi
ls
clear
ls
cd Descargas
ls
dx init dioxus-test
ls
cd dioxus-test/
cd Descargas
ls
clear
cd dioxus-test/
ls
clear
ls
clear
ls
lsg
clear
file- h
file -h
sudo pacman -S --needed \<\n>  webkit2gtk-4.1 \<\n>  base-devel \<\n>  curl \<\n>  wget \<\n>  file \<\n>  openssl \<\n>  appmenu-gtk-module \<\n>  libappindicator-gtk3 \<\n>  librsvg \<\n>  xdotool
fish
paru -Qs webkit
ls -a
paru -Ss webkit
sudo systemctl status resolve
sudo systemctl status systemd-resolved.service 
sudo systemctl stop systemd-resolved.service 
paru -Ss webkit
cd Descargas
l
clear
ls
cd dioxus-test/
xdtool
xdotool 
xdotool -h
xdotool --help
cd dioxus-test/
cd Descargas
cd dioxus-test/
ls
ls -a
ls -du
ls --du
paru -Rns webkit2gtk
paru -Rns webkit2gtk xdotool
cd des
cd Descargas
ls
rm -r dioxus-test/
paru -Rns webkit2gtk-4.1  xdotool
paru -Rns dioxus-cli
ls
ls -a
cd Descargas
ls
sudo lshw -C display
lshw
lspci | grep VGA
grep -h
lspci | rg VGA
lscpu | sed -nr '/Model name/ s/.*:\s*(.*) @ .*/\1/p'<\n>Intel(R) Atom(TM) CPU  Z3735F
sed
lscpu | sed -nr '/Model name/ s/.*:\s*(.*) @ .*/\1/p'<\n>Intel(R) Atom(TM) CPU  Z3735F
lscpu | sed -nr '/Model name/ s/.*:\s*(.*) @ .*/\1/p'
lscpu
ls
cd Descargas
ls
cd ..
ls
ls Seguridad/
ls
ls -s
ls -s Seguridad/
ls
ls Musica
ls Imagenes
ls
ls -h
ls
clear
ls
ls -s Imagenes
ls Documentos
ls Documentos/Dev/
ls Documentos/Dev/+Lang/
ls Documentos/Dev/+Lang/python/media-dl/
m4
m4 -h
m4 --help
pip
topgrade --yes --cleanup
ls
z svel
ls
yazi
deno 
ls
ls -a
tldr deno
deno -h
deno run -h
tldr deno run
deno run npm:sv
deno run -A npm:sv
deno run -A npm:sv create
lks
ls
ls day12
yazi
deno run -A npm:sv create
cd day12
ls
code .
deno task dev
deno outdated
deno outdated --update
open package.json
code .
paru -Sy niri
btop
pid
ps
ps | where name =~ "swww"
cd Imagenes
ls
z niir
ls
z niri
ls
btop
ps
ps -h
ps -l
ps -l | where name =~ "wallpaper"
ps -l | where command =~ "wallpaper"
niri msg layers
z ignis
niri msg
code .
niri msg pick-window
clear
niri msg 
niri msg
niri -h
niri msg
niri msg layers
niri msg -h
niri msg overview-state
niri msg event-stream
clear
ls
clear
niri msg -h
niri msg action
niri msg action open-overview
niri msg action toggle-overview
killall ignis
ignis init
niri msg action toggle-overview
z ignis
code .
killall ignis
ignis init
niri msg
niri msg action
niri msg action | table
niri msg action | rg "xd"
niri msg action | rg "set"
niri msg action | rg
niri msg action | rg set
niri msg action | rg "niri msg"
niri msg action
niri msg action |grep niri
niri msg action | grep niri
z niri
ls
rm config.kdl9iYVTn.bck
z obsi
ls
cd .obsidian/snippets/
ls
ignis -h
ignis --help
taplo
paru -Rns extra/python-typing-inspection 
paru -Rns python-typing-inspection 
paru -Ss dracut
ignis --help
ignis list-windows
topgrade --yes --cleanup
ignis --help
killall ignis
ignis init
job spawn { ignis init }
z niri
ignis --help
ignis reload
ignis -h
ignis --help
ignis open-window -h
ignis open-window --help
ignis --help
ignis run-file --help
killall code
niri msg action toggle-window-urgent 
niri msg action toggle-window-urgent  --help
niri msg action toggle-window-urgent --id 1
niri --help
niri msg -h
niri msg windows
niri msg action toggle-window-urgent --id 5819
niri
ps
fastfetch 
topgrade --yes --cleanup
z ignis
git log
git status
git diff
git add .
git commit
git push
clear
ls
killall ignis
code .
ignis init
paru -Syu
systemctl stop systemd-resolved.service 
code .
ignis init
job spawn { ignis init }
z ignis
killall ignis
code .
ignis init
notify-send "XD" "LOREM IPSUM"
code .
ignis init
git status
git add .
git commit
git push
notify-send "XD" "LOREM IPSUM"
z ignis
git add .
git commit -m ":bug: Fix notification shadow"
git push
paru -Ss prettier
ks
ls
biome
biome check styles/
paru -S prettuer
git add .
ruff format
ruff check --select I --fix
ruff format
git add .
git commit -m ":lipstick: Format with Ruff and Prettier"
git push
clear
notify-send "XD" "LOREM IPSUM"
ignis init
job spawn { ignis init }
job
job flush
job id
job list
z ignis
ls
clear
code .
clear
killall ignis
notify-send "XD" "LOREM IPSUM"
clear
paru -Ss icon browser
paru -Ss gtk icon browser
paru -Ss gtk-icon-browser
claer
clear
clea
clear
paru -Ss icon explorer
clear
paru -Ss gtk3-demos
paru -S gtk3-demos
gtk3-icon-browser 
gsettings -h
gtk4-image-tool 
gtk4-launch 
gtk4-layer-demo 
gtk4-update-icon-cache 
notify-send "XD" "LOREM IPSUM"
gtk4-update-icon-cache 
notify-send "XD" "LOREM IPSUM"
z ignis
code .
killall ignis
notify-send "XD" "LOREM IPSUM"
ignis init
clear
notify-send "XD" "LOREM IPSUM"
clear
notify-send "XD" "LOREM IPSUM"
cler
clear
git add .
z ignis
git status
git add .
git commit
git push
git add .
git commit ":lipstick: Variables renames"
git commit -m ":lipstick: Variables renames"
git push
clear
z des
git clone git@github.com/Rikiub/ignis.git
git clone git@github.com:Rikiub/ignis.git
clear
ls
rm -r OMORI.Build.8879120/
ls
rm -r crDroidAndroid-15.0-20250520-garnet-v11.5.zip
ls
cd ignis
ls
code .
uv sync
uv run ignis
niri msg -
niri msg -h
niri msg event-stream
clear
niri msg event-stream
niri msg -h
niri msg overview-state
niri msg overview-state -h
niri msg event-stream --json
niri msg event-stream -h
niri msg -h
niri -h
niri msg -h
uv run ignis init
clear
uv run ignis init
clear
uv run ignis init
clear
uv run ignis init
git branch feat/niri-overview-status
git checkout feat/niri-overview-status 
niri status
git status
git add ignis
git status
uv run ignis init
niri msg -j event-stream
cd Descargas/ignis/
git add ignis
git commit -m
git commit 
git status
git commit
clear
git push
git config -h
git config --global
git config push.autoSetupRemote true
git push
git status
z ignis
zi ingis
z ignis
code .
job spawn { ignis init }
zi ignis
ls
clear
git status
killall ignis
uv run ignis init
overlay use .venv/bin/activate.nu 
clear
ignis init
exit
job spawn { ignis init }
z ignis
z des
ls
rm -r ignis
z ig
ls
clear
ls
git add .
git commit -m ":bug: (bar): Fix workspaces scrolling not working on Hyprland"
git push
clear
ps
ps | where name =~ "ignis"
topgrade --yes --cleanup
ls
ls -a
zoxide
z ign
cd Descargas
clear
z nus
ls
helix
ls
cl
z ig
cd .config/ignis
ls
clear
code .
killall ignis
ignis init
notify-send "XD" "LOREM IPSUM"
git add .
git status
git commit -m ":lipstick: (bar): Adjust buttons padding and accent workspaces when Niri Overview is opened"
git push
date
bash -c "date"
bash -c "datetime"
bash -c "calendar"
z ignis
helix .
z ignis
paru -Sy zoxide
ls
clear
paru -Sy ignis-git
paru -Sy
paru -Syu
paru -Rns ignis-git
ignis
paru -S python-ignis-git
paru -Syu
paccache -rk0
paru -Syu
z ignis
cd .config/ignis
clear
code .
notify-send "XD" "LOREM IPSUM"
ps | where name =~ "ignis"
paru -Sy
paru -Syu
cd .config/ignis
code .
killall ignis
gtk3-icon-browser 
clear
gsettings set 
gsettings get org.gnome.desktop.interface icon-theme
gsettings set org.gnome.desktop.interface icon-theme
gsettings set org.gnome.desktop.interface icon-theme Tela
ls /usr/share/icons
gsettings set org.gnome.desktop.interface icon-theme Tela-circle
gtk3-icon-browser 
gsettings set org.gnome.desktop.interface icon-theme Papirus
gsettings set org.gnome.desktop.interface icon-theme Tela-circle
gsettings set org.gnome.desktop.interface icon-theme Papirus
notify-send "XD" "LOREM IPSUM"
gsettings set org.gnome.desktop.interface icon-theme Tela-circle
notify-send "XD" "LOREM IPSUM"
gsettings set org.gnome.desktop.interface icon-theme Tela-circle
notify-send "XD" "LOREM IPSUM"
gsettings set org.gnome.desktop.interface icon-theme Papirus
notify-send "XD" "LOREM IPSUM"
killall brave
ignis init
nm-applet
git status
git add .
git commit -m ":lipstick: Internal styles refactorization"
git push
clear
ignis init
notify-send "XD" "LOREM IPSUM"
cd .config/ignis
code .
killall ignis
cd .config/ignis
killall ignis
code .
ignis init
git add 
git add .
git commit -m ":sparkles: (bar): Move launcher button to clock"
git push
notify-send "XD" "LOREM IPSUM"
notify-send "XD" "LOREM IPSUM" -h
notify-send "XD" "LOREM IPSUM" --help
notify-send "XD" "LOREM IPSUM" -A "XD" "NO"
notify-send "XD" "LOREM IPSUM" --action "XD"
notify-send "XD" "LOREM IPSUM" --action "XD" "PERO"
notify-send "XD" "LOREM IPSUM" --action "XD" -A "PERO"
ignis init
git add .
git commit -m ":lipstick: Rename actionable_button to action_button"
ruff format
ruff check --select I --fix
git commit -m ":lipstick: Format with ruff"
git add .
git commit -m ":lipstick: Format with ruff"
git push
ignis init
git add .
git commit -m ":sparkles: (bar): Hide windows when niri overview is opened"
git push
ignis init
ruff check --select I --fix
notify-send "XD" "LOREM IPSUM" --action "XD" -A "PERO"
notify-send "XD" "LOREM IPSUM"
notify-send "XD" "LOREM IPSUM" --action "XD" -A "PERO"
ignis init
notify-send "XD" "LOREM IPSUM"
job spawn { ignis init }
git status
git diff
git add. 
git add .
git commit -m ":lipstick: Change notification colors"
git push
cd .config/ignis
ps | where name =~ "ignis"
fastfetch 
btop
paru -Syu
nm-applet
cd .config/ignis
code .
killall ignis
z .config/niri
cd .config/niri
ls
cd .config/niri
datetimectl
timedatectl 
timedatectl  -h
timedatectl status
timedatectl show
localectl 
$env.LC_TIME
notify-send "XD" "LOREM IPSUM"
ignis init
notify-send "XD" "LOREM IPSUM"
ps | where name =~ "ignis"
ignis init
ps | where name =~ "ignis"
notify-send "XD" "LOREM IPSUM" --action "XD" -A "PERO"
notify-send "Lorem Ipsum" "Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem IpsumLorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum"
notify-send "XD" "LOREM IPSUM" --action "XD" -A "PERO"
notify-send "Lorem Ipsum" "Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem IpsumLorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum"
ignis init
notify-send "XD" "LOREM IPSUM" --action "XD" -A "PERO"
ignis init
notify-send "Lorem Ipsum" "Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem IpsumLorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum"
notify-send "Lorem Ipsum"
notify-send "Lorem Ipsum" "Lorem Ipsum" --help
notify-send "Lorem Ipsum" "Lorem Ipsum" -u low
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox"
ruff check --select I --fix
ruff format
git add .
git status
git commit -m ":lipstick: Big refactorization and style notifications"
git push
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox"
ignis init
clear
ignis --help
ignis list-windows
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox"
ignis init
git add .
git commit -m ":bug: Fix notifications not displaying when notification center is opened"
git push
clear
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" --help
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
cd .cache/ignis/
ls
bat ignis_options.json 
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
ps | where name =~ "ignis"
killall ignis
job spawn { ignis init }
ps | where name =~ "ignis"
fastfetch 
ps | where name =~ "ignis"
fastfetch 
ps | where name =~ "ignis"
btop
ps | where name =~ "ignis"
clear
ps | where name =~ "ignis"
killall ignis
job spawn { ignis init }
ps | where name =~ "ignis"
cd .config/ignis
killall ignis
cd .config/ignis
ignis init
cd .config/ignis
helix .
code .
ignis init
git checkout launcher-style
cd .config/ignis
git checkout launcher-style
git branch launcher-style
git checkout launcher-style
git add .
git commit -m ":lipstick: (launcher): Refactorization and increase buttons size for grid layout"
ignis init
git switch main 
ignis init
git switch launcher-style 
ignis init
git merge launcher-style main
git merge main launcher-style 
tldr git merge
git switch main
git merge launcher-style 
ignis init
git status
git log
git push
ps | where name =~ "ignis"
ignis init
job spawn { ignis init }
killall ignis
job spawn { ignis init }
ps | where name =~ "ignis"
btop
fastfetch 
topgrade --yes --cleanup
q
paru -Rns ignis-git
paru -Rns python-ignis-git
paru -S python-ignis-git
paccache -rk0
paru -Syu python-ignis-git
paru -Sy python-ignis-git
paru -S python-ignis
arch-clean
rm -r /var/cache/pacman/pkg/download-gwG03v
rm -r /var/cache/pacman/pkg/download-gwG03v/
sudo rm -r /var/cache/pacman/pkg/download-gwG03v/
arch-clean
paru -Rns vulkan-headers
arch-clean
paru -Rns meson-python patchelf python-annotated-types python-build python-markdown-it-py python-mdurl
paru -Rns meson-python patchelf python-annotated-types python-build python-markdown-it-py python-mdurl python-rich python-typer
arch-clean
clear
ls
killall ignis
ignis init
paru -Rns python-ignis
paru -S python-ignis-git
ignis
paru -S python-ignis
ignis systeminfo
ls
paru -Rns python-ignis
ls
cd des
ignis systeminfo
paru -Rns python-ignis
paru -S python-ignis
cd Descargas
ls
git clone https://github.com/ignis-sh/ignis.git
ls
cd ignis
ls
uv sync
cd ..
mv ignis/ ..
ls
cd ..
ls
ls -a
yazi
ls
git clone https://github.com/ignis-sh/ignis.git
cd ignis
ls
uv sync
ls
clear
ls
overlay use .venv/bin/activate.nu 
clear
cd ignis
ignis init
uv run ignis init
job spawn { uv run ignis init }
ps | where name =~ "ignis"
topgrade --yes --cleanup
rm -r .cache/paru
paru -S python-ignis-git
paru -Rns python-ignis-git
paru -S python-ignis-git
ignis init
killall ignis
ls
rm -r ignis
cd Descargas
ls
clear
ls
gio trash --empty
swww --help
swww img -h
killall ignis
ignis init
job spawn { ignis init }
cd .cache/sww
cd .cache/swww
ls
bat VGA-1 
z ignis
ls
cd .config/ignis
code .
killall ignis
bat VGA-1 
ignis init
git add .
git status
git commit -m ":bug: Fix matugen not changing color scheme"
git push
ps | where name =~ "ignis"
fastfetch 
ps | where name =~ "ignis"
fastfetch 
ps | where name =~ "ignis"
fastfetch 
ps | where name =~ "ignis"
cd .config/ignis
clear
code .
clear
ps | where name =~ "ignis"
killall ignis
ps | where name =~ "ignis"
cd .config/ignis
git add .
git status
git commit -m ":lipstick: (matugen): add checks"
git push
clear
ps | where name =~ "ignis"
ignis init
git add .
git commit -m ":lipstick: (launcher): Consistent app item size"
git push
clear
ps | where name =~ "ignis"
ignis init
ps | where name =~ "ignis"
paru -Ss pygobject
ps | where name =~ "ignis"
ignis init
clear
cd .config/ignis
code ,
code .
killall ignis
ignis init
ps | where name =~ "ignis"
pgrep firefox
ps | where name =~ "ignis"
killall firefox
pgrep firefox
killall firefox
pgrep firefox
kill -9 18856
pgrep firefox
fastfetch 
ps | where name =~ "ignis"
ignis init
ps | where name =~ "ignis"
tree /
ps | where name =~ "ignis"
z ignis
cd .config/ignis
clear
code .
killall ignis
ps | where name =~ "ignis"
ignis init
ps | where name =~ "ignis"
cd .config/ignis
git branch launcher-arch
git checkout launcher-arch 
git switch main
ls
git status
git add popup_windows.py
git add nomix/widgets/popup_window.py
git status
git commit -m ":lipstick: Chore to popup_window.py"
git push
git status
git checkout launcher-arch 
git add .
git commit -m ":lipstick: New launcher architecture"
git switch main
ps | where name =~ "ignis"
ignis init
ps | where name =~ "ignis"
git switch launcher-arch 
clear
git switch launcher-arch 
git pull
git branch --set-upstream-to=origin/main launcher-arch
git pull
git status
git pull
git config pull.rebase false
git pull
ignis init
ls
clear
git status
git switch main
git status
git add .
git commit -m ":lipstick: Chore to popup_window.py"
git push
git switch launcher-arch 
git pull
clear
ps | where name =~ "ignis"
btop
ps | where name =~ "ignis"
tree /
tree /
ps | where name =~ "ignis"
git status
git switch main 
git status
git add .
git commit -m ":lipstick: Changes"
git switch main
git switch launcher-arch 
clear
ps | where name =~ "ignis"
git status
git add .
git commit -m ":lipstick: Changes"
git switch main
git switch launcher-arch 
cd /usr/share/applications/
ls
cp yazi.desktop ~/.local/share/applications/
cd  ~/.local/share/applications/
ls
helix yazi.desktop 
clear
ps | where name =~ "ignis"
cd ..
ls
cd applications/
ls
rm yazi.desktop
bat brave-kajebgjangihfbkjfejcanhanjmmbcfd-Default.desktop 
rm brave-kajebgjangihfbkjfejcanhanjmmbcfd-Default.desktop
ls
bat mimeinfo.cache 
ignis inspector
ps | where name =~ "ignis"
ignis init
ignis inspectorç
ignis inspector
clear
ignis inspector
ignis init
cd .config/ignis
ps | where name =~ "ignis"
ignis inspector
ps | where name =~ "ignis"
ignis inspector
git status
git commit -m ":sparkles: (launcher): Working GridView launcher"
git add .
git commit -m ":sparkles: (launcher): Working GridView launcher"
pgrep obsidian
systemctl stop systemd-resolved.service 
ps | where name =~ "ignis"
cd .config/ignis
helix
topgrade --yes --cleanup
paru -Rns qt6-translations
paru -Rns qt6-translations qt6-base
clear
paru -S qt6-translations
paru -S qt6-translations --overwrite \*
helix .
ps | where name =~ "ignis"
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
ps | where name =~ "ignis"
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
ps | where name =~ "ignis"
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
ps | where name =~ "ignis"
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
ps | where name =~ "ignis"
ps | where name =~ "ignis"
topgrade --yes --cleanup
cd .config/ignis
clear
code .
killall ignis
cd .config/ignis
clear
ps | where name =~ "ignis"
ignis init
git status
git add .
git commit -m ":sparkles: (launcher): Working GridView launcher"
git switch main
ps | where name =~ "ignis"
git add .
git status
git commit -m ":lipstick: Style :selection"
git push
clear
ls
cler
clear
ls
clear
git switch launcher-arch 
git pull
clear
ps | where name =~ "ignis"
ignis init
ps | where name =~ "swww"
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
btop
btpo
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
btop
clear
ps | where name =~ ignis
git status
git add .
git commit -m ":lipstick: Chore changes"
clear
git switch main
clear
notify-send "Lorem Ipsum" "Lorem Ipsum" -i "firefox" -a "firefox"
notify-send "Lorem Ipsum" "Lorem Ipsum"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
git add .
git commit -m ":lipstick: (notification): Don't show default icon when there is not icon"
git push
git switch launcher-arch 
git pull
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
clear
cd .config/ignis
git switch main
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
clear
git branch
git branch notification-popups-rework
git switch notification-popups-rework 
git add .
git commit -m ":lipstick: (popups): Rework"
git switch launcher-style 
git switch main
git branch --help
tldr git branch
git branch --delete launcher-style 
git branch --remotes
git branch
clear
git checkout xd
tldr git switch 
git switch -h
git switch -c custom-views
git switch launcher-arch 
git switch custom-views 
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --help
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git add .
git status
git commit -m ":lipstick: Work in progress"
git switch notification-popups-rework 
git switch custom-views 
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
btop
bto
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git add.
git add .
git commit -m ":lipstick: Rework notification center ant notification popups to use ListView"
git switch notification-popups-rework 
git switch launcher-arch 
git status
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git switch custom-views 
git merge launcher-arch 
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git status
git add .
git commit -m ":lipstick: Merge launcher-arch"
git branch --delete launcher-arch 
git switch main
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git switch custom-views 
ignis init
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git add .
cd .config/ignis
git add .
git status
git commit -m ":bug: (launcher): Fix srolling"
btop
ignis init
git add .
git commit -m ":lipstick: (launcher): Show placeholder when no items are founded"
ignis init
git status
git add .
git commit -m ":lipstick: (launcher): Change placeholder text"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ps | where name =~ ignis
cd .config/ignis
clear
code .
killall ignis
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
btop
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
btop
ps | where name =~ ignis
clear
ps | where name =~ ignis
ignis init
ps | where name =~ ignis
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
cd .config/ignis
clear
git status
git add .
git commit -m ":lipstick: Internal changes"
clear
btop
ps | where name =~ ignis
git switch main 
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git switch custom-views 
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git switch main
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git switch custom-views 
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git switch main
git switch custom-views 
btop
ps | where name =~ ignis
fastfetch 
ps | where name =~ ignis
btop
ps | where name =~ ignis
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
fastfetch 
clear
fastfetch 
clear
btop
ps | where name =~ ignis
git switch main
clear
tree /
clear
clearfree
paru -Ss stress
watch -h
free
watch -h
watch free -h
btop
paru -Ss stress
paru -S stress
tldr stress
fastfetch 
stress --vm 2 --vm-bytes 256m
ignis init
cñear
clear
clear -h 
clear
stress --vm 2 --vm-bytes 256m
stress --vm 5 --vm-bytes 256m
fastfetch 
ps | where name =~ ignis
fsatfetch
fastfetch 
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
fastfetch 
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
fastfetch 
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ps | where name =~ ignis
fastfetch 
stress --vm 5 --vm-bytes 256m
fastfetch 
ps | where name =~ ignis
fastfetch 
stress --vm 3 --vm-bytes 256m
cd .config/ignis
git switch custom-views 
clear
ps | where name =~ ignis
btop
clear
ps | where name =~ ignis
ps | where name =~ swww
ps | where name =~ code
ps | where name =~ ignis
stress --vm 3 --vm-bytes 256m
ps | where name =~ ignis
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
clear
ignis init
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
git add .
git commit -m ":lipstick: Rename file"
ps | where name =~ ignis
paru -Syu
paru -Ss ty
paru -Ss python ty
paru -Ss python-ty
cd Documentos/Dev/+Lang/python/media-dl/
code .
clear
ps | where name =~ ignis
clear
overlay use .venv/bin/activate.nu 
clear
uv sync -U
typer
git add .
git commit -m "Update dependencies"
git status
git push
clear
media-dl
clea
clear
clea
clear
media-dl
typer
media-dl
clear
media-dl
ps | where name =~ ignis
clear
ls
media-dl --help
typer docs/
typer
typer --install-completion
clear
media-dl -h
media-dl --help
media-dl -v
media-dl --version
media-dl -f
ls
cd temp
clear
ls
media-dl "ytmusic:Sub urban rabbit hole" -h
media-dl "ytmusic:Sub urban rabbit hole" --help
media-dl "ytmusic:Sub urban rabbit hole" -f audio
ls
mediainfo `Sub Urban - RABBIT HOLE.m4a`
mpv "Sub Urban - RABBIT HOLE.m4a" 
ls
rm `Sub Urban - RABBIT HOLE.m4a`
clear
ls
clear
media-dl "ytmusic:Sub urban rabbit hole" -f audio --help
media-dl "youtube:ZUTOMAYO - Kira killer" -f video -q 480
ls
mpv "ずっと真夜中でいいのに。ZUTOMAYO - ずっと真夜中でいいのに。『綺羅キラー (feat.mp4" 
ls
rm `ずっと真夜中でいいのに。ZUTOMAYO - ずっと真夜中でいいのに。『綺羅キラー (feat.mp4`
clear
ls
claer
clear
media-dl "youtube:ZUTOMAYO - Kira killer" -f video
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio --verbose
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio --verbose
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio --verbose
cd ..
git status
git add .
git commit
git push
clear
cd temo
cd temp
clear
ls
yazi
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio --verbose
ls
rm `ZUTOMAYO, Mori Calliope - Kira Killer.m4a`
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio --verbose
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio
ls
rm `ZUTOMAYO, Mori Calliope - Kira Killer.m4a`
ls
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
rm `zutomayo - Kira Killer (feat.mp3`
rm `ZUTOMAYO, Mori Calliope - Kira Killer.m4a`
ls
rm `ZUTOMAYO, Mori Calliope - Kira Killer.m4a`
me
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
me
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
touch ZUTOMAYO, Mori Calliope - Kira Killer.m4a
ls
yazi
ls
touch "ZUTOMAYO, Mori Calliope - Kira Killer.m4a"
yazi
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
arch-clean
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
mv `ZUTOMAYO, Mori Calliope - Kira Killer.m4a` "zutomayo - Kira Killer (feat. Mori Calliope)"
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
rm `zutomayo - Kira Killer (feat. Mori Calliope)`
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
rm `zutomayo - Kira Killer (feat.mp3`
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
rm `zutomayo - Kira Killer (feat. Mori Calliope).mp3`
ls
clear
cd ..
pytest
ls
cd temp
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f audio
media-dl "soundcloud:ZUTOMAYO - Kira killer" -f video
ls
rm `zutomayo - Kira Killer (feat. Mori Calliope).mp3`
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "ytmusic:ZUTOMAYO - Kira killer" -f video
ls
rm `ZUTOMAYO, Mori Calliope - Kira Killer.m4a`
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio
l
ls
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio
ls
media-dl "youtube:ZUTOMAYO - Kira killer" -f video
ls
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio -o "{title}"
ls
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio -o "{title}.{ext}"
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio -o "{title}.{extension}"
media-dl "youtube:ZUTOMAYO - Kira killer" -f audio -o "{title}"
ls
yazi
ls
clear
cd ..
ls
git add .
git commit -m "feat: Improve duplicated files detection"
git push
clear
ruff format
ruff check --select I --fix
git add .
git commit -m "Format with Ruff"
git push
ps | where name =~ ignis
clear
paru -Ss quickshell
paru -S quickshell
paru -Ss google-breakpad
paru -S quickshell
arch-clean
S
arch-clean
paru -Rns cli11 cmake cppdap google-breakpad jsoncpp qt6-shadertools rhash wayland-protocols
clear
ps | where name =~ ignis
paru -Ss quickshell
cd .config/ignisç
cd .config/ignis
clear
ls
clear
cd .config/ignis
code .
clear
clear
killall ignis
ls
clear
ls
git diff main custom-views 
clear
ls
git branch
git switch main
git switch -c old-snapshot
git add .
git commit -m "Snapshot before merge"
ls
git branch
git switch main
ls
git merge custom-views 
git status
clear
ls
clear
ls
ignis init
git push
clear
git restore .
ignis init
clear
topgrade --yes --cleanup
clear
ls
clear
git add .
git commit -m ":sparkles: Migrate to new ignis syntax"
git push
ruff check --select I --fix
ruff format
ruff check --select I --fix
git add .
git diff
git diff main origin/main 
git diff main
git add .
git commit -m ":lipstick: Format with Ruff"
git push
clear
ignis init
clear
git add .
git commit -m ":lipstick: Syntax changes"
ruff check --select I --fix
ruff format
git add .
git commit -m ":lipstick: Format with Ruff"
git push
clear
ls
cd Descargas
ls
clear
uv init
uv init xd
ignis -h
ignis --help
ls
ls -a
cd xd
ls
ls -a
yazi
cd Descargas
ls
cd ..
ls -a
cd Descargas
ls
uv init --lib xd
cd xd
ls
ls -a
yazi
ls
cd ..
ls
rm -r xd
cler
cd ..
ps | where name =~ ignis
cd .config/ignis
code .
clea
clear
killall ignis
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
git add .
git commit -m ":lipstick: Remove unused styles"
git push
ignis init
git add .
ignis init
ls
git add .
git commit -m ":lipstick: Refactorize styles"
git push
tree -h
tree --help
tldr tree
tree -C
tree -C /
clear
tree -C /
clear
fastfetch 
ps | where name =~ ignis
paru -Ss quickshell
fastfetch 
ps | where name =~ ignis
paru -S quickshell
quickshell --help
qs
qs --help
quickshell --help
tldr ignis
tldr quickshell
ls
cd .config
mkdir quickshell
cd quickshell/
ls
touch shell.qml
code .
clear
quickshell --help
$env.QML2_IMPORT_PATH
cd .config/quickshell/
code .
quickshell
paru -Ss qml
helix --health qml
paru -Ss qmlls
paru -Ss qt6
paru -Ss qt6-declarative
qmlls
paru -S qt6-declarative
qmlls6
qmldir
cd .config/helix
qml6 -h
qmlls --help
qmlls6 -h
qmlls6 --help
tldr qmlls6
qmlls6 --help
qmlls6
cd .config/quickshell/
ls
helix shell.qml 
qmlls6 --help
helix --health qml
helix --health qml6
helix --health qml
helix shell.qml 
helix --health qml
which quickshell
quickshell --help
$env
qmlscene6 -h
qmlscene6 --list-imports
qml6 --list-imports
qml6 --help
qmlscene6 --list-imports
ps | where name =~ ignis
killall ignis
paru -Ss qt6 docs
paru -Ss qt6 doc
quickshell
clear
paru -S qt6-doc
cd .config/quickshell/
code .
clear
cd .config/quickshell/
quickshell
clear
quickshell
clear
ps | where name =~ quickshell
quickshell
job spawn { ignis init }
cd .config/quickshell/
clear
ls
bash
clear
cd .config/quickshell/
rg QT
rg Qt
fd Qt
fd .
cd ~/
cd /
tldr fd
fd --help
fd /
paru -Ss qt6-tools
fd "Qt/"
paru -S qt6-tools
helix .
cd .config/quickshell/
helix .
paru -Ss qt6-tools
paru -Ss qt tools
paru -Ss qt
paru -Ss qt6
paru -Ss qt6-tools
paru -Sg qt6
paru -Ss qt6 | rg "(qt6)"
paru -Ss qt6-language
paru -S qt6-languageserver
cd .config/quickshell/
helix .
paru -Qs qt
paru -Rns qt6-languageserver
zbar
paru -Rns zba
paru -Rns zbar
paru -Qs qt
paru -Rns qt6-tools
paru -Qs qt6
ps | where name =~ quickshell
ps | where name =~ ignis
paru -Qs qt6
paru -Qs qml
paru -Ss qml
paru -Ss qmll
paru -Ss qmlls
paru -Rns qt6-declarative
which qmlls
which qmlls6
ls /usr/share/doc/
ls /usr/share/doc/qt6/qml
ls /usr/share/doc/qt6/qdoc/
paru -Rns qt6-doc
paru -Ss qt6-doc
paru -Ss qt6-quick
paru -Ss qt6 doc
paru -S qt6-doc
paru -Ss qt doc
ls /usr/share/doc/qt6/qdoc/
ls /usr/share/doc/qt6/qml
ls /usr/lib/qt/
ls /usr/lib/qt/qml
ls /usr/lib/qt6/
ls /usr/lib/qt6/qml/
ls /usr/lib/qt6/qml/QtQuick/
ls /usr/lib/qt6/qml/QtQuick/Window/
qmlls6 --verbose
qmlls6 --verbose | rg "loading docs"
ls /usr/share/doc/accountsservice/
ls /usr/share/doc/qt6/
cd .config/quickshell/
$env.QT_DOCS_DIRS="/usr/share/doc/qt6"
$env.QT_DOCS_DIRS = "/usr/share/doc/qt6"
$env.QML_IMPORT_PATH = "/usr/lib/qt6"
helix .
$env.QML2_IMPORT_PATH = "/usr/lib/qt6"
helix .
$env."QML2_IMPORT_PATH"
$env.QML_IMPORT_PATH
$env."QML2_IMPORT_PATH"
$env.QML2_IMPORT_PATH = "/usr/lib/qt6"
$env."QML2_IMPORT_PATH"
paru -Rns qt6-doc
paru -S qt6-doc
paru -Rns qt6-doc
paru -Ss qch
paru -Ss qml
paru -Ss qml qch
paru -Ss qml doc
paru -Ss qml blue
paru -Ss qml bluez
paru -Ss qt doc
ls /usr/share/doc/qt6/
fd /usr/share/doc/qt6/
fd . /usr/share/doc/qt6/
paru -S qt6-doc
fd Qt /usr/share/doc/qt6/
fd qch /usr/share/doc/qt6/
clear
cd .config/quickshell/
cd /usr/lib/qt6/
ls
cd ~~
cd ~
cd .config/quickshell/
$env.QML_IMPORT_PATH = "/usr/lib/qt6/qml"
helix .qmlls.ini
helix .
ls
yazi
ls -a
qmlls6
qmlls6 --verbose
helix .qmlls.ini 
qmlls6 --write-defaults
ls
helix .qmlls.ini 
ls
rm .qmlls.ini
qmlls6 --write-defaults
pacman -Ql qt6-declarative
pacman -Ql qt6-declarative | rg qmlls
pacman -Ql qt6-declarative | rg qmll
helix .qmlls.ini 
$env.QT_SELECT = 6
helix .
code .
clear
paru -Ss qt
paru -Ss qt language
paru -Ss qt6-languageserver
paru -S qt6-languageserver
qt-faststart
qmlls6 
ls
cd .config/quickshell/
helix .
ls
paru -Rns qt6-languageserver
qmlls6 --help
qmlls6 --doc-dir /usr/share/doc/qt6/
ls
ls -a
qmlls6 --write-defaults
clear
ls
helix .
clear
ls -a
ls
clear
ls
clear
paru -Qs qt6
paru -Qs qt
qmlls6 -d /usr/share/doc/qt6 --stdio
cd .config/quickshell/
qmlls6 -d /usr/share/doc/qt6 --stdio
qmlls6 --help
ls /usr/share/doc/qt6/
qmlls6 --version
qmlls6 -v
ls
clera
clear
ls
cler
helix .
code .
cd .cache/quickshell/
l
ls
paru -Sy qt6-declarative qt6-doc
cd .config/quickshell/
clear
ls
helix .
clear
ls
ls -a
ls
paru -S qt6-tools
ls
cd .config/quickshell/
helix .
ls
paru -S qt6-tools
5996
paru -Rns qt6-tools
clear
ls
clear
code .
qs
quickshell
ps | where name =~ ignis
clear
paru -Syu
sudo helix /etc/pacman.conf 
x265 
x265  --help
x265 --help | bat -p
media-dl --help | bat -p
clear
paru -Syu
killall obsidian
cd .config/ignis
code .
clear
killall ignis
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
ignis init
git restore .
job spawn { ignis init }
ls
cd Descargas
cd .config/quickshell/
clear
ls
helix .
code .
clear
cd .config/quickshell/
qdoc
qdoc --help
cd ~/Documentos/Dev/+Lang/rust/
ls
clear
cargo --help
cargo new slint-test
cd slint-test/
ls
ls -a
code .
clear
paru -Ss slint
paru -Ss slint lsp
paru -S slint-lsp-bin
paru -Ss qt5
paru -Ss qt5-base
clear
cd ..
ls
rm slint-test/
rm slint-test/ -r
jj
paru -Ss cargo-generate
paru -S cargo-generate
cargo-generate 
cargo-generate gen 
cargo-generate 
cargo-generate gen
tldr cargo-generate
cargo-generate geb
cargo-generate gen
cargo gen
ls
mkdir slint-test
cd slint-test/
cargo-generate gen slint-ui/slint-rust-template
ls
cd ..
ls
rm slint-test/ 
cargo-generate gen slint-ui/slint-rust-template
cd slint-test/
ls
clear
cd Documentos/Dev/+Lang/rust
ls
rm -r slint-test/
ls
cd ..
cd python/
ls
fetch
fetch -h
http get
http get https://github.com/slint-ui/slint-python-template/archive/refs/heads/main.zip
http get https://github.com/slint-ui/slint-python-template/archive/refs/heads/main.zip --help
tldr curl
http
http get https://github.com/slint-ui/slint-python-template/archive/refs/heads/main.zip --help
downlod
downlooad
download
http
http get https://github.com/slint-ui/slint-python-template/archive/refs/heads/main.zip --help
http get https://github.com/slint-ui/slint-python-template/archive/refs/heads/main.zip | save slint.zip
ls
yazi
unpack slint.zip
aunpack
atool 
aunpack slint.zip
ls
yazi
cd slint-memory/
ls
open pyproject.toml
ls
ls -a
uv sync
ls
overla
overlay use .venv/bin/activate.nu 
clear
code .
clear
slint
ls
python main.py 
clear
python main.py 
ls
cd ..
rm -r slint-memory/
ls
ls -a
cd textual_apps/
ls
cd ..
ls
cd tex
cd textual_apps/
lsg
yazi
cd Documentos/Dev/+Lang/python/
ls
cd yournal/
ls
git stauts
git status
yazi
ls
git status
yazi
helix .
yazi
git status
ls -a
rm .python-version
ls -a
git status
yazi
ls -a
git status
bat pyproject.toml 
helix pyproject.toml 
ls
clear
ls
clear
ls
yazi
clear
l
git status
uv sync
ls
open pyproject.toml
uv sync
ls -a
yazi
uv run
yazi
uv sync
helix pyproject.toml 
yazi
uv sync
yazi
uv sync
ls
rm uv.lock
ls
uv run
ls
ls -a
yazi
uv run
helix pyproject.toml 
uv run
yaiz
yazi
overlay use .venv/bin/activate.nu 
yournal
uv sync
exit
cd Documentos/Dev/+Lang/python/
cd yournal/
s
ls
ls -a
ls
clear
ls
ls -a
rm -r .venv/
uv sync
ls -a
git status
helix pyproject.toml 
ls
yazi
uv sync
cd ..
ls
cd yournal/
ls -
uv run
helix pyproject.toml 
uv run
uv sync
ls
helix pyproject.toml 
yazi
uv run
ls
yazi
uv run
uv sync
ls
rm -r .venv/
uv sync
helix pyproject.toml 
yazi
cd Documentos/Dev/+Lang/python/
cd yournal/
ls
git status
ls
clear
ls
helix py
git status
uv sync
helix pyproject.toml 
yazi
uv run
uv sync
yazi
ls
ls -a
git status
uv run 
uv run yournal/
ls
rm 2025-06-11.md
uv run yournal/ --help
ls
clear
ls
git status
git add .
git commit -m "Move from Poetry to standart pyproject.toml file"
git push
clear
ls
open pyproject.toml
cd ..
yazi
cd spotsync/
ls
yazi
ls
yazi
uv init
yazi
uv init
rm pyproject.toml
uv init
yazi
ls
rm pyproject.toml
uv init --lib
yazi
uv init --lib --help
ls
git restore .
ls
git status
git branch
git restore .
git status
tldr git restore
git status
git restore :/
git status
tldr git restore
git restore --staged :/
tldr git reset
git reset
git status
ls
rm .python-version src/
rm .python-version src/ -r
yazi
git status
git diff main
code .
git diff main
yazi
git switch main
ls
git status
yazi
git status
git switch -c scripts
git push
git add .
git commit -m "Backup old branch"
git push
git config --global push.autoSetupRemote true
git push
git remotes
git branch --remotes
ls
git switch cli_update 
ls
yazi
ls -a
clear
uv init
yazi
uv init --app
yazi
code .
git status
uv init --lib
git status
uv sync
uv sync -U
clear
git status
uv sync
overlay use .venv/bin/activate.nu 
spotdl
uv sync
spotsync
code .
git status
git add .
git commit -m "Migrate from Poetry to standart pyproject.toml file"
clear
ls
clear
uv sync
spotsync --help
clear
l
spotsync --help
ruff format
ruff check --select I --fix
ruff format
clear
ls
git status
spotsync --help
ls
mkdir temp
cd temp
ls
spotsync --help
spotsync tui
spotsync tui --helpp
spotsync tui --help
spotsync tui start
ls
yazi
spotsync --help
ls
spotsync sync TEST
yazi
ls
rm -r TEST
spotsync new https://open.spotify.com/playlist/1S9PPnK41SW6qgM1LUzkkH
ls
spotsync new https://open.spotify.com/playlist/1S9PPnK41SW6qgM1LUzkkH
spotsync sync https://open.spotify.com/playlist/1S9PPnK41SW6qgM1LUzkkH
spotsync sync
clear
cd ..
ls
git add .
git status
git commit -m "Review old code base"
git push
git add .
git commit -m "Update README.md"
git push
git add .
git commit -m "Update README.md"
git push
ls
clear
ls
git switch main
ls
git status
yazi
ls
clear
git staus
git status
clea
clear
ls
clear
ls
clear
git merge cli_update 
clear
git status
git push
helix pyproject.toml 
git add .
git commit -m "Upgrade version"
git push
cler
claer
clear
git branch
cd ..
ls
rm -r spotsync/
ls
clear
ls
yazi
clear
ls
cd Documentos
clear
cd Documentos
ls
ls -a
clear
ls
clang
yazi
clear
cd..
cd ..
cd Descargas
ls
gio trash
gio trash --list
gio trash --empty
z Documentos/Obsidian/
ls
cd Documentos/Obsidian/
clear
code .
clear
code .obsidian/snippets/
clear
paru -Ss onlyoffice
paru -S onlyoffice-bin
paru -Ss ouch
paru -S ouch
paru -Rns atool
ouch
aunpack
cd .obsidian/snippets/
nu --version
paru -Ss openssl
paru -Sy nushell
paru -Sy carapace
cd .config/nushell
ls
clear
ls
cd autoload/
ls
rm carapace.nu
carapace _carapace nushell | save $"($nu.user-autoload-dirs.0)/carapace.nu"
ls
helix carapace.nu 
ls
starship init nu | save $nu.user-autoload-dirs.0/starship.nu
starship init nu | save $"($nu.user-autoload-dirs.0)/starship.nu"
starship init nu | save $"($nu.user-autoload-dirs.0)/starship.nu" -f
ls
bat carapace.nu 
bat starship.nu 
clear
paru -Su
paru -S
paru -Su
clear
cd .obsidian/snippets/
cd Documentos/Obsidian/.obsidian/snippets/
ls
clear
ls
yazi
ls
cod e.
code .
clear
cd Documentos/Obsidian/.obsidian/snippets/
clear
code .
clear
uv tool
uv tool -g
uv tool -h
tldr uv tool
ouch
tldr ouch
tldr uv tool
spotdl
uv tool run spotdl
vermin
uv tool run vermin
uv tool list
uv tool
tldr uv tool
paru -S python-ignis-git
killall ignis
job spawn { ignis init }
query
query --help
query db 
query db --help
stor
query db --help
ls
cd Descargas
query db --help
stor create
stor create -h
stor create -t test
stor create -t test -c {title: "Database", author: "Rikiub"}
stor create -t test -c {title: string, author: string}
string
stor create -t test -c {title: str, author: str}
str
stor
stor open
stor open test
stor
stor open -h
stor 
stor open
stor insert
stor insert -h
stor insert -t test -d {title: "DATABASE", author: false}
stor insert -t test -d {title: "DATABASE", author: "Rikiub"}
stor
stor open
stor open -h
stor -h
stor open | query db 
stor open | query db -h
stor open | query db "SELECT * FROM test"
stor open | query db "SELECT * FROM te"
stor
stor reset
stor create -t user -c {<\n>name: str,<\n>}
stor reset
stor create -t user -c {<\n>name: str,<\n>password: str<\n>}
stor insert -t user -d {name: Rikiub, password: 123}
stor insert -t user -d {name: Rikzy, password: 456}
stor open
stor open | query db "SELECT * FROM t"
stor open | query db "SELECT * FROM user"
stor open | query db "SELECT * FROM user" -h
stor open | query db "SELECT name FROM user"
ls
clear
cd Documentos
ls
cd Dev/
ls
cd rust/
ls
cd ..
ls
cd web
ls
cd zoom-web/
pnpm --help
ls
open package.json
open package.json | get devDependencies
open package.json | get dependencies
open package.json 
open package.json | get scripts
open package.json | get scripts | to json
open package.json | get scripts | to yaml
open package.json | get scripts | to msgpackz 
open package.json | get scripts | to csv 
open package.json | get scripts | to text 
open package.json | get scripts | to md
open package.json | get scripts | to md -h
open package.json | get scripts | to md --pretty
open package.json | get scripts | to tsv 
open package.json | get scripts | to csv 
ls
clear
ls
clear
cd .config/nushell
lsg
ls
lsg
z fish
z nu
ls
cd autoload/
z fish
z fis
z env
z con
z quick
cd quickshell/
z ~
z quick
z ignis
helix .
git status
git add .
git commit -m ":sparkles: (launcher): Activate item with one-click"
git push
killall firefox
cd Documentos/Obsidian/
ls
cd ..
ouch compress Obsidian/
ouch compress Obsidian/ -h
tldr ouch compress Obsidian/
tldr ouch compress
tldr ouch
ouch compress Obsidian/ -h
ouch compress Obsidian/*
ouch compress Obsidian/* obsidian-backup.zip
ls
cd Obsidian/
cd Documentos/Obsidian/
ls
ls -h
ls | reverse 
ls -a
ls -a | reverse
ls -a | sort -h
ls -a | sort-by type
ls -a | sort-by type | reverse
ls -a | sort-by modified | reverse
ls -a | sort-by modified
cd ..
ls
cd Seguridad/
ls
cd ..
cd Respaldos/
ls
ouch -h
ouch decompress Obsidian-2025-06-15.zip test
ouch decompress Obsidian-2025-06-15.zip test/
ouch decompress Obsidian-2025-06-15.zip test/ -h
ouch decompress Obsidian-2025-06-15.zip -d test
ls
ls test
dunst
dust test
ls test -d
ls test -h
ls test -du
ls test | reduce
ls test | reduce -h
ls test | reduce {|it| it.size}
ls test | reduce {|it| $it.size}
ls
ls --help
ls test/*
ls test/**/*
ls test/**/* | reduce {|it| $it.size}
reduce -h
ls test/**/* | reduce {|it| $it.size}
ls test/**/*
yazi
ls
rm test -r
ls
cd Documentos/Obsidian/
code .obsidian/snippets/
paru -Syu
$nu.default-config-dir | path dirname 
$nu.default-config-dir
$nu.default-config-dir | path dirname 
$nu.default-config-dir | path dirname | cd $in
ls
cd shell_nu/
ls
clear
ls
yazi
cd autoload/
carapace _carapace nushell | save carapace.nu -
carapace _carapace nushell | save carapace.nu -hh
carapace _carapace nushell | save carapace.nu -h
carapace _carapace nushell | save carapace.nu
carapace _carapace nushell | save carapace.nu -f
ls
bat carapace.nu 
perl
perl -h
paru -Rns perl
parallel -h
$nu.default-config-dir | path dirname | cd $in
ls
$nu.default-config-dir | cd $in
ls
cd autoload/
ls
carapace _carapace nushell | save carapace.nu -f
ls
rm carapace.nu
carapace _carapace nushell | save carapace.nu -f
ls
clear
paru -Qs electron
paru -Rns electron34
cd .config/ignis
$nu.default-config-dir | cd $in
s
ls
cd autoload/
ls
carapace _carapace nushell | save carapace.nu -f
ls
cd .config/ignis
code .
ls
clear
cd .config/ignis
clear
ls
killall ignis
code .
ignis init
git add .
git commit -m ":sparkles: Migrate to new syntax"
git push
paru -Ss warp
paru -Ss cloudfare
paru -Sy cloudfare
systemctl stop systemd-resolved.service 
paru -Sy cloudfare
sudo helix /etc/systemd/
sudo systemctl start systemd-resolved.service 
sudo systemctl restart systemd-resolved.service 
sudo helix /etc/systemd/resolved.conf 
paru -Ss cloudfare
paru -Ss cloud
paru -Ss cloudfare
paru -Ss warp
paru -S cloudfare-warp-bin
paru -Sy cloudfare-warp-bin
fastfetch 
paru -Ss emote
flatpak search emote
flatpak install  com.tomjwatson.Emote 
btop
emote
flatpak search emote
com.tomjwatson.Emote -h
flatpak search smile
paccache -rk0
flatpak install it.mijorus.smile
it.mijorus.smile 
it.mijorus.smile  -h
it.mijorus.smile
flatpak uninstall it.mijorus.smile
flatpak uninstall --unused
flatpak uninstall com.tomjwatson.Emote 
flatpak uninstall --unused
paru -Ss flemozi
ibus
paru -S flemozi-bin
flemozi
flemozi -h
flemozi 
clear
paru -Rns flemozi-bin
flatpak search "Emoji Mart"
flatpak install io.github.vemonet.EmojiMart 
io.github.vemonet.EmojiMart 
flatpak uninstall io.github.vemonet.EmojiMart --unused 
flatpak uninstall io.github.vemonet.EmojiMart
flatpak install it.mijorus.smile
it.mijorus.smile -h
ps | where name =~ emote
ps | where name =~ smile
killall emote
ps | where name =~ smile
it.mijorus.smile 
io.github.vemonet.EmojiMart 
it.mijorus.smile 
flatpak install  com.tomjwatson.Emote 
paru -Ss emote
fc-cache 
fc-cache -f -v
cd .cache
rm -r fontconfig/
paru -S emote
flatpak uninstall it.mijorus.smile
flatpak uninstall --unused
flatpak uninstall com.tomjwatson.Emote 
flatpak uninstall --unused
clear
flatpak uninstall --unused
killall firefox
topgrade --yes --cleanup
pacman -Rdd linux-firmware
sudo pacman -Rdd linux-firmware
sudo pacman -Su
pacman -Syu linux-firmware
sudo pacman -Syu linux-firmware
pacman -Syu
sudo pacman -Syu
paru -R linux-firmware
paru -Rns linux-firmware
paru -Rns linux-firmware-mediatek
paru -Rns linux-firmware
paru -S linux-firmware-intel linux-firmware-realtek
paru -S linux-firmware-intel linux-firmware-realtek linux-firmware-broadcom
ls
flatpak repait
flatpak repair
topgrade --yes --cleanup
sudo flatpak repair
topgrade --yes --cleanup
ya pkg
ya pack
flatpak uninstall --unused
pacman -Syu
paccache -rk0
paru -Syu
nmtui
cd /var/cache/pacman/pkg/
ls
yazi
sudo yazi
yazi
cd .cache/paru
ls
cd clone
ls
yazi
clear
iwconfig
iw 
iw config
ip link
uname
uname -h
uname
^uname
^uname -a
iw 
cd Descargas
ls
pacman -U linux-firmware-other-20250613.12fe085f-9-any.pkg.tar.zst 
paru -Sq linux-firmware-
paru -Qs linux-firmware-
sudo pacman -U linux-firmware-other-20250613.12fe085f-9-any.pkg.tar.zst 
paru -Qs linux-firmware-
ls
cd Descargas
ls
rm linux-firmware-other-20250613.12fe085f-9-any.pkg.tar.zst
clear
paru -Ss goignis
paru -Ss quickshell
paru -S quickshell
ls
clear
paru -Rns linux-firmware-other
paru -Qs linux-firmware-
cd .obsidian/
cd Documentos/Obsidian/.obsidian/
ls
cd Documentos/Obsidian/.obsidian/
ls
cd snippets/
ls
code .
cd Documentos/Dev/python/media_dl
ls
code .
overlay use .venv/bin/activate.nu 
clear
cd Documentos/Obsidian/
ls
cd Extras/
cd Adjuntos/
ls
ls | where name =~ "2024-04-18-17-45-31-935-01-01 1"
ls | rg "2024-04-18-17-45-31-935-01-01 1"
ls | where name =~ "IMG_20210822"
ls
ls | where name =~ "IMG_"
paru -Qs linux-firmware-
shadow
cd Documentos/Obsidian/
ls
cd ..
ls
ouch compress Obsidian/* obsidian-backup.zip
ls
date
date "YYYY"
date -h
date now
date now | format
date now 
date 
lutgen -h
paru -Ss lutgen
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
paru -S lutgen-studio-bin
topgrade --yes --cleanup
lutgen-studio 
paru -Rns lutgen-studio-bin
gammastep -h
darkman -h
cd Documentos/Obsidian/
ls
clear
ls
clear
ls
clear
ls
clear
cd .obsidian/snippets/
code .
lspci | rg -i network
lspci | rg 
lspci
teee
tee
sudo ^tee /sys/bus/pci/rescan
tee -h
lsmod
lsmod | rg -i wifi
cd Documentos
ls
y
deno outdated --update
deno outdated 
deno outdated --update --latest
clear
ls
deno add npm:rolldown-vite
deno remove npm:vite
vite dev
deno task dev
deno add npm:vite
deno remove npm:rolldown-vite
clear
topgrade --yes --cleanup
cd Publico
ls
cd test
cd Test/
ls
ls -a
cd .obsidian/
sl
ls
cd plugins/
ls
rm -r copy-url-in-preview/
git clone https://github.com/NomarCub/obsidian-copy-url-inpreview
git clone https://github.com/NomarCub/obsidian-copy-url-inpreview.git
git clone https://github.com/NomarCub/obsidian-copy-url-in-preview.git
ls
cd obsidian-copy-url-in-preview/
ls
bat README.md 
ñs
bat package.json 
deno task dev
deno install
deno task dev
ls
code .
cd Publico/Test/.obsidian/plugins/
git clone https://github.com/pjeby/hot-reload.git
ls
cd obsidian-copy-url-in-preview/
ls
cd src
tldr git add 
git add --patch main.ts 
git switch -c feature/rename
ls
git add .
git commit -m "Update"
git add .
git commit -m "Update"
git switch main
git switch -c rename
git switch feature/rename 
git switch rename 
git add .
ls
git status
git diff
cd ..
git diff
ls
git diff main
git add src
git commit -m "Add new menu item"
git switch rename 
ls
git switch feature/rename 
git switch rename 
git status
git add src
git commit -m "Add helper"
git switch feature/rename 
git switch rename 
ls
clear
ls
git diff
git diff main
git add .
git commit -m "Add helper"
ls
clear
ls
git diff
git diff main
git add .
git commit -m "Remove deno.lock"
clear
git diff
git diff main
q
clear
ls
git diff
git diff main
git switch feature/rename 
git switch rename 
git branch --delete feature/rename 
git branch -D feature/rename 
ls
git branch --move feature/rename
clear
ls
clear
ls
clear
ls
clear
git push
gh 
deno task dev
gh repo
lspci
lspci -k
lspci -k | grep -A 3 -i
lspci -k | grep -A 3 -i network
lsmod
lsmod | grep wl
lsmod | grep iwlwifi
rfkill
rfkill list
sudo rmmod wl
sudo rmmod iwlwifi
sudo modprobe iwlwifi
sudo modprobe wl
iwd
lsmod | grep iwlwifi
lsmod | grep wl
rfkill list
ls
cd Descargas
ls
gh repo fork
gh repo fork NomarCub/obsidian-copy-url-in-preview
yazi
ls
cd obsidian-copy-url-in-preview/
ls
git diff main
git switch -c feature/rename
git add .
git commit -m "Feature to rename image files from context menu"
git push
yazi
cd obsidian-copy-url-in-preview/
cd Publico/Test/.obsidian/plugins/
ls
cd obsidian-copy-url-in-preview/
ls
deno task dev
deno install
deno task dev
cler
clear
git diff main
git log
git add .
git commit -m "Feature to rename image files from context menu"
git push
rm deno.lock
git add .
git commit -m "Remove deno.lock"
git push
code .
git switch -c feature/mobile-context-menu
code .
cd Publico/Test/.obsidian/plugins/
ls
cd obsidian-copy-url-in-preview/
deno install
clear
ls
yazi
deno task dev
yazi
git diff main
git branch --delete feature/mobile-context-menu 
git branch -D feature/mobile-context-menu 
git switch main
git branch -D feature/mobile-context-menu 
ls
git switch feature/rename 
git switch main
clera
clear
yazi
git switch -c feature/mobile-context-menu
git diff mian
git diff main
git switch main
ls
git diff
ls
clear
git switch feature/mobile-context-menu 
ls
git diff main
cd Publico/Test/.obsidian/plugins/
ls
cd obsidian-copy-url-in-preview/
ls
rm main.js
ls
rm main.js
ñs
ls
deno task dev
ls
cd ~
cd P
cd Publico/Test/.obsidian/plugins/
ks
ls
clear
cd image-context-menu/
ls
code .
cler
clear
deno task dev
yazi
cd ..
ls
cd ~
cd Publico/Test/.obsidian/plugins/
ls
cd image-context-menu/
ls
git diff
clear
git add src
git diff
git status
git commit -m "Improve image copy on mobile"
git status
git diff
git diff main
clear
git diff main
git status
git push
git status
clear
git diff main
git add src
git status
git commit -m "Don't activate copy on canvases"
git push
tldr git add
cd Publico/Test/.obsidian/plugins/
ls
rm -r copy-url-in-preview/
cd image-context-menu/
ls
git diff
code .
clear
deno task dev
ls
rm main.js
deno task dev
l
ls
rm main.js
lspci -k | grep -A 3 -i network
ls /sys/bus/pci/devices
rfkill
rfkill list
rfkill -h
rfkill unblock
rfkill 
rfkill unblock 3
rfkill
lsusb
dmseg
lsusb
sudo modprobe -r mt706u
sudo modprobe -r mt7061u
sudo modprobe -r mt7601u
sudo modprobe mt7601u
paru -Ss linux-firmware
paru -Si linux-firmware
paru -S linux-firmware-mediatek
cd Publico/Test/.obsidian/plugins/
ls
ls image-context-menu/
ls
l
syazi
y
ls
yazi
ls
deno task dev
l
ls
code .
deno task dev
ls
git diff
ls
git add src/
git status
git commit
git push
ls
git diff
ls
clear
ls
yazi
ls
git switch main 
git switch -c multi-merge
git merge feature/mobile-context-menu feature/rename
helix src/main.ts 
code .
ls
git status
deno task dev
git status
git add src/
git commit -m "Merge mobile context menus and rename option"
ls
git status
deno task dev
ls
git status
git add src/
git commit
clear
ls
clear
ls
clear
ls
cler
clear
ls
clear
git status
git switch feature/mobile-context-menu 
git merge feature/rename 
git merge --abort
git status
git switch multi-merge 
git push
git switch feature/mobile-context-menu 
git merge multi-merge 
ls
git add src/
git commit -m "Add rename images feature"
git log
git push
git status
deno task dev
git status
git add src/
git commit "urlPath.slice -> urlPath.substring"
git commit
git push
git status
ls
git status
ls
clear
ls
clear
ls
clear
cd Publico/Test/.obsidian/plugins/
ls
cd image-context-menus/
ls
clear
ls
cd Publico/Test/.obsidian/plugins/
cd image-context-menus/
ls
helix src/helpers.ts 
git add src/
git commit -m "Add localization to 'copy to clipboard' Notices"
git status
git diff
git push
helix package.json 
clear
ls
helix manifest.json 
clear
ls
deno task dev
cd Publico/Test/.obsidian/plugins/
ls
cd image-context-menus/
ls
helix README.md 
git status
git add README.md 
git commit -m "Update README.md to reflect changes"
git push
cd Publico/Test/.obsidian/plugins/
ls
cd image-context-menus/
ls
helix src/main.ts 
git status
git add src/
git commit -m "Little formatting change"
git push
helix src/main.ts 
deno task dev
clear
ls
clear
ls
clear
ls
tree /
clear
cd Documentos/Obsidian/.obsidian/themes/
ls
cd Iridium/
ls
yazi
code .
ls
cd Documentos/Obsidian/.obsidian/themes/
ls
cd Iridium/
ls
bat manifest.json 
open manifest.json
cd ..
gh repo fork kyffa/Iridium
ls
gh repo fork kyffa/Iridium
ls
ls Iridium/
yazi
ls
ls Iridium/
clear
cd ..
ls
gh repo fork kyffa/Iridium
ls
cd Iridium/
ls
helix theme.css 
git status
git add .
git commit -m "Fix blurry nodes in Canvas"
git push
ls
cd ..
ls
rm -r Iridium/
cd themes/
la
ls
cd Iridium/
ls
cd Documentos/Obsidian/.obsidian/themes/
cd ..
ls
ls | sort-by type
cd themes
ls
z des
ls
gh repo fork kyffa/Iridium
ls
cd Iridium/
ls
helix theme.css 
git status
git diff main
git add .
git commit -m "Add margins to Reading View tables"
ls
clear
git
clear
ls
git push
ls
cd ..
s
ls
rm -r Iridium/
ls
cd des
cd Descargas
gh repo fork kyffa/Iridium
ls
cd Iridium/
ls
git switch -c table-margin
ls
git log
tldr git reset
git log
git reset 206bf7da83e8540d4e835c413eef709464bd49b1
git log
gir revert
git revert
tldr git revert
tldr git HEAD
git revert HEAD
git status
git diff main
git diff table-margin
git diff table-margin main
git diff table-margin
git log
clear
ls
git status
git diff
git diff table-margin
ls
git add .
git commit -m "Add margins to Reading View tables"
git push
git reset --hard HEAD~2
git log
cd ..
ls
rm -r Iridium/
gh repo fork kyffa/Iridium
ls
cd Iridium/
git reset --hard upstream/main 
git log
git status
git push --force-with-lease origin 
git push --force-with-lease origin main
ls
git switch -c fix-blurry-canvas
helix theme.css 
ls
git status
git add .
git commit -m "Fix blurry nodes in Canvas"
git push
ls
git switc -c table-margin
git switch -c table-margin
ls
git log
cd ..
git branch 
git branch --delete table-margin
ls
cd Iridium/
l
ls
git branch --delete table-margin
git branch -D table-margin
git switch main
git branch -D table-margin
ls
git switch table-margin
ls
git log
ls
cd ..
rm -r Iridium/
gh repo fork kyffa/Iridium
cd Iridium/
ls
git switch -c table-margin
git lg
git log
helix theme.css 
git status
git add .
git commit -m "Add margins to Reading View tables"
git push
clear
ls
cd ..
ls
rm -r Iridium/
ls
clear
cd ..
cd Publico
ls
cd ..
cd Publico/Test/.obsidian/plugins/
ls
cd image-context-menus/
ls
code .
clear
ls
git log
git status
clear
git log
git switch -c delete-file
clear
cd Documentos/Obsidian/.obsidian/
cd plugins/image-context-menus/
ls
code .
deno task dev
ls
killall code
z pu
cd Test/.obsidian/plugins/image-context-menus/
clear
ls
code .
deno task dev
git switch main
git add .
git status
git restore --staged manifest.json 
git status
git commit -m "Delete files beta"
git status
git switch main
git branch --delete feature/rename 
git branch --delete multi-merge 
git branch --delete origin/feature/rename 
clear
git branch
git switch feature/mobile-context-menu 
clear
git status
deno task dev
ls
git status
git add src/
git diff
git diff main
git commit -m "Open in new tab with TFile instead of image element"
ls
git log
git stauts
git status
git push
deno task dev
cd ..
ls
mkdir snippets
cd snippets/
ls
cd Publico/Test/.obsidian/plugins/
ls
cd image-context-menus/
deno task dev
git add .
git commit -m "Avoid zoom the image when context menu is opened on mobile"
git status
git diff main
git revert man
git restore manifest.json 
git restore manifest.json  --source main 
git diff main
git status
git add .
git commit -m "Revert manifest.json to main"
git push
deno task dev
git diff main
git status
git add .
git commit -m "Use preventDefault instead of stopImmediatePropagation to get vibrations on mobile"
git push
ls
cd Documentos/Obsidian/.obsidian/
ls
cd plugins/
ls
cd image-context-menus/
ls
z pu
ls
cd Test/.obsidian/plugins/image-context-menus/
rm -r node_modules/
git status
ls
git switch main 
code .
clear
git pull
deno install
deno install --allow-scripts
code .
git status
deno task lint
ls
git diff
git lo
git log
git restore .
git status
git log
rm deno.lock
clear
deno task lint
rm -r node_modules/
deno install --allow-scripts
deno install
rm -r node_modules/
deno install
deno task lint
ls
bat package.json 
deno run eslint
paru -Ss eslint
paru -S eslint
deno task lin
deno task lint
eslint
eslint -h
bat package.json
eslint
paru -Ss pnpm
paru -S pnpm
paru -Rns eslint
git status
rm deno.lock
ls
rm -r node_modules/
pnpm install
pnpm run lint
ls
bat eslint.config.mjs 
rm -r node_modules/
deno install
ls
paru -Rns pnpm
deno lint
deno lint src
ls
git diff
deno task dev
foot
cd Test/.obsidian/plugins/image-context-menus/
cd Publico/Test/.obsidian/plugins/image-context-menus/
ls
celera
clear
git dif
git diff
git lint
git diff
git status
git add src/
git commit -m "Fixes recommended by deno linter"
git switch refactorization 
git pull
git pull origin origin/feature/mobile-context-menu 
git fetch origin feature/mobile-context-menu
git log
git status
rm deno.lock
ls
git status
git statu
git status
ls
git switch feature/mobile-context-menu 
git log
git status
git log
git diff
git status
git add .
git add -m "Refactorization Part 1"
git status
git add .
git commit -m "Refactorization Part 1"
git switch refactorization 
git switch feature/mobile-context-menu 
git status
git diff
ls
git diff
git status
git add .
git commit -m "Refactorization Part 2"
git diff
clear
git diff
git log
git diff
clear
ls
git add.
clear
git switch main
git status
git add .
git commit -m "Refactorization Part 2"
git log
git switch mai
git switch main
git switch feature/mobile-context-menu 
clear
git log
git push
deno lint
git switch main
git switch feature/mobile-context-menu 
ls
clear
deno task dev
paru -S python-ignis-git
paru -Sy python-ignis-git
cd .config/ignis
ls
code .
killall
killall ignis
ignis init
claer
clear
ignis init
clear
ignis init
git diff
git add .
git commit -m "Migrate to new API"
git push
ruff check --select I --fix
ruff format
git diff
git add .
git commit -m "Ruff format"
git push
job spawn { ignis init }
cd .config/ignis
git add .
git commit -m "Change"
git push
clear
paru -Ss quickshell
cd Publico/Test/.obsidian/plugins/image-context-menus/
ls
git pull
deno task dev
cd .config/ignis
clear
ls
code 
code .
killall ignis
ignis init
ruff format
ruff check --select I --fix
git add .
git commit -m "Fix dark theme switcher"
git push
ignis init
job spawn { ignis init }
wev
wev -h
wev --help
paru -Rns electron34
cd Documentos/Dev/rust/
ls
clear
ls
cd ..
ls
cd .config/ignis
code .
clear
init
ignis init
killall ignis
ignis init
clear
ignis init
git add .
git commit -m "Chore"
git push
ignis init
clear
ignis init
clea
ignis init
cd .config/ignis
ls
git switch -c "device-menu-view" 
git add .
git commit -m "Device Menu as View"
git switch main
ls
i
job spawn { ignis init }
cd Publico/Test/.obsidian/plugins/image-context-menus/
ls
git pull
code .
cler
clear
deno task dev
deno lint
git diff
git add .
git commit -m "Fixed: canvas context menu don't working on images"
git push
deno task dev
git add .
git commit -m "Improve URl detection on canvas + Refactorization"
git switch main
deno task dev
git switch feature/mobile-context-menu 
git push
deno task dev
l
ls
clear
cd Publico/Test/.obsidian/plugins/image-context-menus/
ls
code .
clear
cd Publico/Test/.obsidian/plugins/image-context-menus/
clear
code .
clear
cd Descargas
ls
git log
ls
clear
git revert 66007a114c3c9d13df5ae5c0594684fe3ba52e05
git log
git reset 66007a114c3c9d13df5ae5c0594684fe3ba52e05
git log
git reset --soft 66007a114c3c9d13df5ae5c0594684fe3ba52e05
git log
git diff
ls
git log
git status
git pull
git log
git revert 2b3e258203fa5de35aed3ac976a834673cd6563d
git diff
ls
git add .
git commit -m "Improve URl detection on canvas"
git switch main
deno task dev
ls
git switch feature/mobile-context-menu 
git pull
clear
git switch main
git switch feature/mobile-context-menu 
git log
git switch main
git switch feature/mobile-context-menu 
clear
git switch main
git switch feature/mobile-context-menu 
git diff
git push
git log
git switch main
git switch feature/mobile-context-menu 
clear
git diff
git log
git add .
git commit -m "Fix context menu on new windows"
git push
yazi
clear
ls
clear
ls
clear
cd Publico/Test/.obsidian/plugins/image-context-menus/
ls
git pull
git switch main
git pull
ls
git branch
git remotes
clear
git
clear
git
git pull
git remote
git pull origin origin/main 
git pull upstream  origin/main 
cd ..
ls
git clone https://github.com/NomarCub/obsidian-copy-url-in-preview.git
ls
yazi
ls
cd image-context-menus/
ls
cd ..
ls
rm -r image-context-menus/
cd obsidian-copy-url-in-preview/
ls
celar
ls
clear
ls
git status
code .
clear
git switch -c refactorization
clear
git status
git diff
git add .
git commit -m "Format imports"
clear
deno add npm:biome
biome 
clear
biome
biome lint --h
biome lint --help
deno remove @stylistic/eslint-plugin eslint typescript-eslint
deno add npm:biome --dev
biome
biome init
biome --help
deno run biome --help
rm -r node_modules/
deno install
code .
git status
git add .
cd ..
ls
cd obsidian-copy-url-in-preview/
gh repo fork NomarCub/obsidian-copy-url-in-preview
git remote
gh repo fork NomarCub/obsidian-copy-url-in-preview
cd ..
gh repo fork NomarCub/obsidian-copy-url-in-preview
cd obsidian-copy-url-in-preview/
gh repo
ls
git status
git commit -m "Replace eslint with biome for formatting and linting"
git remote
git remote remove origin 
git remote add origin git@github.com/Rikiub/obsidian-copy-url-in-preview.git
git remote
git pull
git remote remove origin 
git remote add origin https://github.com/Rikiub/obsidian-copy-url-in-preview.git
git switch main
git pull
git branch --set-upstream-to=origin/main main
git pull
git status
git diff
git diff main
git log
ls
git remote 
git remote --help
git remote origin
git remote --help
git remote get-url
git remote get-url origin
git log
tldr git reset
git reset 705db684371c4e63790710a8a746e0af3b6e5289
git log
git reset --hard 705db684371c4e63790710a8a746e0af3b6e5289
ls
git log
git push
git remote remove origin 
git remote add origin git@github.com:Rikiub/obsidian-copy-url-in-preview.git
git pull
git branch --set-upstream-to=origin/main main
git pull
cd ..
ls
rm -r obsidian-copy-url-in-preview/
git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git
cd obsidian-copy-url-in-preview/
git remote get
git remote get-url origin
git branch
clear
ls
clear
ls
celar
clear
git switch -c refactorization
clear
deno remove @stylistic/eslint-plugin eslint typescript-eslint
tldr git revert 
git restore package.json 
cd ..
ls
cd obsidian-copy-url-in-preview/
ls
cd ..
rm -r obsidian-copy-url-in-preview/
git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git
cd obsidian-copy-url-in-preview/
ls
clear
deno remove @stylistic/eslint-plugin eslint typescript-eslint
code .
git status
git restore src/main.ts 
git status
git add .
git commit -m "Replace eslint with biome for formatting and linting"
git switch -c refactorization
git log
git add .
git switch -c main 
git switch main
git log
git reset --hard HEAD~1
git switch refactorization 
git log
git switch main
git switch refactorization 
clear
ls
git add status
git status
git add .
git commit -m "Sort imports"
clear
deno task format
biome format
biome format -h
biome lint --help
git status
git add .
git commit -m "Add format:fix to package.json"
clear
deno task format
deno task format --help
deno task format --vcs-enabled=true
deno task format --vcs-enabled=true --vcs-kind=git
deno task format --vcs-enabled=true --vcs-
deno task format --vcs-enabled=true --help
deno task format --vcs-enabled=true --vcs-client-kind=git
deno task format
deno task format src/helper.ts
deno task format src/helpers.ts
git status
git diff main
git log
biome ling
deno task lint
git push
git status
git add .
git status
git add .
git commit -m "main: Format onImageContextMenu() and onImageMouseUp()"
git push
clear
ls
clear
ls
git log
clear
ls
git log
git status
git add .
git commit -m "main: Format this.registerEvent related to canvas"
git push
deno add npm:biome --dev
git status
rm deno.lock
git status
git diff
git add .
git commit -m "Add biome dependency"
git push
clear
deno remove biome
deno add npm:@biomejs/biome --dev
git status
rm deno.lock
bat package.json 
git add .
git commit -m "Add biome dependency (again)"
git push
bat package.json 
deno task biome
deno task format
den
deno
clear
ls
claer
clear
cd Publico/Test/.obsidian/plugins/image-context-menus/
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
clear
npm install --package-lock-only
git status
git diff
git add .
git commit -m "Update package-lock.json"
git push
clear
ls
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
git switch main
clear
rm -r node_modules/
npm install
bun
npm install
clear
ls node_modules/
ls
clear
ls
npm run lint
npm run lint --help
npm run lint -- --help
npm run lint
rm -r node_modules/
pnpm
deno install
deno task lint
helix eslint.config.mjs 
paru -Sy deno
deno task lint
helix eslint.config.mjs 
clear
deno task lint
helix eslint.config.mjs 
code .
clear
deno search npm:eslint
deno add @eslint/config
deno add npm:@eslint/config
deno add npm:@eslint/config@latest
deno add "npm:@eslint/config"
deno add "npm:@eslint/js"
clear
deno run lint
deno run lint --dev
deno add "npm:@eslint/js" --dev
git switch -c "add-eslint-js"
git status
git diff
rm deno.lock
clear
deno task lint -- --help
deno task lint
npm install --package-lock-only
deno task lint
git status
git add .
git commit -m "Add @eslint/js dependency"
clear
killall ignis
job spawn { ignis init }
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
clear
ls
clear
git push
cd ..
gh repo fork d7sd6u/obsidian-lazy-cached-vault-load
cd obsidian-lazy-cached-vault-load/
clear
ls
git switch -c "hide-popups"
code .
clear
deno install
codeeeeeeee .
code .
clear
git submodule update
git submodule update --remote --recursive
clear
deno task dev
git status
git submodule update --init --recursive
deno task dev
yazi
y
ouch compress Obsidian/* obsidian-backup.zip
git branch --move remove-popups
git switch main
git switch master 
git restore src/FSCache.ts src/OriginalMetadataCache.ts src/main.ts 
killall obsidian
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
git switch main 
git branch --delete add-eslint-js 
git pull
bat package.json 
git pull
claer
clear
ls
git remote
git remote get-url origin
git branch
git pull
bat package.json 
git pull
git branch --delete add-eslint-js 
git branch --delete origin/add-eslint-js 
git branch --delete --remote origin/add-eslint-js 
git pull
git switch refactorization 
git pull
bat package.json 
git remote get-url origin
git log
git pull
git pull origin origin/main 
git pull origin origin/refactorization 
git push
git pull origin origin/refactorization 
git merge main 
git merge
yazi
code .
clear
ls
clear
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
ls
clear
ls
tldr git restore
git restore --source origin/main eslint.config.mjs
clear
npm install --package-lock-only
git restore package-lock.json 
git restore --source main  package-lock.json 
clear
ls
git status
git add .
git commit 
git push
clear
ls
clear
cd Documentos/Obsidian/
ls | where name =~ "eslint"
open eslint.md
rm -r node_modules/
deno install
clear
ls | where name =~ "eslint"
open eslint.md
code eslint.md 
open eslint.md
biome init
git status
git add .
git commit -m "Add biome.json config"
git push
deno remove @stylistic/eslint-plugin
git status
rm deno.lock
git status
git add .
git commit -m "Remove @stylistic/eslint-plugin dependency"
git push
clear
deno task format
deno task format:fix
git log
deno task format:fix
deno task format:fix src/
clear
git reset --hard main
git log
git reset --hard origin/refactorization 
git log
clear
git log
clear
git lo
foot
job spawn { foot }
clear
ls
clear
ls
cler
clear
job
clear
git revert 976066a959b9a83e1cc5fa99eedcc139a8bb7d27 f1fa88027cea5bf54bb6195537a58dd961b49a7a
git log
git push
clear
ls
cd Documentos/Obsidian/
ls
yazi
cd --
cd ..
cd Respaldos/
ls
ouch decompress Obsidian-2024-11-08.7z
l
ls
obsidian Obsidian/
mv Obsidian/ Back-Sidian
obsidian Back-Sidian/
ls
rm Back-Sidian/
rm Back-Sidian/ -r Obsidian-2024-11-08.7z
ls
ouch decompress Obsidian-2025-06-15.zip BackSidian
ouch decompress Obsidian-2025-06-15.zip
ls
rm -r Obsidian-2025-06-15/
ouch decompress Obsidian-2025-06-28.zip
ls
paru -Ss gtp4all
paru -Ss gtp4
paru -Ss gpt4all
paru -S gpt4all-chat
flatpak search gpt4all-chat
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
ls
git pull
ls
helix biome.json 
deno task format
helix biome.json 
deno task format
biome lint
biome lint src/
biome lint
biome format
biome lint
helix biome.json 
biome lint
helix biome.json 
ls
deno task format
helix biome.json 
git diff
git add .
git commit -m "Remove unnecessary biome.json options"
biome lint
ls
open biome.json
open biome.json | get "$schema"
open biome.json | get formatter
open biome.json | get enabled
open biome.json | get
open biome.json 
open biome.json | get actions
open biome.json | get assist.actions
open biome.json
open biome.json | get assist.actions | to json
open biome.json
biome --help
git pushç
deno task format
git push
cler
clear
code .
clear
git diff
git add .
git commit -m "Add whitespaces"
git add .
git commit
ls
git push
clear
ls
clear
ls
paru -Ss markitdown
paru -S python-markitdown
uv tool
uv tool --help
uv tool install markitdown[pdf]
markitdown 
markitdown --help
ls
z ob
ls
cd Extras/Adjuntos/
ls
ls | where type = "pdf"
ls | where type == "pdf"
ls -l
ls | where name =~ ".pdf"
ls | where name =~ ".pdf" | sort-by size
markitdown Introducción a las Ecuaciones Diferenciales.pdf  
cat Introducción a las Ecuaciones Diferenciales.pdf | markitdown 
yazi
cp Introducción a las Ecuaciones Diferenciales.pdf ~/Descargas
cp "Introducción a las Ecuaciones Diferenciales.pdf" ~/Descargas
z des
ls
markitdown `Introducción a las Ecuaciones Diferenciales.pdf`
ls
open `Introducción a las Ecuaciones Diferenciales.pdf`
open `Introducción a las Ecuaciones Diferenciales.pdf` | markitdown 
ls
open `Introducción a las Ecuaciones Diferenciales.pdf` | markitdown  -h
open `Introducción a las Ecuaciones Diferenciales.pdf` | markitdown -o xd.md
ls
open xd.md
yazi
z adju
ls
ls | where name =~ ".pdf" | sort-by size
ls | where name =~ ".pdf" | sort-by size | yazi
pandoc
ls | where name =~ ".pdf" | sort-by size
cp "Álgebra de Funciones y Composición de Funciones. Parte III.pdf" ~/Descargas
z des
ls
open `Introducción a las Ecuaciones Diferenciales.pdf`
open `Introducción a las Ecuaciones Diferenciales.pdf` | markitdown -o xd.md
ls
open xd.md
rm xd.md
open `Introducción a las Ecuaciones Diferenciales.pdf` | markitdown
open `Introducción a las Ecuaciones Diferenciales.pdf` | markitdown -h
markitdown  `Introducción a las Ecuaciones Diferenciales.pdf`
markitdown `Álgebra de Funciones y Composición de Funciones. Parte III.pdf`
yazi
z ad
ls | where name =~ ".pdf" | sort-by size
yazi
cp `Calculo Integral - Jorge Saenz.pdf` ~/Descargas
z des
ls
markitdown `Calculo Integral - Jorge Saenz.pdf`
ls
rm `Calculo Integral - Jorge Saenz.pdf`
ls
killall igni
killall ignis
ignis init
paru -Sy ignis-git
ignis init
uv tool
uv tool uninstall markitdown
uv tool
uv tool --help
uv tool list
z ignis
ls
ls -a
open options.json
open options.json | to json
open -h
open options.json --raw
ignis init
ls .cache
claer
clae
clear
ignis init
helix options.json 
mv options.json options.bak.json
ignis init
helix .cache/options.json 
ls
yazi
ignis init
yazi
ignis init
job spawn { foot }
job spawn { ignis init }
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
ls
git switch main
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
ls
git switch main
git pull
git switch refactorization 
git pull
ls
git diff
yazi
code .
git switch main
git switch -c feature/copy-external-link
deno task dev
job spawn {foot}
clear
code .
clear
git branch --move refact-menu
ls
clear
deno task lint
ls
rm -r node_modules/
deno task dev
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
clear
ls
rm -r node_modules/
deno install
ls -a
deno task lint
helix src/main.ts 
code .
deno task lint
celar
clear
celar
cler
clear
deno task lint
job spawn {foot}
clear
ls
clear
ls
clear
cd src
ls
yazi
clear
ls
cd ..
git diff
clear
ls
clear
git add .
git status
git commit -m "Move 'menu' from helpers.ts to menu.ts"
ls
clear
git push
clear
deno task dev
clear
uv self version
paru -Sy uv
paru -Sy uv python-uv
z py
ls
z python
z dev
ls
cd python/
cd media_dl/
ls
yazi
uv init
yazi
uv init --lib
yazi
git status
cd Descargas
mkdir xd
cd cd
cd xd
uv init --lib
ls -a
yazi
uv init --app
yazi
cd ..
rm -r xd
ls
cd Descargas
ls
mkdir xd
cd xd/
yazi
cd ..
z des
cd xd-xd/
uv init --lib
yazi
cd Descargas
uv init xd
ls
rm -r xd
uv init xd --lib
cd xd
ls
yazi
CD ..
cd ..
rm -r xd
uv init xd --app
yazi
yazi
code .
git status
clear
uv venv
uv sync
uv venv
ls
ls -a
rm -r .venv/
uv sync
overlay use .venv/bin/activate.nu 
clear
media-dl
uv sync
clear
uv sync
media-dl
uv sync
media-dl
uv sync
media-dl
uv sync
media-dl
uv sync
media-dl
uv sync
media-dl
uv sync
me
media-dl 
uv sync
media-dl 
git diff
git status
uv test
pytest
git add .
git commit -m "Change build backend to uv_build"
git push
media-dl
uv sync -U
uv sync --help
clear
git status
git add .
git commit -m "Update uv.lock"
git push
clear
pytest
clear
ls
clear
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
git switch main
git pull
ls
cd Documentos
cd Respaldos/
ls
ouch decompress Obsidian-2025-06-28.zip
ls
cd Obsidian-2025-06-28/
ls Extras/Adjuntos/
ls Extras/Adjuntos/ | where name =~ "Jorge saenz.pdf"
ls Extras/Adjuntos/ | where name =~ "Jorge saenz * .pdf"
ls Extras/Adjuntos/ | where name =~ ".pdf"
cp `Extras/Adjuntos/Fundamentos de la Matematica - Estructuras Discretas (2016) (Jorge A. Sáenz).pdf` ~/Documentos/Obsidian/Extras/Adjuntos/
cd ..
ls
rm -r Obsidian-2025-06-28/
ls
clear
paru -Ss espanso
paru -S espanso-wayland
clip
clip -h
clip
import std
import --help
use
use std
clip
nu --version
paru -Sy nushell
paru -S espanso-wayland
ls .cargo
ls -a
cd .local/share/
cd cargo/
yazi
dunst
dust
du
du -h
du registry/
ls -a
ls .var
ls
ls -a
paru -Sy syncthing
paccache -rk0
cd .local/share/
cd cargo
ls
yazi
ls
cd registry/
dust
ls
rm -r cache/
dust
rm -r src/
dus
dust
rm -r index/
ls
cd Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview/
git pull
code .
git switch -c feature/edit-image-inline
job spawn {foot}
clear
clear
deno task lin
deno task lint
clear
git switch -c refact/menu-sections
git status
git add .
git commit -m "Reuse Menu Sections as array"
git push
deno task lint
clear
git switch main
clear
git switch feature/edit-image-inline 
clear
z obs
ls Temmie Chang
ls "Temmie Chang"
find
find "Temmie Chang"
find
find --help
ls | find Temmie
find --help
paru -Sy quickshell
nushell --version
nu --version
clip
clear
use std/clip
clip
use std/clip; clip --help
use std/clip; clip copy 
use std/clip; clip 
clip copy --help
xd | clip copy
"xddd" | clip copy
clip paste
topgrade --yes --cleanup
paccache -rk0
ls
ignis --help
ignis reload
claer
clear
z nu
ls
cd autoload/
ls
rm carapace.nu
carapace _carapace nushell | save carapace.nu -f
ls
clear
ls
open | nu-highlight 
z py
z media
ls
open pyproject.toml
open pyproject.toml | nu-highlight 
open pyproject.toml --raw | nu-highlight 
open pyproject.toml --help
scope commands
scope open
open --help
scope commands<\n>    | where name starts-with "from "<\n>    | insert extension { get name | str replace -r "^from " "" | $"*.($in)" }<\n>    | select extension name<\n>    | rename extension command
bat pyproject.toml 
clear
ls
clea
clear
open pyproject.toml
clea
open pyproject.toml
bat pyproject.toml 
open pyproject.toml
open pyproject.toml | get project
set
const --help
update --help
open pyproject.toml | project update name xd
open pyproject.toml | update project.name xd
open pyproject.toml | update project.name xd | save
let file = pyproject.toml | open $file
let file = pyproject.toml; open $file
let $file = pyproject.toml; open $file
let file = pyproject.toml; open $file
let file = "pyproject.toml"; open $file
let file = "pyproject.toml";<\n>open $file 
let file = "pyproject.toml";
let file = "pyproject.toml"; open $file |<\n>update project.name "sex-dl"
let file = "pyproject.toml"; open $file |<\n>update project.name "sex-dl" |<\n>save $file
let file = "pyproject.toml"; open $file |<\n>update project.name "sex-dl" |<\n>save $file -
let file = "pyproject.toml"; open $file |<\n>update project.name "sex-dl" |<\n>save $file -f
open pyproject.toml
let file = "pyproject.toml"; open $file |<\n>update project.name "media-dl" |<\n>save $file -f
open pyproject.toml | get project.name
open pyproject.toml | get project
open pyproject.toml | get project.dependencis
open pyproject.toml | get project.dependencies
topgrade --yes --cleanup
paccache -rk0
paru --help
paru -Scc
rm -r /var/cache/pacman/pkg/download-8xJYn
rm -r /var/cache/pacman/pkg/download-7kMKZN/
rm -r /var/cache/pacman/pkg
sudo rm -r /var/cache/pacman/pkg
rm -r /var/cache/pacman/pkg
sudo mkdir /var/cache/pacman/pkg
paru -Scc
cd .cache
yazi
dust 
rm -r BraveSoftware/ paru/ deno/ npm/
dust 
rm -r biome/ pnpm thumbnails/ electron/ mozilla/
dust 
dust .cache
cd .local
dust share/
ls
cd share
du
ls --du
ls
du spotdl
du uv
rm -r uv
ls
du zoxide
du temp
du rustup/
du cargo
ls
du pnpm
yazi
z da
z Datos
ls
ls -a
rm -r .Trash-1000/
rm -r .pnpm-store/
du .uv-cache/
cd .uv-cache/
ls
cd ..
rm -r .uv-cache/
ls
yazi
du .var
ls -a
du .ssh
du .mozilla/
yazi
ls
yazi
cd .local
cd share
ls
topgrade --yes --cleanup
du flatpak/
du go
rm -r go
du gnome-software/
yazi
dust 
yazi
topgrade --yes --cleanup
du rustup/
ls
rust --help
rustc --help
cargo
ls
trash 
gio trash --empty
yazi
dust 
rm -r lapce-stable/
dust 
ls Trash/
rm -r Trash/
gio trash --empty
ls
dust 
paccache -rk0
paru -Scc
arch-clean
S
arch-clean
paru -Rns cmake cppdap jsoncpp libkeybinder3
arch-clean
paru -Rns libmsgpack python-setproctitle python-typer   wxwidgets-common   wxwidgets-gtk3  
paru -Rns libmspack python-setproctitle python-typer   wxwidgets-common   wxwidgets-gtk3  
arch-clean
ls
cd Seguridad/
ls
cd ..
cd Documentos
lss
ls
date
date now
date now | format
format -h
date now | format date
date now | format date "Y"
date now | format date "Y%"
date now | format date "%Y"
date now | format date "%Y-%m-%d"
ouch compress Obsidian/* (date now | format date "%Y-%m-%d")-obsidian.zip
yazi
ls
ls -a
cd Documentos
ls
cd Obsidian/
ls
cd ..
ls
rm Obsidian/ --help
rm Obsidian/ --trash
rm Obsidian/ --trash -r
z obs
ls
cd .obsidian/snippets/
ls
open cards
open Cards.css
open Cards.css | nu-highlight 
bat Cards.css 
paru -Sy quickshell
cd .config/quickshell/
ls
touch .qmlls.ini
quickshell 
ls
bat .qmlls.ini 
ls
cd /usr/lib/qt6/qml
ls
code .
ls
ls -a
bat .qmlls.ini 
ls
qmlls6 
qmlls6 --help
helix 
helix .
cd /usr/lib/qt6/qml
yazi
z heliz
z helix
ls
open languages.toml
open languages.toml | get language-server
open languages.toml | get language-server.qmlls
pgrep qmlls
open languages.toml | get language-server
open languages.toml | get language-server.deno-lsp
open languages.toml | get language-server.deno-lsp.args
z quick
ls
code .
paru -S qt6-doc
clear
z quick
ls
code .
clear
quickshell 
cd Imagenes
z doc
ls
ouch compress Obsidian/* (date now | format date "%Y-%m-%d")-obsidian.zip
ls
cd Obsidian/
du
cd ..
du Obsidian/
ls
mv 2025-07-31-obsidian.zip Obsidian-2025-07-31.zip
ls
du Obsidian/
clear
ls
yazi
cd Respaldos/
ls
ouch decompress Obsidian-2025-07-31.zip
yazi
ls
cd ..
du Obsidian/
yazi
cd Respaldos/
ls
ouch decompress Obsidian-2025-07-31.zip
yazi
ls
cd ..
ls
du Obsidian/
l
cd Obsidian/
ls
cd Extras/Adjuntos/
ls | where name =~ ".webp" | sort-by size
cd ..
du Obsidian/
cd Obsidian/Extras/Adjuntos/
ls
ls | select size
ls | select size | reduce
ls | select size | reduce --help
ls | select size | reduce {|a,b| a + b}
ls | select size | reduce {|a,b| $a + $b}
ls | get size | reduce {|a,b| $a + $b}
ls | where name =~ ".webp"<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".webp" |<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".pdf" |<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".gif" |<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".webp" |<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".png" |<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".jpg" |<\n>get size | reduce {|a,b| $a + $b}
ls | where name =~ ".webp" |<\n>get size | reduce {|a,b| $a + $b}
cd ...
cd ..
ls
ouch compress Obsidian
ouch compress Obsidian/* (date now | format date "%Y-%m-%d")-obsidian.zip
yazi
ouch compress Obsidian/* Obsidian-(date now | format date "%Y-%m-%d").zip
ls
yazi
ls Respaldos/
ls
cd Documentos/Obsidian/
ls
ls | where name =~ ".sync"
ls | where name =~ ".sync" | get name
rm --help
each --help
ls | where name =~ ".sync" | get name | each {||}
ls | where name =~ ".sync" | get name | each {|e| $e}
ls | where name =~ ".sync" | get name | each {||}
ls | where name =~ ".sync" | get name | each {}
ls | where name =~ ".sync" | get name | each
ls | where name =~ ".sync" | get name | each {}
ls | where name =~ ".sync" | get name | each {|e| $e}
ls | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls | where name =~ ".sync-conflict" | get name
ls
z media
ls
open pyproject.toml
open pyproject.toml | get project.dependencies
open pyproject.toml | get project.version
open pyproject.toml | update project.version 3.0.0
update --help
let f = pyproject.toml
let f = "pyproject.toml"; open $f 
let f = "pyproject.toml"; open $f | update project.version 3.0.0
let f = "pyproject.toml"; open $f | update project.version 3.0.0 | save $f
let f = "pyproject.toml"; open $f | update project.version 3.0.0 | save $f -f
ls
open pyproject.toml | get project.version
let f = "pyproject.toml"; open $f | update project.version 2.1.1 | save $f -f
open pyproject.toml | get project.version
ls
git diff
bat pyproject.toml 
git dif
git diff
ls
git add .
git commit -m "pyproject.toml refact"
git push
uv run media-dl
cd Documentos/Obsidian/
z pub
cd Test/
ls
code .
cd .obsidian/plugins/obsidian-copy-url-in-preview/
ls
clear
ls
git diff
code .
clear
git diff
git pull
git branch --set-upstream-to=origin/main main
git pull
git branch --set-upstream-to=origin/main feature/edit-image-inline 
git pull
git diff
git add .
git commit -m "Edit images inline testing"
git pull
git config pull.rebase false
git pull
clear
git diff
git add .
git commit
git log
git switch main
git pull
clear
git switch -c feature/share-image
clear
deno task dev
deno install
deno task dev
git add .
git commit -m "Share images on mobile (draft)"
git switch main
git switch -c refact/copyImages
git switch feature/share-image 
git switch main
z url-in
clear
git diff
git log
git switch -c refact/copyImages
git switch -c refact/copy-images
git log
git add .
git commit -m "Refactorize copy image functions"
git add .
git commit
ls
git diff
git add .
git commit -m "Move withTimeout under loadImageBlob"
ls
git log
git add .
git commit -m "Document ImageType"
ls
git push
git switch -c refact/split-helpers
ls
git add .
git commit -m "Split helpers"
git switch feature/share-image 
git switch refact/copy-images 
ls
git diff
git add 
git add .
git commit -m "Use internalFile if posible on copy image option"
git push
ls
git add .
git diff
ls
git commit
git push
claer
clear
yazi
ls
deno task dev
z url
ls
git diff
ls
code .
job spawn {foot}
obsidian --helpÇ
obsidian --help
clear
obsidian --help
git switch -c feature/gif-support
git rmeote
git remote
git diff
ls
git staus
git status
git add .
git commit -m "Partial copy GIFs support"
git push
ls
git pull
git switch refact/copy-images 
git pull
git switch main
git pull
git switch feature/gif-support 
git pull
git switch refact/copy-images 
git pull
git switch feature/gif-support 
clear
git pull
ls
git pull
claer
clear
deno task dev
ls
yazi
ls
ñl
clear
ls
ñs
clear
ls /
tree /
cd Descargas
z url
git pull
deno task dev
z url
ls
git pull
git switch main
git pull
gh
gh repo
git repo sync
git repo sync NomarCub/obsidian-copy-url-in-preview 
git repo sync NomarCub/obsidian-copy-url-in-preview
git repo
git fetch main
git fetch upstream
git remote
git fetch origin 
gh
gh repo --hepl
gh repo --help
gh repo
gh repo sync
gh repo set-default
gh repo sync
git pull
git log
ls
git repo
gh repo
gh repo sync
gh repo sync --help
gh repo sync --btanch main
gh repo sync --branch main
gh repo set-default
git repo sync
gh repo sync
gh repo set-default
gh repo sync NomarCub/obsidian-copy-url-in-preview
git pull
gh pr list
gh pr checkout 63
ls
clear
ls
code .
clear
job spawn {foot}
clear
claer
clear
git diff main
clear
git status
git add .
git commit 
git push
git push git@github.com:NomarCub/obsidian-copy-url-in-preview.git HEAD:refs/pull/63/head
git add .
git commit -m "Fix image blob detection on Android"
code ext install Github.copilot
cd Descargas
code ext install GitHub.copilot-1.351.1711.vsix 
code ext install GitHub.copilot-1.351.1711.vsix  --help
code ext --help
code --install-extension GitHub.copilot-1.351.1711.vsix 
ls
rm GitHub.copilot-1.351.1711.vsix
code .
deno task dev
clear
z url
ls
clear
ls
clear
git log
clear
git diff 353e92f4b1ec31170937e360c4f1aa2986ebf4de
git log
git log 353e92f4b1ec31170937e360c4f1aa2986ebf4de
git diff 353e92f4b1ec31170937e360c4f1aa2986ebf4de
git log
git diff 058aacf0737e68870481e4106aa9b2a5cd91cd2d
git log
git diff 6f109de52625d9a327ebebee134a9035345bc303
clear
git pull
clear
su
su --help
topgrade --yes --cleanup
killall ignis
ignis init
paru -S ignis-gvc
paru -Ss ignis-gvc
paru -S ignis-gvc
cd des
y
ls
paru -Rns keepasskx
paru -Rns keepasskc
paru -Rns keepassxc
paru -Ss keepassxc
flatpak search keepass
flatpak list
flatpak uninstall org.keepassxc.KeePassXC 
paru -Ss proton
paru -Ss proton-pass
paru -S proton-pass-bin
flatpak uninstall --unused
proton-pass 
code --ozone-platform=wayland
killall code
proton-pass --ozone-platform=wayland
ELECTRON_OZONE_PLATFORM_HINT=wayland
set ELECTRON_OZONE_PLATFORM_HINT
const ELECTRON_OZONE_PLATFORM_HINT
const ELECTRON_OZONE_PLATFORM_HINT = "wayland"
$ELECTRON_OZONE_PLATFORM_HINT
proton-pass
$env.ELECTRON_OZONE_PLATFORM_HINT = "wayland"
z nu
ls
cd env.nu
ls
clear
ls
cd .config/environment.d/
ls
helix wayland.conf 
helix 10-home-manager.conf 
yolk sync
ls
yazi
y
$env.ELECTRON_OZONE_PLATFORM_HINT
cd .config/environment.d/
ls
rm wayland.conf
ls
clear
ls
code
ld
ls
clear
ls
obsidian
z nu
ls
yolk sync
z yolk
helix yolk.rhai 
yolk sync
helix yolk.rhai 
yolk sync
brave 
brave
$env.OZONE_PLATFORM
$env.OZONE_PLATFORM = "wayland"; brave
z niri
yazi
yolk sync
helix z yolk
z yolk
helix yolk.rhai 
yolk sync
helix yolk.rhai 
yolk sync
cd .config
ls
rm vivaldi-stable.conf brave-flags.conf
yazi
yolk sync
z niri
ls
brave
ls
git add .
yolk 
tldr yolk
yolk git
yolk git add . ; yolk git commit -m "Update" ; yolk git push
proton-pass
ignis init
ignis --help
pgrep proton-pass
ps | where name =~ proton
ps | where name =~ electron
ps
ps | where name =~ "Proton Pass"
fastfetch 
ps | where name =~ "Proton Pass"
fastfetch 
paru -Ss bitwarden
paru -Rns proton-pass-bin
topgrade --yes --cleanup
paru -Rns electron34
paru -Rns electron37
paru -Rns electron35
z url
git pull
code .
git log
git reset --hard feature/refactor-fetch 
ls
git pull
git diff
ls
git log
ls
git reset --hard feature/refactor-fetch 
cler
clear
git log
gh pr checkout 63
gh pr checkout 63 --help
ls
git log
git switch main
gh pr checkout 63
git reset --hard pr-63
git reset --hard feature/refactor-fetch 
git log
git unod
git undo
git log
git reset HEAD~1
jj
cd..
jj init
jj git init
jj git init --colocate
jj
jj undo
jj
clear
jj
jj undo
cd ..
ls
rm -r obsidian-copy-url-in-preview/
gh pr checkout https://github.com/NomarCub/obsidian-copy-url-in-preview/pull/63
gh pr checkout https://github.com/NomarCub/obsidian-copy-url-in-preview/pull/63 --help
gh pr checkout https://github.com/NomarCub/obsidian-copy-url-in-preview/pull/63
git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git
cd obsidian-copy-url-in-preview/
ls
git switch feature/refactor-fetch 
ls
claer
clear
ls
clear
ls
clear
deno task dev
jj
z url
z ignis
ls
deno install
z niri
git status
rm deno.lock
clear
z nus
ls
open config.nu
open config.nu | nu-highlight 
open config.nu | bat
bat config.nu 
open config.nu | bat
open config.nu | nu-highlight 
lsg
ls
yazi
z url
ls
clear
ls
clear
ls
deno task dev
y
clear
y
deno task dev
ls
cd obsidian-copy-url-in-preview/
yazi
ls
clear
deno task dev
ls
clea
clear
ls
z nu
ls
yazi
ls
clear
z nush
ls
z quick
ls
ls -a
helix .
ls
open .qmlls.ini
rm .qmlls.ini
jo
job spawn {foot}
clear
ls
ls -a
quickshell --help
helix .
quickshell 
touch .qmlls.ini
ls -a
bat .qmlls.ini 
helix .
ls
clear
ls -a
bat .qmlls.ini 
clear
paru -Ss qt
paru -Ss qt6
paru -Ss qt6-doc
paru -Ss qt doc
paru -Rns qt6-doc
ñs
bat .qmlls.ini 
paru -Rns qt6-doc
cd /usr/share/qt/doc/html
cd /usr/share/qt/doc/
cd /usr/share/qt6/
ls
pacman -Ql qt6-doc | grep html
pacman -Ql qt6-doc | grep html | ba
pacman -Ql qt6-doc | grep html | bat
cd /usr/share/doc/qt6/qtwidgets/
cd /usr/share/doc/qt6/
ls
pwd
z quick
ls
helix .qmlls.ini 
ls
helix .
ls
helix .qmlls.ini 
cd Descargas
paru -S obsidian
paru -Sy obsidian
paru -Rns electron34
ls
paru -Sy
paru -Su
z obsi
code .
z ob
code .
cd Descargas
ls
rm obsidian-web-clipper-settings.json
ls
z obs
ls
z ob
ls | where name =~ ".sync-conflict" | get name
ls | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls | where name =~ ".sync-conflict" | get name 
pgrep code
z b
z ob
claer
clear
ls
ls | where name =~ "Videojuegos.base"
helix Videojuegos.base 
helix "Multimedia Largo.base" 
helix Multimedia.base 
ignis init
killall igins
killall ignis
ignis init
job spawn { ignis init }
z obs
helix Multimedia.base 
z ob
paru -Ss zen browser
paru -S zen browser-bin
paru -S zen-browser-bin
ps | where name =~ "Zen"
ps | where name =~ "zen"
fastfetch 
ps | where name =~ "ignis"
killall ignis
fastfetch 
job spawn { ignis init }
ls
fastfetch 
ps | sort-by name
ps | sort-by mem
ps | sort-by name
fastfetch 
ps | sort-by name
ps | sort-by nem
ps | sort-by mem
fastfetch 
ps | sort-by mem
fsatfetch
fastfetch 
z ob
z ad
ls
clear
ls
clear
loupe `Dark Blood 1.jpg`
{loupe `Dark Blood 1.jpg`}
job spawn {loupe `Dark Blood 1.jpg`}
z obs
z obsi
helix "Creado hoy.base" 
helix --health yam
helix --health yaml
helix "Creado hoy.base" 
z quick
ls
tree /
paru -S qt6-tools
paru -Rns qt6-tools qmlls6
paru -Rns qt6-tools qmlls
paru -Rns qt6-tools qt-qmlls
paru -Rns qt6-tools qt6-declarative
paru -S qt6-doc
z qucik
z quick
ls
ls -a
quickshell 
ls
bat .qmlls.ini 
z qt6
ls
cd qtqml/
ls
cd ..
z quick
helix .qmlls.ini 
quickshell 
bat .qmlls.ini 
helix .
bat .qmlls.ini --raw
bat .qmlls.ini --plain
ls
cd /usr/share/qt6/translations/
ls
cd ..
ls
pwd
ls
cd ..
cd doc
ls
cd qt6/
ls
yazi
ls
z quick
helix bar/Action.qml 
z qt6
ls
pwd
clear
ls --help
ls | get name
ls | get name | to html 
ls | get name | to md 
ls | get name | to md
pacman -Ql qt6-doc | grep -E '\.html$'
pacman -Ql qt6-doc | rg '\.html$'
pacman -Ql qt6-doc | fing '\.html$'
pacman -Ql qt6-doc | find '\.html$'
find --help
help search
help --help
help --find search
pacman -Ql qt6-doc
pacman -Ql qt6-doc | detect columns 
pacman -Ql qt6-doc | detect columns | get /usr/
pacman -Ql qt6-doc | detect columns | get /usr/ | where "qt"
pacman -Ql qt6-doc | find '\.html$'
pacman -Ql qt6-doc | rg '\.html$'
z qui
ls
helix bar/Action.qml 
z quick
ls
helix .qmlls.ini 
code .
paru -Rns qt6-tools
topgrade --yes --cleanup
ls
z quick
helix .
paccache -rk0
arch-clean
z obsi
ls | where name =~ ".sync-conflict" | get name 
ls --help
ls * | where name =~ ".sync-conflict" | get name
ls --help
ls ...glob | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict" | get name
z obs
glob
glob *
ls ...(glob *) | where ".sync-conflict" | get name
ls ...(glob *) | where ".sync-conflict"
ls ...(glob *) | where $in =~ ".sync-conflict" | get name
ls ...(glob *) | where $in =~ ".sync-conflict"
glob * | where $in =~ ".sync-conflict"
ls ...(glob *) | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict"
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|| rm}
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls ...(glob *) | where name =~ ".sync-conflict" | get name
clear
ls
z obs
ls ...(glob *) | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
cd Documentos
ouch compress Obsidian/* Obsidian-(date now | format date "%Y-%m-%d").zip
ls
cd Documentos
ls
cd Obsidian/
ls
ls Diario/(glob *)
ls Diario/*
ls Diario/**
ls ...(glob Diario/)
ls ...(glob Diario/*)
ls ...(glob Diario/*) 
ls ...(glob Diario/*)
cd ..
ls
cd Respaldos/
ls
cd Obsidian/
ls
ouch decompress Obsidian-2025-08-31.zip
ls
cd Obsidian-2025-08-31/
ls
ls ...(glob Diario/*)
yazi
z obs
l
ls
clear
ls
z obso
z obsi
ls
ls ...(glob *) | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls ...(glob *) | where name =~ ".sync-conflict" | get name
paru -Ss tagspace
paru -S tagspaces-bin
z yolk
ls
clear
ls
paru -S tagspaces
paru -Rns gendesk electron36 nvm
ls
ls -a
paru -S tagspaces-bin
paru -Ss tagstudio
paru -S tagstudio
paru -Rns tagspace
paru -Rns tagspaces
paru -Rns tagspaces-bin
paru -S tagstudio
ls
ls -a
cd .config
cd TagSpaces/
ls
cd ..
rm -r TagSpaces/
ls -a
ls | sort-by type
rm -r nvm
ls -a
ls -a | sort-by modified
ls -a | sort-by type
ls | sort-by type
lsg
clear
ls
lsg
eza
eos-rankmirrors 
paru -S tagstudio
paccache -rk0
paru -Scc
arch-clean
paru -Rns cli11 qt6-shadertools wayland-protocols 
cd Documentos/.ts/
ls
open tsm.json
cd ..
ls
yazi
ls
cd Dev
ls
cd web
ls
deno run -A npm:sv create
deno run -A npm:sv create --help
deno run -A npm:sv create
ls
yazi
cd test-deno/
l
ls
clear
ls
code .
yazi
clear
z web
y
ls
deno install
deno task preview
y
clear
ls
code .
helix README.md
clear
deno add npm:@biomejs/biome --dev
clear
z obsi
killall obsidian
paru -S obsidian
paru -Sy obsidian
topgrade --yes --cleanup
ignis init
niri --help
niri completions
niri completions --help
niri completions nushell
niri completions nushell | save ~/.config/nushell/autoload/niri.nu
niri help
niri msg
clear
niri
killall ignis
z ignis
ls
ignis init
quickshell 
z quick
helix .
paru -Ss qt6-doc
job spawn { ignis init }
paru -S quickshell
topgrade --yes --cleanup
paru -S quickshell-git
z ignis
ls -a
cd Imagenes
ls -a
helix options.json 
z niri
localectl
localectl --help
localectl set-keymap en
localectl set-keymap es
z quick
code .
clear
ls
ls -a
lsg
quickshell 
z quick
clear
ls
clear
code .
z quick
ls
helix .
z niri
paru -S quickshell-git
cmake
paru -Rns cli11 cmake cppdap jsoncpp qt6-shadertools wayland-protocols rhash
paru -Scc
paccache -rk0
paru -Ss jj
paru -Sy jj
paru -S jj-bin
jj
ls -a
paru -Ss jujutsu
paru -Sy jujutsu
z test
ls
cd .obsidian/plugins/obsidian-copy-url-in-preview/
ls
jj
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
jj config
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git
ls
cd obsidian-copy-url-in-preview/
ls -a
cd ..
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --help
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
cd obsidian-copy-url-in-preview/
ls
ls -a
lsg
lsg -a
lsg --help
z nushell
ls
lsg --help
lsg -a
ls -a
lsg -a
y --help
lsg -a
nushell --help
lsg
lsg -a
ls -a
ls
lsg Documentos
lsg
lsg --help
lsg -a
ls
lsg
lsg -a
lsg
lsg 
lsg
ls -s
ls
ls --help
clear
lsg
lsg -a
lsg .
lsg
lsg -a
ls- a
ls -a
ls -h
ls .
lsg --help
eza command
eza commands
lsg
lsg -a
lsg -a --help
lsg
lsg --help
lsg Descargas
lsg Descargas Documentos
lsg
z nus
ls
lsg
^ls
lsg
ls -s
ls
lsg
lsg Documentos
lsg Descargas
lsg
lsg Documentos
lsg --help
lsg
lsg Documentos
lsg Descargas
lsg Imagenes
lsg
lsg .
grid
clear
grid -h
z url
ls
jj
jj -h
jj
jj -h
jj
jj config
jj config get
jj config get --help
jj config 
jj config edit
jj config edit --user
clear
ls
clar
clear
jj config set --user ui.default-command log
jj
jj config edit
jj config edit --user
clear
jj
jj commit -h
jj commit
jj
jj undo
jj
jj undo
jj
jj undo
jj
jj undo
jj
jj new --help
jj new @-
jj
jj undo
jj
jj undo
jj
jj abandon 
jj
jj edit w
jj edit l
jj abandon 
jj
cd ..
cd ....
z test
cd .obsidian/plugins/
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
ls
cd obsidian-copy-url-in-preview/
ls
git status
jj diff
git diff
ks
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
l
ls
cd obsidian-copy-url-in-preview/
ls
jj
cd describe
jj describe 
jj
jj desc ohno
jj describe oas
jj describe "oas"
jj describe 
jj
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
jj log
jj status
jj diff
yazi
open /etc/stab
open /etc/fstab
bat /etc/fstab
helix /etc/fstab 
bat /etc/fstab
ls
cd test
z test
ls
cd .obsidian/plugins/
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
ls
cd Descargas
ls
mkdir xd
ls
cd xd
ls
cd ..
rm xd/
ls
eza
cd ..
eza
cd Imagenes
eza
rm -r copy-url-in-preview/
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
ls
rm -r obsidian-copy-url-in-preview/
ls
z Test
ls
cd .obsidian/plugins/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git
ls
cd obsidian-copy-url-in-preview/
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
ls
clear
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
cd Descargas
git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
jj import
cd Descargas
helix sex.sh
l
ls
bash sex.sh 
ls
rm sex.sh
z test
ls
cd .obsidian/plugins/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
cd Descargas
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
id
id u
id -y
id -u
id -g
cd Descargas
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
cat /proc/filesystems 
cat /proc/filesystems | rg ntfs
uname
mount | rg ntfs
mount
mount | rg ntfs
find
findmnt 
findmnt -n
findmnt -n -o FSTYPE,TARGET,SOURCE /mnt/windows
cat /proc/mounts 
cat /proc/mounts | rg
cat /proc/mounts | rg nt
cat /proc/mounts | rg ntfs
lsblk
lsblk -f
cat /proc/filesystems 
cat /proc/filesystems | rg ntfs
cd Descargas
ls
jj gi
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
ls
cd obsidian-copy-url-in-preview/
ls
ls -
ls -a
cd Descargas
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
ls
cd obsidian-copy-url-in-preview/
cd ..
ls
rm -r obsidian-copy-url-in-preview/
cd Descargas
ls
cd Descargas
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
mkdir "hola: adios"
touch "Hola"
ls
rm Hola
touch "Hola: Adios"
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
cd obsidian-copy-url-in-preview/
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
cd Descargas
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
touch "Hola: Adios"
helix sex.sh
bash sex.sh 
ls
rm sex.sh
cd Descargas
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
bat /etc/fstab
cd Descargas
z test
ls
cd .obsidian/plugins/
ls
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git 
ls
cd obsidian-copy-url-in-preview/
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
ls
cd obsidian-copy-url-in-preview/
ls
bat /etc/fstab
z obs
ls
zi ob
ls
clear
ls
lss
ls
clea
jj
clear
jj diff
jj log
clear
jj
jj describe -m "Split helpers files"
ls
z py
ls
z media-dl
z media
ls
lsg
lsg .
lsg .
ls
ls -h
ls -l
ls -l
clear
ls
cd Descargas
ls
git clone git@github.com:Rikiub/media-dl.git
cd media-dl/
ls
ls -l
cd Descargas
ls
touch sex.sh
ls -l
rm sex.sh
cd src
ls -l
cd media_dl/
ls -l
python main.py
python extractor.py 
cd ..
clear
ls
jj
ls
cd Descargas
jj init --help
jj init sex
jj git init xd
cd xd
ls
jj
ls -a
jj
ls
jj commit "waos"
jj
cd ..
ls
rm -r xd
ls
rm -r media-dl/
ls
yazi
git stauts
git status
jj
jj st
jj d
jj diff
ls
yazi
clear
s
yazi
jj
jj diff
jj
ls
cd Descargas
ls -l
find
find .
find --help
find .
find xd
ls | find
ls | find dir
ls | find file
ls -l | find file
z obs
z test
cd .obsidian/plugins/
cd obsidian-copy-url-in-preview/
ls -l
umask
z test
cd .obsidian/plugins/obsidian-copy-url-in-preview/
ls -l
ls -l | find file
ls -l | find file dir
ls -l | find file | each {}
ls -l | find file | each {|i| chmod 644 {} +}
ls -l | find file | each {|i| chmod 644}
chmod
ls -l | find file | each {|i| chmod 644 $i +}
ls -l | find file | each {|i| $i}
ls -l | find file | each {|i| chmod 644 $i +}
ls -l | find file | each {|i| chmod 644 $i.name +}
tldr chmod
ls -l | find file | each {|i| chmod 644 $i}
ls -l | find file | each {|i| chmod 644 $i.name}
ls -l | find file | each {|i| chmod 644 $i}
ls -l | find file | each {|i| chmod 644 $i.name}
ls
cd Descargas
ls
ls -l
$env.USER
ls
ls -l
cd DataBackup/
ls
ls -l
cd apps
ls -l
cd ..
ls
cd ..
ls
cd ..
ls
cd Descargas
ls -a
ls l
ls -l
mkdir xd
ls -l
rm xd
z mnt
ls
cd Datos/
ls -a
ls -l
ls
z mnt
cd Datos/
ls
ls -l
ls -l -a
ls -l
bash
ls -l
cd sus
yazi
ks
ls
ls -l
yazi
z mnt
ls
cd Datos/
ls
cd sus
ls -l
yazi
ls -l
cd Descargas/
ls -l
cd DataBackup/
ls -l
cd ..
cd Documentos/
ls -l
yazi
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
yls
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
y
ls -l
ls -l | select user
ls
z ob
ls | where name =~ ".sync-conflict" | get name 
ls
ls ...(glob *) | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls ...(glob *) | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls ...(glob *) | where name =~ ".sync-conflict" | get name
rm /mnt/Datos/sus/Documentos/Obsidian/.obsidian/appearance.sync-conflict-20250903-131036-F7E4ZZI.json 
z ob
ls ...(glob *) | where name =~ ".sync-conflict" | get name
rm /mnt/Datos/sus/Documentos/Obsidian/.obsidian/appearance.sync-conflict-20250903-131036-F7E4ZZI.json  
bash
ls ...(glob *) | where name =~ ".sync-conflict" | get name
z obs
ls
clear
z ob
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
ls | where name =~ ".sync-conflict" | get name 
ls
ls | sort-by type
touch xd.md
find xd.md
ls | find xd.md
rm xd.md
ls -a
rm --help
rm --permanent xd.md
ls
clear
ls -a
z tes
ls
cd .obsidian/plugins/
rm -r obsidian-copy-url-in-preview/
rm -r --permanent  obsidian-copy-url-in-preview/
ls
z mnt
ls
cd Datos/
ls
ls -a
rm -r --permanent .Trash-1000/
sudo rm -r --permanent .Trash-1000/
sudo rm -r .Trash-1000/
ls -a
ls -l
ls -l -a
rm -r "$RECYCLE.BIN"
rm -r "$RECYCLE.BIN" --permanent 
bash
ls -a
ls
ls -a
yazi
rm -rf .Trash-1000/
ls
ls -a
mv .Trash-1000/ .Trash-Corrupted
sudo mv .Trash-1000/ .Trash-Corrupted
ls -a
ls -l
ls -la
z des
ls
touch xd.md
rm xd.md
ls
z mnt
ls
ls -l
cd Datos
ls
ls -a
sudo nautilus 
nautilus admin:/
ks
ls -a
mkdir .Trash-1000
sudo mkdir .Trash-1000
ls
ls -a
killall nautilus 
ls -a
rm -r .Trash-1000/
sudo rm -r .Trash-1000/
ls
cd ..
ls
ls -l
cd Datos/
ls -l
cd ..
ls -l
bash
ls
ls -l
ls
ls -a
cd Datos/
ls -l
mkdir xd
ls -l
cd Windows/
mkdir xd
ls
rm xd
ls
rm ./xd/
sudo rm ./xd/
bat .hidden
cd ..
bat .hidden
ud
id
echo (echo "xd")
sudo chown $env.USER:$env.USER .Trash-(id -u)
sudo chown ($env.USER):($env.USER) .Trash-(id -u)
id -u
mkdir .Trash-(id -u)
sudo mkdir .Trash-(id -u)
ls
ls -a
sudo chown ($env.USER):($env.USER) .Trash-(id -u)
ls -l
ls -la
z des
l
ls
rm xd.md
ls
z mnt
ls
yazi
ls
ls -a
cd Datos/
ls -a
rm -r `$RECYCLE.BIN/` --permanent 
ls -l
sudo rm -r `$RECYCLE.BIN/` --permanent 
sudo rm -r `$RECYCLE.BIN/` 
ls -a
yazi
sudo rm -r .Trash-Corrupted/
yazi
ls -a
rm -r .uv-cache/
sudo rm -r .uv-cache/
ls -a
ls -
ls -la
helix .hidden 
rm .hidden
sudo rm .hidden
helix .hidden
sudo helix .hidden
ls -la
z mnt
ls
ls -la
z mnt
ls
ls -la
cd Datos
ls -la
cd Windows/
ls -l
ls -la
cd `Accesos Directos/`
ls
cd Aplicaciones/
ls-la
ls -la
cd ..
ls -la
ls -a
cd Datos/
ls -a
ls -l
ls -la
z mnt
ls -la
cd Datos/
ls -a
ls -la
ls -a
ls -la
cd Descargas
ls -a
ls -la
cd ..
ls
ls -la
ls
cd Descargas
ls
touch xd.md
ls
rm xd.md
helix /etc/fstab 
sud ohelix /etc/fstab 
cd Descargas
ls -a
ls -l
ls -la
touch xd.md
ls -la
rm xd.md
clear
ls
ls -la
gnome-disks
ls -la
z Datos
ls -la
cd ..
ls -la
cd Datos/
touch xd.md
ls -la
rm xd.md
cd Descargas
ls -la
touch xd.md
ls -la
rm xd.md
clear
ls -la
touch xd.md
ls -la
rm -r xd.md
ls -la
jj git clone git@github.com:NomarCub/obsidian-copy-url-in-preview.git --colocate
ls
rm -r obsidian-copy-url-in-preview/
claer
"xd" | clip 
"xd" | clip copy
clip pase
clip paste
clip copy
topgrade --yes --cleanup
paru -Ss cachyos
paru -Ss linux-cachyos
paru -S linux-cachyos
paru -Rns clang compiler-rt lld llvm rust-bindgen
sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com<\n>sudo pacman-key --lsign-key 3056513887B78AEB
sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'<\n>sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
sudo helix /etc/pacman.conf 
sudo pacman -Sy
clear
paru -Ss cachyos
paru -Ss linux-cachyos
paru -S linux-cachyos
paru -S linux-cachyos linux-cachyos-headers 
paru -Rns quickshell-git
paru -Rns quickshell
paru -S quickshell
quickshell 
z quick
ls
clear
job spawn { foot }
clear
ls
ls
clear
ls -a
bat .qmlls.ini 
clear
sudo grub-mkconfig -o /boot/grub/grub.cfg 
uname
fastfetch 
neon-config 
fastfetch 
ps | where name =~ "ignis"
fastfetch 
ls
paru -Ss zram
bat /usr/lib/systemd/zram-generator.conf 
paru -Rns zram-generator-defaults
sudo helix /etc/systemd/zram-generator.conf
ls
paru -Rns zram-generator
sudo helix /etc/systemd/zram-generator.conf
paru -Rns zram-generator
paru -S zramswap
paru -Ss zramswap
zramctl
zramctl 
swapon
clear
paru -Rns zramswap
paru -S zramswap
paru -Ss zramswap
killall ignis
job spawn { ignis init }
killall ignis
z ignis
ls
cd .cache
ls
bat options.json 
rm options.json
killall ignis
job spawn { ignis init }
killall ignis
job spawn { ignis init }
paru -Ss aur/zramswap
paru -S aur/zramswap
systemctl start zram
systemctl start zramswap
systemctl enable zramswap
zram
zramctl 
swapon
fastfetch 
ps | where name =~ "ignis"
killall ignis
job spawn { ignis init }
ps | where name =~ "ignis"
ls
fastfetch 
ps | where name =~ "ignis"
fastfetch 
paru -Rns zen-browser-bin
ls -a
du .zen
rm -r .zen
ls -a
z quickshell
code .
clear
killall code
ps | where name =~ "Code"
ps | where name =~ "code"
killall code-oss
ps | where name =~ "ignis"
killall ignis
clear
helix .
code.
code .
fastfetch 
qmlls6
killall firefox
clear
fastfetch 
quickshell 
clear
ls /usr/lib/qt6/qml/
ls /usr/lib/qt6/qml/QtQuick/
ls /usr/lib/qt6/qml/QtQuick/Layouts/
clear
ls
bat .qmlls.ini 
quickshell 
clear
code .
systemctl poweroff 
paru -Ss gemini-cli
paru -S gemini-cli
paru -S gemini-cli-bin
paru -S gemini-cli
paru -S aur/gemini-cli
paru -S gemini-cli-bin
gemini
clear
ls -a
yazi
cd Descargas
clear
gemini
ls
gemini
clear
gemini
ls
clear
cd ..
ls
z media
clear
gemini
clear
z des
clear
mkdir test
cd test
gemini
clear
ls
ls -a
cd ..
rm test
ls
ls -a
cd ..
ls -a
ls .local
ls -a
ls .gemini/
clear
z ob
ps | where name =~ "ignis"
ps | where name =~ ".sync"
ls | where name =~ ".sync-conflict" | get name 
ls | where name =~ ".sync-conflict" | get name
ls | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls | where name =~ ".sync-conflict" | get name
paru -Syu
z obs
ls | where name =~ ".sync-conflict" | get name
z pu
ls
cd `Capturas de pantalla/`
ls | where name =~ ".sync-conflict" | get name
cd ..
ls ...(glob *) | where name =~ ".sync-conflict" | get name
ls ...(glob *) | where name =~ ".sync-conflict" | get name | each {|e| rm $e}
ls ...(glob *) | where name =~ ".sync-conflict" | get name
z yaml
z nu
ls
ls autoload/
ls autoload/ -s
lsg autoload/
lsg
lsg autoload/
"def frontmatter [] {<\n>  lines |<\n>  split list '---' |<\n>  do { |lst|<\n>    let fm = $lst.0 |<\n>      to text | from yaml |<\n>      into value | into record<\n>    {<\n>      frontmatter: $fm<\n>      content: ($lst | skip 1 | to text | str trim)<\n>    }<\n>  } $in<\n>}" | save xd.nu
ls
open xd.nu
cd Descargas
y
yazi
"def frontmatter [] {<\n>  lines |<\n>  split list '---' |<\n>  do { |lst|<\n>    let fm = $lst.0 |<\n>      to text | from yaml |<\n>      into value | into record<\n>    {<\n>      frontmatter: $fm<\n>      content: ($lst | skip 1 | to text | str trim)<\n>    }<\n>  } $in<\n>}" | save xd.nu
cd Descargas
frontmatter 
clear
z mark
z ob
ls ...(glob *) | where name =~ ".sync-conflict" | get name
frontmatter `2022-10-21 William moderno.md`
open `.syncthing.2025-09-08 2110.md.tmp`
bat ".syncthing.2025-09-08 2110.md.tmp" 
rm `.syncthing.2025-09-08 2110.md.tmp`
clear
find William
ls | find william
ls | find William
ls | find William | open $in.0
ls | find William | open $it
ls | find William | open $it.0
ls | find William | open $in
ls | find William | open $in.0
ls | find William | get 1
ls | find William | get 0
clear
ls | find William | get 0
ls | find --help
ls | find -i william
ls | find -i william | get 1
ls | find -i william | get 1 | open
open --help
ls | find -i william | get 1 | open
ls | find -i william | get 1
ls | find -i william | get name
ls | find -i william
ls | find -i william | get 0.name
ls | find -i william | get 0.name | open
ls | find -i william<\n>get 0.name | open
ls | find -i william |get 0.name | open
ls | find -i william |<\n>get 0.name | open
ls | find -i william | <\n>get 0.name | open
ls | find -i sex | <\n>get 0.name | open
ls | find -i william | <\n>get 0.name | open
ls | find -i william | <\n>get 0.name | open | frontmatter 
ls | find -i william | <\n>get 0.name | open
ls | find -i william
open  2021-05-12 William y su novia la loca.md
open "2021-05-12 William y su novia la loca.md"
open "2021-05-12 William y su novia la loca.md" | frontmatter 
z front
ls
z nu
cd autoload/
ls
z ob
ls
open "2021-05-12 William y su novia la loca.md" | frontmatter 
open "2021-05-12 William y su novia la loca.md" | open
open "2021-05-12 William y su novia la loca.md"
open "2021-05-12 William y su novia la loca.md" | split
open "2021-05-12 William y su novia la loca.md" | split list "---"
open "2021-05-12 William y su novia la loca.md" | split list '---'
open "2021-05-12 William y su novia la loca.md" | split list "---"
open "2021-05-12 William y su novia la loca.md" | lines | split list "---"
open "2021-05-12 William y su novia la loca.md" | lines
open "2021-05-12 William y su novia la loca.md" | lines | split list "---"
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1 | to yaml
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1 | from yaml
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1 | from yaml | get en
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1 | from yaml | get relacion
skip --help
open "2021-05-12 William y su novia la loca.md" | split row '---' | skip | from yaml | get relacion
open "2021-05-12 William y su novia la loca.md" | split row '---' | skip
open "2021-05-12 William y su novia la loca.md" | split row '---' | skip | first
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1 | from yaml
open "2021-05-12 William y su novia la loca.md" | lines | skip | take until {|i| $i == '---'}
open "2021-05-12 William y su novia la loca.md" | split row '---' | get 1 | from yaml
open "2021-05-12 William y su novia la loca.md" | lines | skip | take until {|i| $i == '---'}
open "2021-05-12 William y su novia la loca.md" | lines | take until {|i| $i == '---'}
open "2021-05-12 William y su novia la loca.md" | lines
open "2021-05-12 William y su novia la loca.md" | lines | skip
open "2021-05-12 William y su novia la loca.md" | lines | skip | take until {|i| $i == '---'}
open "2021-05-12 William y su novia la loca.md" | frontmatter 
z obs
clear
open "2021-05-12 William y su novia la loca.md" | frontmatter 
frontmatter  "2021-05-12 William y su novia la loca.md"
take while --help
z obs
frontmatter  "2021-05-12 William y su novia la loca.md"
frontmatter "2021-05-12 William y su novia la loca.md"
open --help
frontmatter "2021-05-12 William y su novia la loca.md"
or --help
clear
frontmatter "2021-05-12 William y su novia la loca.md"
"2021-05-12 William y su novia la loca.md" | frontmatter 
z obs
"2021-05-12 William y su novia la loca.md" | frontmatter 
"2021-05-12 William y su novia la loca.md" | frontmatter
z ob
"2021-05-12 William y su novia la loca.md" | frontmatter
z obs
frontmatter "2021-05-12 William y su novia la loca.md"
z ob
frontmatter "2021-05-12 William y su novia la loca.md"
$in
l
ls
$in
$it
ls | $it
$in
empty --help
ps | where name like .sync
ps | where name like ignis
ls ...(glob *) | where name like .sync-conflict
open -e `2022-03-31 Magito místico ancestral.md`
open `2022-03-31 Magito místico ancestral.md`
open `2022-03-31 Magito místico ancestral.md` | to md -e
open `2022-03-31 Magito místico ancestral.md` | to yaml
z obs
frontmatter "2021-05-12 William y su novia la loca.md"
z ob
frontmatter "2021-05-12 William y su novia la loca.md"
count
bytes length 
count --help
bytes length 
bytes length --help
z nu
cd autoload/
z ob
frontmatter "2021-05-12 William y su novia la loca.md"
z ob
frontmatter "2021-05-12 William y su novia la loca.md"
helix +frontmatter.nu 
ls
rm +frontmatter.nu
l
ls
cd Descargas
ls
ouch 
update --help
z ob
open `2022-03-31 Magito místico ancestral.md` | to yaml
open `2022-03-31 Magito místico ancestral.md` | to md
open `2022-03-31 Magito místico ancestral.md` | to yaml
ouch decompress `game-hollow.knight.silksong-(84692).rar`
ls
yazi
rm --permanent `game-hollow.knight.silksong-(84692).rar`
clear
ls
gio trash
gio trash --list
gio trash --empt
gio trash --empty
paru -Sy ignis-git
z ignis
cd .cache
ls
open options.json
paru -Sy python-ignis-git
killall ignis
job spawn { ignis init }
ps | where name like ignis
n
nc
nc --help
ncat
swww 
swww query
paru -S swww
socat
cd $env.XDG_RUNTIME_DIR
ls
nc -U sww-wayland-1.sock
nc --help
tldr nc
socat
tldr socta
tldr socat
socat - UNIX-CONNECT:/sww-wayland-1.sock
socat - UNIX-CONNECT:($env.XDG_RUNTIME_DIR/sww-wayland-1.sock)
socat - UNIX-CONNECT:($env.XDG_RUNTIME_DIR)/sww-($env.WAYLAND_DISPLAY).sock
socat - UNIX-CONNECT:($env.XDG_RUNTIME_DIR)/swww-($env.WAYLAND_DISPLAY).sock
z wall
cd Imagenes/Personal/Wallpapers/
ls
swww 
swww img anime-girl-with-cap-smoking-4k-wallpaper-uhdpaper.com-7123456j.png
query
echo query | socat - UNIX-CONNECT:($env.XDG_RUNTIME_DIR)/swww-($env.WAYLAND_DISPLAY).sock
socat - UNIX-CONNECT:($env.XDG_RUNTIME_DIR)/swww-($env.WAYLAND_DISPLAY).sock
swww query
z ~
cd .cache
open swww/VGA-1
swww query
gum
topgrade --yes --cleanup
z test
ls
cd .obsidian/
cd plugins/
ls
cd frontmatter-markdown-links/
ls
cd ..
clear
paru -Sy swww
ls
git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git
clear
ls
cd obsidian-copy-url-in-preview/
ls
clear
ls
lsg
lsg .
z nu
ls
lsg
commands
lsg
lsg .
lsg
lsg --help
lsg -a
lsg
lsg --all
lsg
lsg --all
lsg
lsg --all
lsg
lsg --all
lsg --help
lsg -a
ls -a
lsg
lsg -a
lsg
lsg -a
run --help
start --help
grid -h
lsg
lsg -a
lsg
lsg --hel
lsg --help
lsg -a
lsg
lsg -a
lsg
lsg -a
sort --help
sortman
sortman --help
ls
ls -a
sort --help
sort-by --help
lsg
lsg Descargas
z test
cd .obsidian/plugins/obsidian-copy-url-in-preview/
clear
ls
job spawn { foot }
clear
ls
deno --version
clear
deno install
clear
ls
git status
rm deno.lock
ls
clear
open package.json
open package.json | get scripts
code .
cd ..
rm -r obsidian-copy-url-in-preview/
deno task dev
cd ..
z test
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
cd obsidian-copy-url-in-preview/
ls -a
jj diff
ls -la
cd ..
ls -la
cd obsidian-copy-url-in-preview/
clear
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
z ob
cd .obsidian/plugins/
ls
clear
z test
cd .obsidian/plugins/
ls
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
cd obsidian-copy-url-in-preview/
clear
ls
z obsi
zi obs
clear
ls -la
clear
ls
jj b
job spawn { foot }
clear
deno intasll
deno install
clear
rm deno.lock
clear
clear
code .
deno task dev
clear
deno task dev
deno install
sudo mount -a
systemctl daemon-reload
sudo mount -a
ls
z 
cler
clear
z obsi
clear
zi obs
ls
cd ..
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
ls
cd obsidian-copy-url-in-preview/
zi test
cd .obsidian/plugins/
cd obsidian-copy-url-in-preview/
clear
mv --help
cd --help
deno install
clear
ls
clear
deno task dev
ls -la
deno task dev
yazi
ls
clear
mv .deno.lock
mv ..deno.lock
mv --help
mv ./deno.lock
mv ../deno.lock
mv --help
mv ../deno.lock/
mv deno.lock ..
cd ..
ls
lsg
ls
clear
deno task dev
cd node_modules/.deno/esbuild@0.25.9/node_modules/esbuild/
cd obsidian-copy-url-in-preview/
cd node_modules/.deno/esbuild@0.25.9/node_modules/esbuild/
ls
lsg
cd lib
ls
ls -la
touch xd.sh
ls -la
rm xd.sg
rm xd.sh
ls
cd Descargas
ls
ls -la
mdir xd
mkdir xd
cd xd/
touch xd.sh
ls -la
cd ..
ls
rm -r xd
z ob
z tes
cd .obsidian/plugins/
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
nmtui
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
ls
mv deno.lock obsidian-copy-url-in-preview/
cd obsidian-copy-url-in-preview/
ls
z test
cd .obsidian/plugins/obsidian-copy-url-in-preview/
ls
clear
ls
ls -la
open .editorconfig
clear
ls -a
deno install
deno task dev
systemctl daemon-reload
sudo mount -a
cd ..
sudo mount -a
cd ..
ls
rm -r obsidian-copy-url-in-preview/
touch xd.sh
ls
ls -la
rm xd.sh
z test
cd .obsidian/plugins/obsidian-copy-url-in-preview/
cd .obsidian/plugins/
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
ls
cd obsidian-copy-url-in-preview/
ls
jj status
jj diff
cd ..
ls
rm -r obsidian-copy-url-in-preview/
git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git
ls -a
cd obsidian-copy-url-in-preview/
ls
clear
glam
glum
gum
deno install
paru -Rns gum
open /proc/filesystems
open /proc/filesystems | ntfs3
open /proc/filesystems | rg ntfs3
uname
modprobe ntfs3
sudomodprobe ntfs3
sudo modprobe ntfs3
open /proc/filesystems | rg ntfs3
sudo helix /etc/modules-load.d/
ls
clear
ls
clear
ls
clear
cd Descargas
ls
ls -la
cd ..
ls
claer
clear
ls -la
cd Imagenes
ls -la
open /proc/filesystems | rg ntfs3
cd `Personal/🎨 Digitales/`
ls -la
cd ..
ls
ls -la
ls
ls -la
ls
ls -a
ls
cd *Comics
cd --help
cler
clear
ls
cd ..
ls
cd ..
l
sls -la
ls -la
cd Descargas
ls-la
ls -la
open /etc/fstab
clear
cd ..
systemctl daemon-reload
cd Descargas
ls
cd /mnt/626ECFC26ECF8CEB/
ls
cd sus
ls
cd Descargas/
ls
systemctl daemon-reload
ls
sudo mount -a
ls
cd Descargas
ls
ls -la
touch xd.sh
ls -la
rm xd.sh
ls -la
cd Descargas
ls -la
clear
ls -la
df
df -T
df -T | rg ntfs
findmdnt
findmnt 
findmnt | rg ntfs
ls -a
clear
ls -la
z test
cd .obsidian/plugins/
ls
ls -la
ls
rm -r obsidian-copy-url-in-preview/
jj git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git --colocate
git clone git@github.com:Rikiub/obsidian-copy-url-in-preview.git
ls
cd obsidian-copy-url-in-preview/
deno install
rm deno.lock
deno task dev
clear
job spawn { foot }
clear
code .
git remote
git switch -c feature/extra-buttons
git config --global --add safe.directory /mnt/Datos/sus/Publico/Test/.obsidian/plugins/obsidian-copy-url-in-preview
clear
git switch -c feature/extra-buttons
fastfetch 
z test
ls
cd .obsidian/plugins/
cd obsidian-copy-url-in-preview/
code .
job spawn {foot}
clear
uname 
uname | get kernel*
uname | get kernel-release
clear
z test
cd .obsidian/plugins/obsidian-copy-url-in-preview/
job spawn {foot}
clear
cod e.
code .
clear
z test
cd .obsidian/plugins/obsidian-copy-url-in-preview/
code .
clear
ps | where name like ignis
killall ignis
job spawn { ignis init }
ps | where name like ignis
uname
uname --help
uname 
ls
tree /
tree / --help
fsatfetch
fastfetch 
match
paru -Sy swww
tree / | rg color
tree --help | rg color
tree -C
tree -C /
clear
tree -C /
clear
fastfetch 
zramctl 
swapon
paru -Sy swww
paru -Ss caelestia
paru -S caelestia-shell
z quickshell
ls
yazi
gh repo clone caelestia-dots/shell
ls
quickshell --help
quickshell shell/shell.qml
quickshell -p shell/shell.qml
ls
mv shell/ caelestia
ls
quickshell -c caelestia
killall ignis
quickshell -c caelestia
yazi
clear
quickshell -c caelestia
paru -S caelestia-cli
ls
rm -r caelestia/
git clone https://github.com/jutraim/niri-caelestia-shell.git
ls
quickshell -c caelestia
quickshell -c niri-caelestia-shell
clear
ls
rm -r niri-caelestia-shell/
clear
paru -S caelestia-cli
sudo helix /etc/pacman.d/mirrorlist 
paru -S caelestia-shell
clear
paru -S paru -S dms-shell-git
paru -S dms-shell-git
z quickshell
ls
fastfetch 
ps | where name like quickshell
ps | where name like dms
ps | where name like qs
clear
ps | where name like qs
fastfetch 
ps | where name like qs
btop
clear
btop
killall qs
dms run
clear
paru -Rns dms-shell-git
paru -S caelestia-shell
qs -c caelestis-shell
qs -c caelestia-shell
ps | where name like qs
brop
caelestia
qs -c caelestia
caelestia emoji
caelestia toggle
caelestia shell --help
caelestia shell message --help
caelestia shell message launcher
caelestia shell -s
caelestia shell controlCenter
caelestia shell controlCenter open
caelestia shell launcher
caelestia shell launcher open
caelestia shell picke
caelestia shell picker open
caelestia shell drawer
caelestia shell drawer open
caelestia shell drawers open
caelestia shell drawers 
paru -Rn caelestia-shell
caelestia shell
clear
paru -Rns caelestia-shell
paru -S dms-shell-git
paru -Ss dms-shell
paru -S dms-shell
dms
dms --help
dms run
dms
dms --help
dms completion
clear
dms
dms --help
dms launcher
dms launcher --help
cd .config
ls
l
ls
clear
fastfetch 
dms shell
dms topbar
dms --help
dms bar
dms bar reveal
dms ipc
dms ipc --help
dms ipc 
cd .config
ls
rm -r DankMaterialShell/
clear
dms run
killall swww
killall swww-daemon
cd .config/gtk-3.0/
ls
yazi
paru -Ss qt6ct
paru -Ss qt6ct-kde
paru -S qt6ct-kde
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "brave"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "brave-browser"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Brave" --icon "firefox"
z niri
ls
bat dankshell-colors.kdl 
ls -a
z niri
ls
ls
dms shell
bat dankshell-colors.kdl 
z niri
dms launcher
dms ipc
niri ipc
dms ipc call
qs -c dms ipc call
dms ipc
qs -c dms ipc call
qs -c dms ipc call launcher
qs -c dms ipc call spotlight toggle
z niri
btop
ps | where name like qs
ps | where name like dms
ps | where name like qs
ls
clear
ls
ps | where name like qs
clear
ps | where name like qs
ps | where name like ignis
ps | where name like qs
clear
ps | where name like qs
btop
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Brave" --icon "firefox"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "Firefox" --icon "firefox"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios" --app-name "XA" --icon "firefox"
notify-send "Actualización Completada" "Por favor, reinicie el sistema para aplicar los cambios sa saf sa sa fas gsa gas gs ag sa as gsa gsa gas gsa g sa" --app-name "XA" --icon "firefox"
clear
paru -Ss dgop
dgop
dgop --help
ps | where name like dgop
btop
niri --help
niri | less
niri --help | less
niri --help | bat --pager
bat --paging 
niri --help | bat --paging
niri --help | bat -P
lutgen -h
lutgen -h | bat
niri --help | bat
niri help
niri panic
niri --help
niri help
niri msg
niri msg layers
ps | where name like dgop
z niri
paru -Rns darkman
qs -c dms ipc call processlist open
fastfetch 
qs -c dms ipc call powermenu toggle
qs -c dms ipc call file browser
qs -c dms ipc call file browse
qs -c dms ipc call file browse wallpaper
z wall
ls
z wall
clear
ls
clear
yazi
gemini
clear
ls
helix config.kdl 
clear
qs -c dms ipc call notepad open
z niri
ps | where name like dgop
ps | where name like qs
fastfetch 
ls
cat
ls
clar
clear
z .config/gtk-3.0/
ls
paru -Ss colloid
paru -S colloid
paru -S colloid-gtk-theme
killall qs
qs -c dms shell
dms hell
gsettings set org.gnome.desktop.interface gtk-theme colloid
gsettings get org.gnome.desktop.interface gtk-theme
ls /usr/share/themes
gsettings set org.gnome.desktop.interface gtk-theme Colloid
gsettings set org.gnome.desktop.interface gtk-theme Adwaita
ls
cd .config/gtk-3.0/
ls
gsettings set org.gnome.desktop.interface gtk-theme Colloid
gsettings set org.gnome.desktop.interface gtk-theme adw-gtk3
gsettings set org.gnome.desktop.interface gtk-theme "Colloid"
gsettings set org.gnome.desktop.interface gtk-theme "Colloid-Pink"
gsettings set org.gnome.desktop.interface gtk-theme "adw-gtk3"
clear
dms shell
job spawn { dms shell }
cd .config/gtk-3.0/
paru -Rns colloid-gtk-theme
paru -Rns colloid-gtk-theme-git
gsettings reset org.gnome.desktop.interface accent-color
ps | where name like qs
btop
clear
term 
term query
term size
term query --help
term query (ansi cursor_position) --prefix (ansi csi) --terminator 'R'
ps | where name like qs
time
sleep
sleep --help
paru -S qt6ct-kde
gsettings get org.gnome.desktop.interface gtk-theme
z niri
paru -S colloid-gtk-theme
gsettings set org.gnome.desktop.interface gtk-theme "Colloid"
ls
gsettings get org.gnome.desktop.interface gtk-theme "Colloid"
fastfetch 
paru -Rns colloid-gtk-theme
gsettings set org.gnome.desktop.interface gtk-theme "adw-gtk3"
paru -Rns colloid-gtk-theme-git
paru -S kmix
ls /usr/share/themes
paru -Ss arch
paru -Ss arc
paru -Rns arc-gtk-theme-eos
ls /usr/share/themes
paru -Ss emacs
clear
paru -pwvucontrol
paru -Sspwvucontrol
paru -Ss pwvucontrol
paru -S pwvucontrol
paru -Rns kmix
pwvucontrol
cd .config/gtk-3.0/
paru -Ss over
paru -Rns pwvucontrol pavucontrol
clear
paru -Ss overskride
clera
clear
paru -Ss syncthingtray
flatpak search syncthing
flatpak list
flatpak uninstall io.github.martchus.syncthingtray 
flatpak uninstall --unused
flatpak list
paru -Ss syncthingtray-qt6
paru -Ss gapless
paru -Ss g4music
paru -S syncthingtray-qt6
ls
clear
ls
cd .config/autostart/
ls
yazi
ls
cp /usr/share/applications/syncthingtray-qt6.desktop 
cp /usr/share/applications/syncthingtray-qt6.desktop .
ls
bat syncthingtray-qt6.desktop 
clear
syncthingtray-qt6 
ls
yazi
clear
ps | where name like syncthing
clear
fastfetch 
ps | where name like syncthing
ps | where name like qs
paru -Ss linux-cachyos
ps | where name like qs
ps | where name like syncthing
ls /etc/xdg/autostart/
paru -Qs linux-cachyos
paru -Rns linux-cachyos linux-cachyos-headers
ps | where name like syncthing
sudo grub-mkconfig -o /boot/grub/grub.cfg 
clear
fastfetch 
z ignis
ls
ls -a
ls
z yolk
yolk sync
z yolk
yolk sync
yazi
yolk sync
ls
cd .config
ls
yazi
clear
yazi
bash
ls
lsg
yolk syn
yolk sync
cd ..
cd .local
ls ...(glob *) | where type == symlink
ls ...(glob *) | where type == symlink | where {not ($in.name | path exists)}
ls ...(glob *) | where type == symlink | where {not ($in.name | path exists)} | each {rm $in.name}
yolk sync
ls
clear
ls
clear
ls -a
ls
clear
ls
clear
yazi
clear
ls
